package gov.nasa.jpf.star.examples.aatree;

import gov.nasa.jpf.star.examples.aatree.AATree.AANode;
import gov.nasa.jpf.star.examples.Utilities;
import org.junit.Test;
import gov.nasa.jpf.util.test.TestJPF;

public class AATree_remove9Steps extends TestJPF {

	@Test
	public void test_wellFormed1() throws Exception {
		AATree obj = new AATree();
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2() throws Exception {
		AATree obj = new AATree();
		int level_4 = 1;
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode left_2 = null;
		AANode right_3 = null;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed3() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		obj.root = obj.nullNode;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed4() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		obj.root = left_2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed5() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		obj.root = right_3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed6() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		obj.root = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed7() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed8() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed9() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed10() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed11() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed12() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed13() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed14() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = left_6;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed15() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = left_6;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed16() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_7 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed17() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed18() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed19() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed20() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.nullNode;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed21() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed22() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_2;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed23() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed24() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed25() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_2;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed26() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed27() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_3;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed28() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed29() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed30() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_3;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed31() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed32() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed33() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_6;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed34() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed35() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed36() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_6;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed37() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed38() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed39() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_10;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed40() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed41() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed42() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_10;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed43() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed44() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode right_11 = null;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed45() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode left_14 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int element_13 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed46() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode left_14 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int element_13 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed47() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode left_14 = right_11;
		int element_9 = 0;
		int element_5 = -1;
		int element_13 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed48() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		AANode left_14 = null;
		int element_9 = 0;
		int element_5 = -1;
		int element_13 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed49() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_14 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		int element_5 = -1;
		int element_13 = 1;
		int element_37 = 0;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		AANode left_38 = null;
		AANode right_39 = null;
		int level_40 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		left_14.element = element_37;
		left_14.left = left_38;
		left_14.right = right_39;
		left_14.level = level_40;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed50() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_14 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		int element_5 = -2;
		int element_13 = 0;
		int element_37 = 0;
		int element_9 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_15 = null;
		int level_16 = 0;
		AANode left_38 = null;
		AANode right_39 = null;
		int level_40 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		left_14.element = element_37;
		left_14.left = left_38;
		left_14.right = right_39;
		left_14.level = level_40;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed51() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int element_13 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode left_14 = null;
		AANode right_15 = null;
		int level_16 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_13;
		right_11.left = left_14;
		right_11.right = right_15;
		right_11.level = level_16;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed52() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed53() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed54() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed55() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.nullNode;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed56() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed57() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_2;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed58() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed59() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed60() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_2;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed61() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed62() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_3;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed63() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed64() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed65() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_3;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed66() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed67() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed68() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_6;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed69() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed70() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed71() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_6;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed72() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed73() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed74() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_10;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed75() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed76() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed77() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_10;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed78() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed79() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode right_11 = null;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed80() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode left_46 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int element_45 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed81() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode left_46 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int element_45 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed82() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode left_46 = right_11;
		int element_9 = 0;
		int element_5 = -1;
		int element_45 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed83() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		AANode left_46 = null;
		int element_9 = 0;
		int element_5 = -1;
		int element_45 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed84() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_46 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		int element_5 = -1;
		int element_45 = 1;
		int element_69 = 0;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		AANode left_70 = null;
		AANode right_71 = null;
		int level_72 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		left_46.element = element_69;
		left_46.left = left_70;
		left_46.right = right_71;
		left_46.level = level_72;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed85() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_46 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		int element_5 = -2;
		int element_45 = 0;
		int element_69 = 0;
		int element_9 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_47 = null;
		int level_48 = 0;
		AANode left_70 = null;
		AANode right_71 = null;
		int level_72 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		left_46.element = element_69;
		left_46.left = left_70;
		left_46.right = right_71;
		left_46.level = level_72;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed86() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_2;
		int element_9 = 0;
		int element_5 = -1;
		int element_45 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode left_46 = null;
		AANode right_47 = null;
		int level_48 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_45;
		right_11.left = left_46;
		right_11.right = right_47;
		right_11.level = level_48;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed87() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed88() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed89() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed90() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.nullNode;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed91() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed92() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_2;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed93() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed94() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed95() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_2;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed96() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed97() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_3;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed98() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed99() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed100() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_3;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed101() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed102() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed103() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_6;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed104() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed105() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed106() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_6;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed107() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed108() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed109() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_10;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed110() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed111() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed112() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_10;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed113() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed114() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode right_11 = null;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed115() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode left_78 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int element_77 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed116() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode left_78 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int element_77 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed117() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode left_78 = right_11;
		int element_9 = 0;
		int element_5 = -1;
		int element_77 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed118() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		AANode left_78 = null;
		int element_9 = 0;
		int element_5 = -1;
		int element_77 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed119() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_78 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		int element_5 = -1;
		int element_101 = 0;
		int element_77 = 1;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		AANode left_102 = null;
		AANode right_103 = null;
		int level_104 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		left_78.element = element_101;
		left_78.left = left_102;
		left_78.right = right_103;
		left_78.level = level_104;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed120() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_78 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		int element_5 = -2;
		int element_101 = 0;
		int element_77 = 0;
		int element_9 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_79 = null;
		int level_80 = 0;
		AANode left_102 = null;
		AANode right_103 = null;
		int level_104 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		left_78.element = element_101;
		left_78.left = left_102;
		left_78.right = right_103;
		left_78.level = level_104;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed121() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_3;
		int element_9 = 0;
		int element_5 = -1;
		int element_77 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode left_78 = null;
		AANode right_79 = null;
		int level_80 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_77;
		right_11.left = left_78;
		right_11.right = right_79;
		right_11.level = level_80;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed122() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed123() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed124() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed125() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed126() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.nullNode;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed127() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.nullNode;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed128() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_2;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed129() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed130() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed131() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_2;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed132() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_2;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed133() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_3;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed134() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed135() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed136() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_3;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed137() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_3;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed138() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed139() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_6;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed140() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed141() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed142() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_6;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed143() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_6;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed144() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed145() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_10;
		int element_9 = 0;
		int element_5 = -1;
		int level_8 = 6;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed146() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed147() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed148() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_10;
		int element_9 = 1;
		int level_8 = 1;
		int element_5 = 0;
		int level_12 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed149() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = left_10;
		int element_9 = 0;
		int level_8 = 1;
		int element_5 = -1;
		int level_12 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed150() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode right_11 = null;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed151() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode left_110 = obj.root;
		int element_9 = 0;
		int element_5 = -1;
		int element_109 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed152() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode left_110 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int element_109 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed153() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode left_110 = right_11;
		int element_9 = 0;
		int element_5 = -1;
		int element_109 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed154() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		AANode left_110 = null;
		int element_9 = 0;
		int element_5 = -1;
		int element_109 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed155() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_110 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		int element_109 = 1;
		int element_133 = 0;
		int element_5 = -1;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		AANode left_134 = null;
		AANode right_135 = null;
		int level_136 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		left_110.element = element_133;
		left_110.left = left_134;
		left_110.right = right_135;
		left_110.level = level_136;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed156() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_110 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		int element_109 = 0;
		int element_133 = 0;
		int element_5 = -2;
		int element_9 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode right_111 = null;
		int level_112 = 0;
		AANode left_134 = null;
		AANode right_135 = null;
		int level_136 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		left_110.element = element_133;
		left_110.left = left_134;
		left_110.right = right_135;
		left_110.level = level_136;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed157() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_11 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = left_6;
		int element_9 = 0;
		int element_5 = -1;
		int element_109 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_12 = 0;
		AANode left_110 = null;
		AANode right_111 = null;
		int level_112 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		right_11.element = element_109;
		right_11.left = left_110;
		right_11.right = right_111;
		right_11.level = level_112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed158() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = right_7;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed159() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_10 = null;
		int element_9 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed160() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		AANode right_143 = obj.root;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed161() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		AANode right_143 = right_7;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed162() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		AANode right_143 = left_10;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed163() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		AANode right_143 = null;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed164() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		int element_141 = -1;
		int element_165 = -1;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_166 = null;
		AANode right_167 = null;
		int level_168 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_165;
		right_143.left = left_166;
		right_143.right = right_167;
		right_143.level = level_168;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed165() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.nullNode;
		int element_141 = -1;
		int element_165 = 0;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_166 = null;
		AANode right_167 = null;
		int level_168 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_165;
		right_143.left = left_166;
		right_143.right = right_167;
		right_143.level = level_168;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed166() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		AANode right_143 = obj.root;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed167() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		AANode right_143 = right_7;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed168() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		AANode right_143 = left_10;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed169() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		AANode right_143 = null;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed170() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		int element_141 = -1;
		int element_193 = -1;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_194 = null;
		AANode right_195 = null;
		int level_196 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_193;
		right_143.left = left_194;
		right_143.right = right_195;
		right_143.level = level_196;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed171() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_2;
		int element_141 = -1;
		int element_193 = 0;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_194 = null;
		AANode right_195 = null;
		int level_196 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_193;
		right_143.left = left_194;
		right_143.right = right_195;
		right_143.level = level_196;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed172() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		AANode right_143 = obj.root;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed173() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		AANode right_143 = right_7;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed174() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		AANode right_143 = left_10;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed175() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		AANode right_143 = null;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed176() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		int element_141 = -1;
		int element_221 = -1;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_222 = null;
		AANode right_223 = null;
		int level_224 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_221;
		right_143.left = left_222;
		right_143.right = right_223;
		right_143.level = level_224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed177() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_3;
		int element_141 = -1;
		int element_221 = 0;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_222 = null;
		AANode right_223 = null;
		int level_224 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_221;
		right_143.left = left_222;
		right_143.right = right_223;
		right_143.level = level_224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed178() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = obj.root;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed179() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		AANode right_143 = obj.root;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed180() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		AANode right_143 = right_7;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed181() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		AANode right_143 = left_10;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed182() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		AANode right_143 = null;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed183() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		int element_141 = -1;
		int element_249 = -1;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_250 = null;
		AANode right_251 = null;
		int level_252 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_249;
		right_143.left = left_250;
		right_143.right = right_251;
		right_143.level = level_252;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed184() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode right_143 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_6;
		int element_141 = -1;
		int element_249 = 0;
		int element_5 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		int level_144 = 0;
		AANode left_250 = null;
		AANode right_251 = null;
		int level_252 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		right_143.element = element_249;
		right_143.left = left_250;
		right_143.right = right_251;
		right_143.level = level_252;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed185() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = right_7;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed186() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = left_10;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed187() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_142 = null;
		int element_9 = 0;
		int element_5 = -2;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed188() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_258 = obj.root;
		int element_141 = 2;
		int element_5 = 0;
		int element_257 = 1;
		int element_9 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed189() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_258 = right_7;
		int element_141 = -1;
		int element_5 = -3;
		int element_257 = -2;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed190() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_258 = left_10;
		int element_141 = 2;
		int element_5 = 0;
		int element_257 = 1;
		int element_9 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed191() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_258 = left_142;
		int element_141 = 2;
		int element_5 = 0;
		int element_257 = 1;
		int element_9 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed192() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_258 = null;
		int element_141 = 2;
		int element_5 = 0;
		int element_257 = 1;
		int element_9 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed193() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_141 = 2;
		int element_277 = 0;
		int element_5 = 0;
		int element_257 = 1;
		int element_9 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		AANode left_278 = null;
		AANode right_279 = null;
		int level_280 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		left_258.element = element_277;
		left_258.left = left_278;
		left_258.right = right_279;
		left_258.level = level_280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed194() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_141 = 1;
		int element_277 = 0;
		int element_5 = -1;
		int element_257 = 0;
		int element_9 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode right_259 = null;
		int level_260 = 0;
		AANode left_278 = null;
		AANode right_279 = null;
		int level_280 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		left_258.element = element_277;
		left_258.left = left_278;
		left_258.right = right_279;
		left_258.level = level_280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed195() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_9 = 2;
		int element_5 = 0;
		int element_141 = 1;
		int element_257 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode left_258 = null;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed196() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_142 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_9 = 1;
		int element_5 = -1;
		int element_141 = 0;
		int element_257 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode right_143 = null;
		int level_144 = 0;
		AANode left_258 = null;
		AANode right_259 = null;
		int level_260 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		left_142.element = element_257;
		left_142.left = left_258;
		left_142.right = right_259;
		left_142.level = level_260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed197() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int element_141 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode left_142 = null;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed198() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_10 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_9 = 0;
		int element_5 = -1;
		int element_141 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_11 = null;
		int level_12 = 0;
		AANode left_142 = null;
		AANode right_143 = null;
		int level_144 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		left_10.element = element_141;
		left_10.left = left_142;
		left_10.right = right_143;
		left_10.level = level_144;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed199() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_5 = 0;
		int element_9 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode left_10 = null;
		AANode right_11 = null;
		int level_12 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_9;
		right_7.left = left_10;
		right_7.right = right_11;
		right_7.level = level_12;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed200() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed201() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed202() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = left_2;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed203() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed204() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = right_3;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed205() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed206() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed207() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = left_6;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed208() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = left_6;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed209() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode right_7 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed210() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed211() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed212() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed213() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed214() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed215() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed216() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed217() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed218() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed219() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed220() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed221() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed222() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed223() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed224() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed225() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = obj.root;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed226() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed227() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed228() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed229() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed230() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed231() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = right_7;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed232() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed233() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed234() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed235() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_286;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed236() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed237() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode right_287 = null;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed238() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode left_290 = obj.root;
		int element_5 = -1;
		int element_289 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed239() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode left_290 = right_7;
		int element_5 = -1;
		int element_289 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed240() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode left_290 = right_287;
		int element_5 = -1;
		int element_289 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed241() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		AANode left_290 = null;
		int element_5 = -1;
		int element_289 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed242() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_290 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		int element_313 = 0;
		int element_285 = 0;
		int element_5 = -1;
		int element_289 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		AANode left_314 = null;
		AANode right_315 = null;
		int level_316 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		left_290.element = element_313;
		left_290.left = left_314;
		left_290.right = right_315;
		left_290.level = level_316;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed243() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_290 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		int element_313 = 0;
		int element_285 = -1;
		int element_5 = -2;
		int element_289 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_291 = null;
		int level_292 = 0;
		AANode left_314 = null;
		AANode right_315 = null;
		int level_316 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		left_290.element = element_313;
		left_290.left = left_314;
		left_290.right = right_315;
		left_290.level = level_316;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed244() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.nullNode;
		int element_5 = -1;
		int element_289 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode left_290 = null;
		AANode right_291 = null;
		int level_292 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_289;
		right_287.left = left_290;
		right_287.right = right_291;
		right_287.level = level_292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed245() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed246() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed247() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed248() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed249() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed250() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed251() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed252() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed253() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed254() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed255() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed256() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed257() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed258() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed259() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed260() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = obj.root;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed261() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed262() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed263() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed264() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed265() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed266() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = right_7;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed267() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed268() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed269() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed270() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_286;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed271() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed272() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode right_287 = null;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed273() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode left_322 = obj.root;
		int element_5 = -1;
		int element_321 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed274() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode left_322 = right_7;
		int element_5 = -1;
		int element_321 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed275() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode left_322 = right_287;
		int element_5 = -1;
		int element_321 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed276() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		AANode left_322 = null;
		int element_5 = -1;
		int element_321 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed277() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_322 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		int element_285 = 0;
		int element_5 = -1;
		int element_321 = 1;
		int level_4 = 0;
		int element_345 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		AANode left_346 = null;
		AANode right_347 = null;
		int level_348 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		left_322.element = element_345;
		left_322.left = left_346;
		left_322.right = right_347;
		left_322.level = level_348;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed278() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_322 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		int element_285 = -1;
		int element_5 = -2;
		int element_321 = 0;
		int level_4 = 0;
		int element_345 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_323 = null;
		int level_324 = 0;
		AANode left_346 = null;
		AANode right_347 = null;
		int level_348 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		left_322.element = element_345;
		left_322.left = left_346;
		left_322.right = right_347;
		left_322.level = level_348;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed279() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_2;
		int element_5 = -1;
		int element_321 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode left_322 = null;
		AANode right_323 = null;
		int level_324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_321;
		right_287.left = left_322;
		right_287.right = right_323;
		right_287.level = level_324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed280() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed281() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed282() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed283() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed284() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed285() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed286() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed287() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed288() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed289() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed290() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed291() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed292() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed293() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed294() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed295() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = obj.root;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed296() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed297() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed298() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed299() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed300() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed301() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = right_7;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed302() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed303() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed304() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed305() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_286;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed306() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed307() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode right_287 = null;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed308() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode left_354 = obj.root;
		int element_5 = -1;
		int element_353 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed309() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode left_354 = right_7;
		int element_5 = -1;
		int element_353 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed310() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode left_354 = right_287;
		int element_5 = -1;
		int element_353 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed311() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		AANode left_354 = null;
		int element_5 = -1;
		int element_353 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed312() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_354 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		int element_377 = 0;
		int element_285 = 0;
		int element_5 = -1;
		int element_353 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		AANode left_378 = null;
		AANode right_379 = null;
		int level_380 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		left_354.element = element_377;
		left_354.left = left_378;
		left_354.right = right_379;
		left_354.level = level_380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed313() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_354 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		int element_377 = 0;
		int element_285 = -1;
		int element_5 = -2;
		int element_353 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_355 = null;
		int level_356 = 0;
		AANode left_378 = null;
		AANode right_379 = null;
		int level_380 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		left_354.element = element_377;
		left_354.left = left_378;
		left_354.right = right_379;
		left_354.level = level_380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed314() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_3;
		int element_5 = -1;
		int element_353 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode left_354 = null;
		AANode right_355 = null;
		int level_356 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_353;
		right_287.left = left_354;
		right_287.right = right_355;
		right_287.level = level_356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed315() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = obj.root;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed316() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed317() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed318() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed319() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed320() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed321() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed322() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed323() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed324() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed325() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed326() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed327() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed328() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed329() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed330() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed331() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = obj.root;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed332() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed333() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed334() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed335() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed336() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed337() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = right_7;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed338() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 6;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed339() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 2;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed340() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed341() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_286;
		int element_5 = 0;
		int level_8 = 1;
		int level_288 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed342() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = left_286;
		int element_5 = -1;
		int level_8 = 1;
		int level_288 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed343() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode right_287 = null;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed344() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode left_386 = obj.root;
		int element_5 = -1;
		int element_385 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed345() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode left_386 = right_7;
		int element_5 = -1;
		int element_385 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed346() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode left_386 = right_287;
		int element_5 = -1;
		int element_385 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed347() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		AANode left_386 = null;
		int element_5 = -1;
		int element_385 = 1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed348() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		int element_285 = 0;
		int element_385 = 1;
		int element_409 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		AANode left_410 = null;
		AANode right_411 = null;
		int level_412 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		left_386.element = element_409;
		left_386.left = left_410;
		left_386.right = right_411;
		left_386.level = level_412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed349() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		int element_285 = -1;
		int element_385 = 0;
		int element_409 = 0;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode right_387 = null;
		int level_388 = 0;
		AANode left_410 = null;
		AANode right_411 = null;
		int level_412 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		left_386.element = element_409;
		left_386.left = left_410;
		left_386.right = right_411;
		left_386.level = level_412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed350() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_287 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = left_6;
		int element_5 = -1;
		int element_385 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_288 = 0;
		AANode left_386 = null;
		AANode right_387 = null;
		int level_388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		right_287.element = element_385;
		right_287.left = left_386;
		right_287.right = right_387;
		right_287.level = level_388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed351() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = right_7;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed352() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_286 = null;
		int element_5 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed353() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		AANode right_419 = obj.root;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed354() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		AANode right_419 = right_7;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed355() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		AANode right_419 = left_286;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed356() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		AANode right_419 = null;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed357() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		int element_417 = -1;
		int element_285 = 0;
		int element_5 = -2;
		int level_4 = 0;
		int element_441 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_442 = null;
		AANode right_443 = null;
		int level_444 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_441;
		right_419.left = left_442;
		right_419.right = right_443;
		right_419.level = level_444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed358() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.nullNode;
		int element_417 = -1;
		int element_285 = 0;
		int element_5 = -2;
		int level_4 = 0;
		int element_441 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_442 = null;
		AANode right_443 = null;
		int level_444 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_441;
		right_419.left = left_442;
		right_419.right = right_443;
		right_419.level = level_444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed359() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		AANode right_419 = obj.root;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed360() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		AANode right_419 = right_7;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed361() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		AANode right_419 = left_286;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed362() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		AANode right_419 = null;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed363() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		int element_417 = -1;
		int element_469 = -1;
		int element_285 = 0;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_470 = null;
		AANode right_471 = null;
		int level_472 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_469;
		right_419.left = left_470;
		right_419.right = right_471;
		right_419.level = level_472;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed364() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_2;
		int element_417 = -1;
		int element_469 = 0;
		int element_285 = 0;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_470 = null;
		AANode right_471 = null;
		int level_472 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_469;
		right_419.left = left_470;
		right_419.right = right_471;
		right_419.level = level_472;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed365() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		AANode right_419 = obj.root;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed366() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		AANode right_419 = right_7;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed367() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		AANode right_419 = left_286;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed368() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		AANode right_419 = null;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed369() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		int element_417 = -1;
		int element_285 = 0;
		int element_497 = -1;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_498 = null;
		AANode right_499 = null;
		int level_500 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_497;
		right_419.left = left_498;
		right_419.right = right_499;
		right_419.level = level_500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed370() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_3;
		int element_417 = -1;
		int element_285 = 0;
		int element_497 = 0;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_498 = null;
		AANode right_499 = null;
		int level_500 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_497;
		right_419.left = left_498;
		right_419.right = right_499;
		right_419.level = level_500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed371() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = obj.root;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed372() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		AANode right_419 = obj.root;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed373() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		AANode right_419 = right_7;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed374() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		AANode right_419 = left_286;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed375() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		AANode right_419 = null;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed376() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		int element_417 = -1;
		int element_285 = 0;
		int element_5 = -2;
		int element_525 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_526 = null;
		AANode right_527 = null;
		int level_528 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_525;
		right_419.left = left_526;
		right_419.right = right_527;
		right_419.level = level_528;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed377() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode right_419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_6;
		int element_417 = -1;
		int element_285 = 0;
		int element_5 = -2;
		int element_525 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		int level_420 = 0;
		AANode left_526 = null;
		AANode right_527 = null;
		int level_528 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		right_419.element = element_525;
		right_419.left = left_526;
		right_419.right = right_527;
		right_419.level = level_528;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed378() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = right_7;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed379() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = left_286;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed380() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_418 = null;
		int element_5 = -2;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed381() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_534 = obj.root;
		int element_417 = 2;
		int element_533 = 1;
		int element_285 = 3;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed382() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_534 = right_7;
		int element_417 = -1;
		int element_533 = -2;
		int element_285 = 0;
		int element_5 = -3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed383() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_534 = left_286;
		int element_417 = 2;
		int element_533 = 1;
		int element_285 = 3;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed384() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_534 = left_418;
		int element_417 = 2;
		int element_533 = 1;
		int element_285 = 3;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed385() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		AANode left_534 = null;
		int element_417 = 2;
		int element_533 = 1;
		int element_285 = 3;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed386() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_534 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_417 = 2;
		int element_533 = 1;
		int element_285 = 3;
		int element_5 = 0;
		int element_553 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		AANode left_554 = null;
		AANode right_555 = null;
		int level_556 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		left_534.element = element_553;
		left_534.left = left_554;
		left_534.right = right_555;
		left_534.level = level_556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed387() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_534 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_417 = 1;
		int element_533 = 0;
		int element_285 = 2;
		int element_5 = -1;
		int element_553 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode right_535 = null;
		int level_536 = 0;
		AANode left_554 = null;
		AANode right_555 = null;
		int level_556 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		left_534.element = element_553;
		left_534.left = left_554;
		left_534.right = right_555;
		left_534.level = level_556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed388() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_5 = 0;
		int element_417 = 1;
		int element_533 = 0;
		int element_285 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode left_534 = null;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed389() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_5 = -1;
		int element_417 = 0;
		int element_533 = 0;
		int element_285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode right_419 = null;
		int level_420 = 0;
		AANode left_534 = null;
		AANode right_535 = null;
		int level_536 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		left_418.element = element_533;
		left_418.left = left_534;
		left_418.right = right_535;
		left_418.level = level_536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed390() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_5 = -1;
		int element_417 = -1;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode left_418 = null;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed391() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_5 = -1;
		int element_417 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_287 = null;
		int level_288 = 0;
		AANode left_418 = null;
		AANode right_419 = null;
		int level_420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		left_286.element = element_417;
		left_286.left = left_418;
		left_286.right = right_419;
		left_286.level = level_420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed392() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = left_2;
		int element_5 = 0;
		int element_285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode left_286 = null;
		AANode right_287 = null;
		int level_288 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_285;
		right_7.left = left_286;
		right_7.right = right_287;
		right_7.level = level_288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed393() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed394() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed395() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = left_2;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed396() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed397() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = right_3;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed398() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed399() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed400() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = left_6;
		int level_8 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed401() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = left_6;
		int level_8 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed402() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode right_7 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed403() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed404() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed405() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed406() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed407() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed408() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed409() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed410() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed411() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed412() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed413() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed414() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed415() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed416() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed417() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed418() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed419() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed420() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed421() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed422() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed423() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed424() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed425() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed426() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed427() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed428() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_562;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed429() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed430() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode right_563 = null;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed431() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode left_566 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int element_565 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed432() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode left_566 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int element_565 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed433() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode left_566 = right_563;
		int element_5 = -1;
		int element_561 = 0;
		int element_565 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed434() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		AANode left_566 = null;
		int element_5 = -1;
		int element_561 = 0;
		int element_565 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed435() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_566 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		int element_561 = 0;
		int element_589 = 0;
		int element_5 = -1;
		int element_565 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		AANode left_590 = null;
		AANode right_591 = null;
		int level_592 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		left_566.element = element_589;
		left_566.left = left_590;
		left_566.right = right_591;
		left_566.level = level_592;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed436() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_566 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		int element_561 = -1;
		int element_589 = 0;
		int element_5 = -2;
		int element_565 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_567 = null;
		int level_568 = 0;
		AANode left_590 = null;
		AANode right_591 = null;
		int level_592 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		left_566.element = element_589;
		left_566.left = left_590;
		left_566.right = right_591;
		left_566.level = level_592;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed437() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.nullNode;
		int element_5 = -1;
		int element_561 = 0;
		int element_565 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode left_566 = null;
		AANode right_567 = null;
		int level_568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_565;
		right_563.left = left_566;
		right_563.right = right_567;
		right_563.level = level_568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed438() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed439() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed440() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed441() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed442() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed443() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed444() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed445() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed446() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed447() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed448() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed449() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed450() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed451() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed452() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed453() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed454() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed455() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed456() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed457() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed458() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed459() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed460() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed461() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed462() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed463() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_562;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed464() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed465() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode right_563 = null;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed466() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode left_598 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int element_597 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed467() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode left_598 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int element_597 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed468() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode left_598 = right_563;
		int element_5 = -1;
		int element_561 = 0;
		int element_597 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed469() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		AANode left_598 = null;
		int element_5 = -1;
		int element_561 = 0;
		int element_597 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed470() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_598 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		int element_561 = 0;
		int element_597 = 1;
		int element_5 = -1;
		int element_621 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		AANode left_622 = null;
		AANode right_623 = null;
		int level_624 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		left_598.element = element_621;
		left_598.left = left_622;
		left_598.right = right_623;
		left_598.level = level_624;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed471() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_598 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		int element_561 = -1;
		int element_597 = 0;
		int element_5 = -2;
		int element_621 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_599 = null;
		int level_600 = 0;
		AANode left_622 = null;
		AANode right_623 = null;
		int level_624 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		left_598.element = element_621;
		left_598.left = left_622;
		left_598.right = right_623;
		left_598.level = level_624;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed472() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_2;
		int element_5 = -1;
		int element_561 = 0;
		int element_597 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode left_598 = null;
		AANode right_599 = null;
		int level_600 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_597;
		right_563.left = left_598;
		right_563.right = right_599;
		right_563.level = level_600;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed473() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed474() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed475() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed476() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed477() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed478() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed479() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed480() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed481() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed482() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed483() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed484() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed485() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed486() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed487() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed488() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed489() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed490() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed491() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed492() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed493() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed494() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed495() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed496() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed497() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed498() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_562;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed499() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed500() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode right_563 = null;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed501() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode left_630 = obj.root;
		int element_5 = -1;
		int element_629 = 1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed502() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode left_630 = right_7;
		int element_5 = -1;
		int element_629 = 1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed503() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode left_630 = right_563;
		int element_5 = -1;
		int element_629 = 1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed504() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		AANode left_630 = null;
		int element_5 = -1;
		int element_629 = 1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed505() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_630 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		int element_653 = 0;
		int element_561 = 0;
		int element_5 = -1;
		int element_629 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		AANode left_654 = null;
		AANode right_655 = null;
		int level_656 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		left_630.element = element_653;
		left_630.left = left_654;
		left_630.right = right_655;
		left_630.level = level_656;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed506() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_630 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		int element_653 = 0;
		int element_561 = -1;
		int element_5 = -2;
		int element_629 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_631 = null;
		int level_632 = 0;
		AANode left_654 = null;
		AANode right_655 = null;
		int level_656 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		left_630.element = element_653;
		left_630.left = left_654;
		left_630.right = right_655;
		left_630.level = level_656;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed507() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_3;
		int element_5 = -1;
		int element_629 = 0;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode left_630 = null;
		AANode right_631 = null;
		int level_632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_629;
		right_563.left = left_630;
		right_563.right = right_631;
		right_563.level = level_632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed508() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed509() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed510() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed511() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed512() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed513() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed514() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed515() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed516() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed517() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_2;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed518() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_2;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed519() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed520() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed521() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed522() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_3;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed523() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_3;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed524() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed525() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed526() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed527() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed528() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_6;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed529() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_6;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed530() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed531() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 6;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed532() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed533() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed534() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_562;
		int element_5 = 0;
		int level_8 = 1;
		int element_561 = 1;
		int level_564 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed535() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = left_562;
		int element_5 = -1;
		int level_8 = 1;
		int element_561 = 0;
		int level_564 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed536() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode right_563 = null;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed537() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode left_662 = obj.root;
		int element_5 = -1;
		int element_561 = 0;
		int element_661 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed538() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode left_662 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int element_661 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed539() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode left_662 = right_563;
		int element_5 = -1;
		int element_561 = 0;
		int element_661 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed540() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		AANode left_662 = null;
		int element_5 = -1;
		int element_561 = 0;
		int element_661 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed541() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_662 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		int element_561 = 0;
		int element_661 = 1;
		int element_685 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		AANode left_686 = null;
		AANode right_687 = null;
		int level_688 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		left_662.element = element_685;
		left_662.left = left_686;
		left_662.right = right_687;
		left_662.level = level_688;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed542() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_662 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		int element_561 = -1;
		int element_661 = 0;
		int element_685 = 0;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode right_663 = null;
		int level_664 = 0;
		AANode left_686 = null;
		AANode right_687 = null;
		int level_688 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		left_662.element = element_685;
		left_662.left = left_686;
		left_662.right = right_687;
		left_662.level = level_688;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed543() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_563 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = left_6;
		int element_5 = -1;
		int element_561 = 0;
		int element_661 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_564 = 0;
		AANode left_662 = null;
		AANode right_663 = null;
		int level_664 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		right_563.element = element_661;
		right_563.left = left_662;
		right_563.right = right_663;
		right_563.level = level_664;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed544() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = right_7;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed545() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_562 = null;
		int element_5 = -1;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed546() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		AANode right_695 = obj.root;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed547() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		AANode right_695 = right_7;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed548() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		AANode right_695 = left_562;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed549() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		AANode right_695 = null;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed550() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int element_717 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_718 = null;
		AANode right_719 = null;
		int level_720 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_717;
		right_695.left = left_718;
		right_695.right = right_719;
		right_695.level = level_720;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed551() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.nullNode;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int element_717 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_718 = null;
		AANode right_719 = null;
		int level_720 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_717;
		right_695.left = left_718;
		right_695.right = right_719;
		right_695.level = level_720;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed552() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		AANode right_695 = obj.root;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed553() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		AANode right_695 = right_7;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed554() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		AANode right_695 = left_562;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed555() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		AANode right_695 = null;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed556() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		int element_561 = 0;
		int element_745 = -1;
		int element_693 = -1;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_746 = null;
		AANode right_747 = null;
		int level_748 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_745;
		right_695.left = left_746;
		right_695.right = right_747;
		right_695.level = level_748;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed557() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_2;
		int element_561 = 0;
		int element_745 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_746 = null;
		AANode right_747 = null;
		int level_748 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_745;
		right_695.left = left_746;
		right_695.right = right_747;
		right_695.level = level_748;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed558() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		AANode right_695 = obj.root;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed559() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		AANode right_695 = right_7;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed560() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		AANode right_695 = left_562;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed561() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		AANode right_695 = null;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed562() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int element_773 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_774 = null;
		AANode right_775 = null;
		int level_776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_773;
		right_695.left = left_774;
		right_695.right = right_775;
		right_695.level = level_776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed563() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_3;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int element_773 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_774 = null;
		AANode right_775 = null;
		int level_776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_773;
		right_695.left = left_774;
		right_695.right = right_775;
		right_695.level = level_776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed564() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = obj.root;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed565() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		AANode right_695 = obj.root;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed566() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		AANode right_695 = right_7;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed567() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		AANode right_695 = left_562;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed568() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		AANode right_695 = null;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed569() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int level_4 = 0;
		int element_801 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_802 = null;
		AANode right_803 = null;
		int level_804 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_801;
		right_695.left = left_802;
		right_695.right = right_803;
		right_695.level = level_804;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed570() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode right_695 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_6;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -2;
		int level_4 = 0;
		int element_801 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		int level_696 = 0;
		AANode left_802 = null;
		AANode right_803 = null;
		int level_804 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		right_695.element = element_801;
		right_695.left = left_802;
		right_695.right = right_803;
		right_695.level = level_804;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed571() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = right_7;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed572() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = left_562;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed573() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_694 = null;
		int element_5 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed574() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_810 = obj.root;
		int element_809 = 1;
		int element_561 = 3;
		int element_693 = 2;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed575() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_810 = right_7;
		int element_809 = -2;
		int element_561 = 0;
		int element_693 = -1;
		int element_5 = -3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed576() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_810 = left_562;
		int element_809 = 1;
		int element_561 = 3;
		int element_693 = 2;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed577() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_810 = left_694;
		int element_809 = 1;
		int element_561 = 3;
		int element_693 = 2;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed578() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		AANode left_810 = null;
		int element_809 = 1;
		int element_561 = 3;
		int element_693 = 2;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed579() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_810 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_809 = 1;
		int element_561 = 3;
		int element_693 = 2;
		int element_5 = 0;
		int element_829 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		AANode left_830 = null;
		AANode right_831 = null;
		int level_832 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		left_810.element = element_829;
		left_810.left = left_830;
		left_810.right = right_831;
		left_810.level = level_832;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed580() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_810 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_809 = 0;
		int element_561 = 2;
		int element_693 = 1;
		int element_5 = -1;
		int element_829 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode right_811 = null;
		int level_812 = 0;
		AANode left_830 = null;
		AANode right_831 = null;
		int level_832 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		left_810.element = element_829;
		left_810.left = left_830;
		left_810.right = right_831;
		left_810.level = level_832;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed581() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_5 = 0;
		int element_809 = 0;
		int element_561 = 2;
		int element_693 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode left_810 = null;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed582() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_694 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_5 = -1;
		int element_809 = 0;
		int element_561 = 1;
		int element_693 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode right_695 = null;
		int level_696 = 0;
		AANode left_810 = null;
		AANode right_811 = null;
		int level_812 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		left_694.element = element_809;
		left_694.left = left_810;
		left_694.right = right_811;
		left_694.level = level_812;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed583() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_5 = -1;
		int element_561 = 0;
		int element_693 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode left_694 = null;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed584() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_5 = -1;
		int element_561 = 0;
		int element_693 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode right_563 = null;
		int level_564 = 0;
		AANode left_694 = null;
		AANode right_695 = null;
		int level_696 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		left_562.element = element_693;
		left_562.left = left_694;
		left_562.right = right_695;
		left_562.level = level_696;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed585() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = right_3;
		int element_5 = 0;
		int element_561 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		AANode left_562 = null;
		AANode right_563 = null;
		int level_564 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_561;
		right_7.left = left_562;
		right_7.right = right_563;
		right_7.level = level_564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed586() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed587() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_6 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_5 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed588() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed589() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed590() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed591() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed592() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed593() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed594() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed595() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed596() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed597() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed598() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed599() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed600() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed601() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed602() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed603() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed604() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed605() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed606() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode left_842 = obj.root;
		int element_837 = -1;
		int element_841 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed607() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode left_842 = left_6;
		int element_837 = 0;
		int element_841 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed608() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode left_842 = right_7;
		int element_837 = -1;
		int element_841 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed609() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		AANode left_842 = null;
		int element_837 = -1;
		int element_841 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed610() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_842 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_5 = 0;
		int element_865 = 0;
		int element_841 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		AANode left_866 = null;
		AANode right_867 = null;
		int level_868 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		left_842.element = element_865;
		left_842.left = left_866;
		left_842.right = right_867;
		left_842.level = level_868;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed611() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_842 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		int element_837 = -2;
		int element_5 = -1;
		int element_865 = 0;
		int element_841 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_843 = null;
		int level_844 = 0;
		AANode left_866 = null;
		AANode right_867 = null;
		int level_868 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		left_842.element = element_865;
		left_842.left = left_866;
		left_842.right = right_867;
		left_842.level = level_868;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed612() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_841 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_842 = null;
		AANode right_843 = null;
		int level_844 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_841;
		right_7.left = left_842;
		right_7.right = right_843;
		right_7.level = level_844;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed613() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed614() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed615() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed616() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed617() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed618() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed619() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed620() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed621() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed622() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed623() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed624() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed625() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed626() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed627() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed628() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed629() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed630() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed631() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode left_874 = obj.root;
		int element_837 = -1;
		int element_873 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed632() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode left_874 = left_6;
		int element_837 = 0;
		int element_873 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed633() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode left_874 = right_7;
		int element_837 = -1;
		int element_873 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed634() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		AANode left_874 = null;
		int element_837 = -1;
		int element_873 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed635() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_874 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_5 = 0;
		int element_873 = 1;
		int level_4 = 0;
		int element_897 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		AANode left_898 = null;
		AANode right_899 = null;
		int level_900 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		left_874.element = element_897;
		left_874.left = left_898;
		left_874.right = right_899;
		left_874.level = level_900;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed636() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_874 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		int element_837 = -2;
		int element_5 = -1;
		int element_873 = 0;
		int level_4 = 0;
		int element_897 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_875 = null;
		int level_876 = 0;
		AANode left_898 = null;
		AANode right_899 = null;
		int level_900 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		left_874.element = element_897;
		left_874.left = left_898;
		left_874.right = right_899;
		left_874.level = level_900;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed637() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_873 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_874 = null;
		AANode right_875 = null;
		int level_876 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_873;
		right_7.left = left_874;
		right_7.right = right_875;
		right_7.level = level_876;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed638() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed639() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed640() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed641() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed642() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed643() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed644() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed645() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed646() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed647() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed648() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed649() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed650() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed651() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed652() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed653() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed654() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed655() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed656() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode left_906 = obj.root;
		int element_837 = -1;
		int element_905 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed657() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode left_906 = left_6;
		int element_837 = 0;
		int element_905 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed658() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode left_906 = right_7;
		int element_837 = -1;
		int element_905 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed659() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		AANode left_906 = null;
		int element_837 = -1;
		int element_905 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed660() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_906 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_5 = 0;
		int element_905 = 1;
		int element_929 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		AANode left_930 = null;
		AANode right_931 = null;
		int level_932 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		left_906.element = element_929;
		left_906.left = left_930;
		left_906.right = right_931;
		left_906.level = level_932;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed661() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_906 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		int element_837 = -2;
		int element_5 = -1;
		int element_905 = 0;
		int element_929 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_907 = null;
		int level_908 = 0;
		AANode left_930 = null;
		AANode right_931 = null;
		int level_932 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		left_906.element = element_929;
		left_906.left = left_930;
		left_906.right = right_931;
		left_906.level = level_932;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed662() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_905 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_906 = null;
		AANode right_907 = null;
		int level_908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_905;
		right_7.left = left_906;
		right_7.right = right_907;
		right_7.level = level_908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed663() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed664() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed665() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed666() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed667() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed668() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed669() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed670() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed671() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed672() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed673() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed674() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed675() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed676() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed677() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed678() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed679() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed680() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed681() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed682() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed683() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode left_938 = obj.root;
		int element_837 = -1;
		int element_937 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed684() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode left_938 = left_6;
		int element_837 = 0;
		int element_937 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed685() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode left_938 = right_7;
		int element_837 = -1;
		int element_937 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed686() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		AANode left_938 = null;
		int element_837 = -1;
		int element_937 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed687() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_938 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_937 = 1;
		int element_5 = 0;
		int level_4 = 0;
		int element_961 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		AANode left_962 = null;
		AANode right_963 = null;
		int level_964 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		left_938.element = element_961;
		left_938.left = left_962;
		left_938.right = right_963;
		left_938.level = level_964;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed688() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_938 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = -2;
		int element_937 = 0;
		int element_5 = -1;
		int level_4 = 0;
		int element_961 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_939 = null;
		int level_940 = 0;
		AANode left_962 = null;
		AANode right_963 = null;
		int level_964 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		left_938.element = element_961;
		left_938.left = left_962;
		left_938.right = right_963;
		left_938.level = level_964;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed689() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_937 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_938 = null;
		AANode right_939 = null;
		int level_940 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_937;
		right_7.left = left_938;
		right_7.right = right_939;
		right_7.level = level_940;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed690() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode right_839 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed691() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		AANode right_971 = obj.root;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed692() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		AANode right_971 = left_6;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed693() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		AANode right_971 = right_839;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed694() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		AANode right_971 = null;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed695() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		int element_837 = -2;
		int element_993 = -1;
		int element_5 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_994 = null;
		AANode right_995 = null;
		int level_996 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_993;
		right_971.left = left_994;
		right_971.right = right_995;
		right_971.level = level_996;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed696() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.nullNode;
		int element_837 = -2;
		int element_993 = 0;
		int element_5 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_994 = null;
		AANode right_995 = null;
		int level_996 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_993;
		right_971.left = left_994;
		right_971.right = right_995;
		right_971.level = level_996;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed697() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		AANode right_971 = obj.root;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed698() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		AANode right_971 = left_6;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed699() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		AANode right_971 = right_839;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed700() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		AANode right_971 = null;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed701() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		int element_837 = -2;
		int element_5 = 0;
		int element_1021 = -1;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1022 = null;
		AANode right_1023 = null;
		int level_1024 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1021;
		right_971.left = left_1022;
		right_971.right = right_1023;
		right_971.level = level_1024;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed702() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_2;
		int element_837 = -2;
		int element_5 = 0;
		int element_1021 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1022 = null;
		AANode right_1023 = null;
		int level_1024 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1021;
		right_971.left = left_1022;
		right_971.right = right_1023;
		right_971.level = level_1024;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed703() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		AANode right_971 = obj.root;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed704() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		AANode right_971 = left_6;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed705() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		AANode right_971 = right_839;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed706() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		AANode right_971 = null;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed707() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		int element_837 = -2;
		int element_1049 = -1;
		int element_5 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1050 = null;
		AANode right_1051 = null;
		int level_1052 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1049;
		right_971.left = left_1050;
		right_971.right = right_1051;
		right_971.level = level_1052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed708() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_3;
		int element_837 = -2;
		int element_1049 = 0;
		int element_5 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1050 = null;
		AANode right_1051 = null;
		int level_1052 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1049;
		right_971.left = left_1050;
		right_971.right = right_1051;
		right_971.level = level_1052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed709() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = obj.root;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed710() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_6;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed711() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		AANode right_971 = obj.root;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed712() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		AANode right_971 = left_6;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed713() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		AANode right_971 = right_839;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed714() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		AANode right_971 = null;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed715() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		int element_837 = -2;
		int element_5 = 0;
		int element_1077 = -1;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1078 = null;
		AANode right_1079 = null;
		int level_1080 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1077;
		right_971.left = left_1078;
		right_971.right = right_1079;
		right_971.level = level_1080;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed716() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_971 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = left_838;
		int element_837 = -2;
		int element_5 = 0;
		int element_1077 = 0;
		int element_969 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_972 = 0;
		AANode left_1078 = null;
		AANode right_1079 = null;
		int level_1080 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		right_971.element = element_1077;
		right_971.left = left_1078;
		right_971.right = right_1079;
		right_971.level = level_1080;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed717() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = right_839;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed718() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_970 = null;
		int element_837 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed719() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_1086 = obj.root;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed720() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_1086 = left_6;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed721() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_1086 = right_839;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed722() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_1086 = left_970;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed723() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		AANode left_1086 = null;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed724() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_1086 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = 0;
		int element_1085 = 1;
		int element_5 = 3;
		int element_969 = 2;
		int level_4 = 0;
		int element_1105 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		AANode left_1106 = null;
		AANode right_1107 = null;
		int level_1108 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		left_1086.element = element_1105;
		left_1086.left = left_1106;
		left_1086.right = right_1107;
		left_1086.level = level_1108;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed725() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_1086 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = -1;
		int element_1085 = 0;
		int element_5 = 2;
		int element_969 = 1;
		int level_4 = 0;
		int element_1105 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode right_1087 = null;
		int level_1088 = 0;
		AANode left_1106 = null;
		AANode right_1107 = null;
		int level_1108 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		left_1086.element = element_1105;
		left_1086.left = left_1106;
		left_1086.right = right_1107;
		left_1086.level = level_1108;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed726() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = 0;
		int element_1085 = 0;
		int element_969 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode left_1086 = null;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed727() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_970 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = -1;
		int element_1085 = 0;
		int element_969 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_971 = null;
		int level_972 = 0;
		AANode left_1086 = null;
		AANode right_1087 = null;
		int level_1088 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		left_970.element = element_1085;
		left_970.left = left_1086;
		left_970.right = right_1087;
		left_970.level = level_1088;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed728() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = 0;
		int element_969 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_970 = null;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed729() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.nullNode;
		int element_837 = -1;
		int element_969 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_970 = null;
		AANode right_971 = null;
		int level_972 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_969;
		right_839.left = left_970;
		right_839.right = right_971;
		right_839.level = level_972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed730() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed731() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed732() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed733() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed734() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed735() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed736() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed737() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed738() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed739() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed740() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed741() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed742() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed743() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed744() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed745() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed746() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed747() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed748() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode left_1114 = obj.root;
		int element_837 = -1;
		int element_1113 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed749() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode left_1114 = left_6;
		int element_837 = 0;
		int element_1113 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed750() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode left_1114 = right_7;
		int element_837 = -1;
		int element_1113 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed751() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		AANode left_1114 = null;
		int element_837 = -1;
		int element_1113 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed752() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1114 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_1113 = 1;
		int element_5 = 0;
		int element_1137 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		AANode left_1138 = null;
		AANode right_1139 = null;
		int level_1140 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		left_1114.element = element_1137;
		left_1114.left = left_1138;
		left_1114.right = right_1139;
		left_1114.level = level_1140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed753() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1114 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		int element_837 = -2;
		int element_1113 = 0;
		int element_5 = -1;
		int element_1137 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1115 = null;
		int level_1116 = 0;
		AANode left_1138 = null;
		AANode right_1139 = null;
		int level_1140 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		left_1114.element = element_1137;
		left_1114.left = left_1138;
		left_1114.right = right_1139;
		left_1114.level = level_1140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed754() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_1113 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1114 = null;
		AANode right_1115 = null;
		int level_1116 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1113;
		right_7.left = left_1114;
		right_7.right = right_1115;
		right_7.level = level_1116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed755() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed756() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed757() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed758() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed759() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed760() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed761() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed762() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed763() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed764() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed765() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed766() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed767() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed768() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed769() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed770() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed771() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed772() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed773() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode left_1146 = obj.root;
		int element_837 = -1;
		int element_1145 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed774() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode left_1146 = left_6;
		int element_837 = 0;
		int element_1145 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed775() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode left_1146 = right_7;
		int element_837 = -1;
		int element_1145 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed776() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		AANode left_1146 = null;
		int element_837 = -1;
		int element_1145 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed777() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_1145 = 1;
		int element_5 = 0;
		int element_1169 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		AANode left_1170 = null;
		AANode right_1171 = null;
		int level_1172 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		left_1146.element = element_1169;
		left_1146.left = left_1170;
		left_1146.right = right_1171;
		left_1146.level = level_1172;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed778() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		int element_837 = -2;
		int element_1145 = 0;
		int element_5 = -1;
		int element_1169 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1147 = null;
		int level_1148 = 0;
		AANode left_1170 = null;
		AANode right_1171 = null;
		int level_1172 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		left_1146.element = element_1169;
		left_1146.left = left_1170;
		left_1146.right = right_1171;
		left_1146.level = level_1172;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed779() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_1145 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1146 = null;
		AANode right_1147 = null;
		int level_1148 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1145;
		right_7.left = left_1146;
		right_7.right = right_1147;
		right_7.level = level_1148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed780() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed781() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed782() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed783() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed784() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed785() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed786() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed787() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed788() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed789() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed790() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed791() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed792() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed793() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed794() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed795() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed796() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed797() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed798() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode left_1178 = obj.root;
		int element_837 = -1;
		int element_1177 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed799() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode left_1178 = left_6;
		int element_837 = 0;
		int element_1177 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed800() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode left_1178 = right_7;
		int element_837 = -1;
		int element_1177 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed801() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		AANode left_1178 = null;
		int element_837 = -1;
		int element_1177 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed802() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1178 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_5 = 0;
		int element_1177 = 1;
		int element_1201 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		AANode left_1202 = null;
		AANode right_1203 = null;
		int level_1204 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		left_1178.element = element_1201;
		left_1178.left = left_1202;
		left_1178.right = right_1203;
		left_1178.level = level_1204;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed803() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1178 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		int element_837 = -2;
		int element_5 = -1;
		int element_1177 = 0;
		int element_1201 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1179 = null;
		int level_1180 = 0;
		AANode left_1202 = null;
		AANode right_1203 = null;
		int level_1204 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		left_1178.element = element_1201;
		left_1178.left = left_1202;
		left_1178.right = right_1203;
		left_1178.level = level_1204;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed804() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_1177 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1178 = null;
		AANode right_1179 = null;
		int level_1180 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1177;
		right_7.left = left_1178;
		right_7.right = right_1179;
		right_7.level = level_1180;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed805() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed806() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed807() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed808() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed809() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed810() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed811() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed812() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed813() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed814() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed815() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed816() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed817() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed818() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed819() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed820() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed821() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed822() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed823() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed824() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed825() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode left_1210 = obj.root;
		int element_837 = -1;
		int element_1209 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed826() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode left_1210 = left_6;
		int element_837 = 0;
		int element_1209 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed827() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode left_1210 = right_7;
		int element_837 = -1;
		int element_1209 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed828() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		AANode left_1210 = null;
		int element_837 = -1;
		int element_1209 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed829() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1210 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_1209 = 1;
		int element_5 = 0;
		int element_1233 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		AANode left_1234 = null;
		AANode right_1235 = null;
		int level_1236 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		left_1210.element = element_1233;
		left_1210.left = left_1234;
		left_1210.right = right_1235;
		left_1210.level = level_1236;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed830() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1210 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		int element_837 = -2;
		int element_1209 = 0;
		int element_5 = -1;
		int element_1233 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1211 = null;
		int level_1212 = 0;
		AANode left_1234 = null;
		AANode right_1235 = null;
		int level_1236 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		left_1210.element = element_1233;
		left_1210.left = left_1234;
		left_1210.right = right_1235;
		left_1210.level = level_1236;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed831() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_1209 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1210 = null;
		AANode right_1211 = null;
		int level_1212 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1209;
		right_7.left = left_1210;
		right_7.right = right_1211;
		right_7.level = level_1212;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed832() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode right_839 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed833() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		AANode right_1243 = obj.root;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed834() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		AANode right_1243 = left_6;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed835() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		AANode right_1243 = right_839;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed836() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		AANode right_1243 = null;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed837() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int level_4 = 0;
		int element_1265 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1266 = null;
		AANode right_1267 = null;
		int level_1268 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1265;
		right_1243.left = left_1266;
		right_1243.right = right_1267;
		right_1243.level = level_1268;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed838() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.nullNode;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int level_4 = 0;
		int element_1265 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1266 = null;
		AANode right_1267 = null;
		int level_1268 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1265;
		right_1243.left = left_1266;
		right_1243.right = right_1267;
		right_1243.level = level_1268;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed839() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		AANode right_1243 = obj.root;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed840() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		AANode right_1243 = left_6;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed841() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		AANode right_1243 = right_839;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed842() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		AANode right_1243 = null;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed843() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1293 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1294 = null;
		AANode right_1295 = null;
		int level_1296 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1293;
		right_1243.left = left_1294;
		right_1243.right = right_1295;
		right_1243.level = level_1296;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed844() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_2;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1293 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1294 = null;
		AANode right_1295 = null;
		int level_1296 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1293;
		right_1243.left = left_1294;
		right_1243.right = right_1295;
		right_1243.level = level_1296;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed845() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		AANode right_1243 = obj.root;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed846() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		AANode right_1243 = left_6;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed847() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		AANode right_1243 = right_839;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed848() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		AANode right_1243 = null;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed849() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1321 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1322 = null;
		AANode right_1323 = null;
		int level_1324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1321;
		right_1243.left = left_1322;
		right_1243.right = right_1323;
		right_1243.level = level_1324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed850() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_3;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1321 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1322 = null;
		AANode right_1323 = null;
		int level_1324 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1321;
		right_1243.left = left_1322;
		right_1243.right = right_1323;
		right_1243.level = level_1324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed851() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = obj.root;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed852() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_6;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed853() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		AANode right_1243 = obj.root;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed854() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		AANode right_1243 = left_6;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed855() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		AANode right_1243 = right_839;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed856() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		AANode right_1243 = null;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed857() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1349 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1350 = null;
		AANode right_1351 = null;
		int level_1352 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1349;
		right_1243.left = left_1350;
		right_1243.right = right_1351;
		right_1243.level = level_1352;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed858() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1243 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = left_838;
		int element_837 = -2;
		int element_1241 = -1;
		int element_5 = 0;
		int element_1349 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1244 = 0;
		AANode left_1350 = null;
		AANode right_1351 = null;
		int level_1352 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		right_1243.element = element_1349;
		right_1243.left = left_1350;
		right_1243.right = right_1351;
		right_1243.level = level_1352;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed859() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = right_839;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed860() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1242 = null;
		int element_837 = 0;
		int element_1241 = 1;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed861() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1358 = obj.root;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed862() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1358 = left_6;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed863() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1358 = right_839;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed864() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1358 = left_1242;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed865() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		AANode left_1358 = null;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed866() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_1358 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = 0;
		int element_1241 = 2;
		int element_1357 = 1;
		int element_5 = 3;
		int element_1377 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		AANode left_1378 = null;
		AANode right_1379 = null;
		int level_1380 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		left_1358.element = element_1377;
		left_1358.left = left_1378;
		left_1358.right = right_1379;
		left_1358.level = level_1380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed867() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_1358 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = -1;
		int element_1241 = 1;
		int element_1357 = 0;
		int element_5 = 2;
		int element_1377 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode right_1359 = null;
		int level_1360 = 0;
		AANode left_1378 = null;
		AANode right_1379 = null;
		int level_1380 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		left_1358.element = element_1377;
		left_1358.left = left_1378;
		left_1358.right = right_1379;
		left_1358.level = level_1380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed868() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = 0;
		int element_1241 = 1;
		int element_1357 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode left_1358 = null;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed869() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1242 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = -1;
		int element_1241 = 0;
		int element_1357 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1243 = null;
		int level_1244 = 0;
		AANode left_1358 = null;
		AANode right_1359 = null;
		int level_1360 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		left_1242.element = element_1357;
		left_1242.left = left_1358;
		left_1242.right = right_1359;
		left_1242.level = level_1360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed870() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = 0;
		int element_1241 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1242 = null;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed871() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_2;
		int element_837 = -1;
		int element_1241 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1242 = null;
		AANode right_1243 = null;
		int level_1244 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1241;
		right_839.left = left_1242;
		right_839.right = right_1243;
		right_839.level = level_1244;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed872() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed873() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed874() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed875() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed876() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed877() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed878() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed879() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed880() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed881() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed882() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed883() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed884() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed885() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed886() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed887() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed888() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed889() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed890() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode left_1386 = obj.root;
		int element_837 = -1;
		int element_1385 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed891() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode left_1386 = left_6;
		int element_837 = 0;
		int element_1385 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed892() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode left_1386 = right_7;
		int element_837 = -1;
		int element_1385 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed893() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		AANode left_1386 = null;
		int element_837 = -1;
		int element_1385 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed894() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_5 = 0;
		int element_1385 = 1;
		int level_4 = 0;
		int element_1409 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		AANode left_1410 = null;
		AANode right_1411 = null;
		int level_1412 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		left_1386.element = element_1409;
		left_1386.left = left_1410;
		left_1386.right = right_1411;
		left_1386.level = level_1412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed895() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		int element_837 = -2;
		int element_5 = -1;
		int element_1385 = 0;
		int level_4 = 0;
		int element_1409 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1387 = null;
		int level_1388 = 0;
		AANode left_1410 = null;
		AANode right_1411 = null;
		int level_1412 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		left_1386.element = element_1409;
		left_1386.left = left_1410;
		left_1386.right = right_1411;
		left_1386.level = level_1412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed896() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.nullNode;
		int element_837 = -1;
		int element_1385 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1386 = null;
		AANode right_1387 = null;
		int level_1388 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1385;
		right_7.left = left_1386;
		right_7.right = right_1387;
		right_7.level = level_1388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed897() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed898() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed899() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed900() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed901() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed902() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed903() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed904() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed905() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed906() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed907() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed908() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed909() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed910() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed911() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed912() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed913() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed914() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed915() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode left_1418 = obj.root;
		int element_837 = -1;
		int element_1417 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed916() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode left_1418 = left_6;
		int element_837 = 0;
		int element_1417 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed917() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode left_1418 = right_7;
		int element_837 = -1;
		int element_1417 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed918() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		AANode left_1418 = null;
		int element_837 = -1;
		int element_1417 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed919() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_1417 = 1;
		int element_5 = 0;
		int element_1441 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		AANode left_1442 = null;
		AANode right_1443 = null;
		int level_1444 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		left_1418.element = element_1441;
		left_1418.left = left_1442;
		left_1418.right = right_1443;
		left_1418.level = level_1444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed920() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		int element_837 = -2;
		int element_1417 = 0;
		int element_5 = -1;
		int element_1441 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1419 = null;
		int level_1420 = 0;
		AANode left_1442 = null;
		AANode right_1443 = null;
		int level_1444 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		left_1418.element = element_1441;
		left_1418.left = left_1442;
		left_1418.right = right_1443;
		left_1418.level = level_1444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed921() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_2;
		int element_837 = -1;
		int element_1417 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1418 = null;
		AANode right_1419 = null;
		int level_1420 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1417;
		right_7.left = left_1418;
		right_7.right = right_1419;
		right_7.level = level_1420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed922() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed923() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed924() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed925() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed926() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed927() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed928() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed929() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed930() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed931() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed932() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed933() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed934() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed935() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed936() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed937() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed938() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed939() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed940() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode left_1450 = obj.root;
		int element_837 = -1;
		int element_1449 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed941() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode left_1450 = left_6;
		int element_837 = 0;
		int element_1449 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed942() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode left_1450 = right_7;
		int element_837 = -1;
		int element_1449 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed943() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		AANode left_1450 = null;
		int element_837 = -1;
		int element_1449 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed944() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1450 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_5 = 0;
		int element_1449 = 1;
		int level_4 = 0;
		int element_1473 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		AANode left_1474 = null;
		AANode right_1475 = null;
		int level_1476 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		left_1450.element = element_1473;
		left_1450.left = left_1474;
		left_1450.right = right_1475;
		left_1450.level = level_1476;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed945() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1450 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		int element_837 = -2;
		int element_5 = -1;
		int element_1449 = 0;
		int level_4 = 0;
		int element_1473 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1451 = null;
		int level_1452 = 0;
		AANode left_1474 = null;
		AANode right_1475 = null;
		int level_1476 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		left_1450.element = element_1473;
		left_1450.left = left_1474;
		left_1450.right = right_1475;
		left_1450.level = level_1476;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed946() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = right_3;
		int element_837 = -1;
		int element_1449 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1450 = null;
		AANode right_1451 = null;
		int level_1452 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1449;
		right_7.left = left_1450;
		right_7.right = right_1451;
		right_7.level = level_1452;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed947() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed948() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed949() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed950() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed951() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = obj.nullNode;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed952() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed953() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed954() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_2;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed955() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed956() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed957() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_3;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed958() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed959() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_6;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed960() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed961() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed962() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = left_838;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed963() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int element_837 = 0;
		int level_8 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed964() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int element_837 = 0;
		int level_840 = 6;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed965() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = right_839;
		int level_8 = 1;
		int level_840 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed966() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode right_7 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed967() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode left_1482 = obj.root;
		int element_837 = -1;
		int element_1481 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed968() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode left_1482 = left_6;
		int element_837 = 0;
		int element_1481 = 2;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed969() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode left_1482 = right_7;
		int element_837 = -1;
		int element_1481 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed970() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		AANode left_1482 = null;
		int element_837 = -1;
		int element_1481 = 1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed971() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1482 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_1481 = 1;
		int element_1505 = 0;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		AANode left_1506 = null;
		AANode right_1507 = null;
		int level_1508 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		left_1482.element = element_1505;
		left_1482.left = left_1506;
		left_1482.right = right_1507;
		left_1482.level = level_1508;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed972() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_1482 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		int element_837 = -2;
		int element_1481 = 0;
		int element_1505 = 0;
		int element_5 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1483 = null;
		int level_1484 = 0;
		AANode left_1506 = null;
		AANode right_1507 = null;
		int level_1508 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		left_1482.element = element_1505;
		left_1482.left = left_1506;
		left_1482.right = right_1507;
		left_1482.level = level_1508;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed973() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = left_838;
		int element_837 = -1;
		int element_1481 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1482 = null;
		AANode right_1483 = null;
		int level_1484 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_7.element = element_1481;
		right_7.left = left_1482;
		right_7.right = right_1483;
		right_7.level = level_1484;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed974() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode right_839 = null;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed975() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		AANode right_1515 = obj.root;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed976() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		AANode right_1515 = left_6;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed977() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		AANode right_1515 = right_839;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed978() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		AANode right_1515 = null;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed979() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		int element_837 = -2;
		int element_1513 = -1;
		int element_5 = 0;
		int element_1537 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1538 = null;
		AANode right_1539 = null;
		int level_1540 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1537;
		right_1515.left = left_1538;
		right_1515.right = right_1539;
		right_1515.level = level_1540;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed980() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.nullNode;
		int element_837 = -2;
		int element_1513 = -1;
		int element_5 = 0;
		int element_1537 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1538 = null;
		AANode right_1539 = null;
		int level_1540 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1537;
		right_1515.left = left_1538;
		right_1515.right = right_1539;
		right_1515.level = level_1540;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed981() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		AANode right_1515 = obj.root;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed982() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		AANode right_1515 = left_6;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed983() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		AANode right_1515 = right_839;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed984() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		AANode right_1515 = null;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed985() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		int element_837 = -2;
		int element_1565 = -1;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1566 = null;
		AANode right_1567 = null;
		int level_1568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1565;
		right_1515.left = left_1566;
		right_1515.right = right_1567;
		right_1515.level = level_1568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed986() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_2;
		int element_837 = -2;
		int element_1565 = 0;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1566 = null;
		AANode right_1567 = null;
		int level_1568 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1565;
		right_1515.left = left_1566;
		right_1515.right = right_1567;
		right_1515.level = level_1568;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed987() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		AANode right_1515 = obj.root;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed988() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		AANode right_1515 = left_6;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed989() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		AANode right_1515 = right_839;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed990() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		AANode right_1515 = null;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed991() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		int element_837 = -2;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		int element_1593 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1594 = null;
		AANode right_1595 = null;
		int level_1596 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1593;
		right_1515.left = left_1594;
		right_1515.right = right_1595;
		right_1515.level = level_1596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed992() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_3;
		int element_837 = -2;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		int element_1593 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1594 = null;
		AANode right_1595 = null;
		int level_1596 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1593;
		right_1515.left = left_1594;
		right_1515.right = right_1595;
		right_1515.level = level_1596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed993() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = obj.root;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed994() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_6;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed995() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		AANode right_1515 = obj.root;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed996() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		AANode right_1515 = left_6;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed997() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		AANode right_1515 = right_839;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed998() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		AANode right_1515 = null;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed999() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		int element_837 = -2;
		int element_1621 = -1;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1622 = null;
		AANode right_1623 = null;
		int level_1624 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1621;
		right_1515.left = left_1622;
		right_1515.right = right_1623;
		right_1515.level = level_1624;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1000() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode right_1515 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = left_838;
		int element_837 = -2;
		int element_1621 = 0;
		int element_1513 = -1;
		int element_5 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1516 = 0;
		AANode left_1622 = null;
		AANode right_1623 = null;
		int level_1624 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		right_1515.element = element_1621;
		right_1515.left = left_1622;
		right_1515.right = right_1623;
		right_1515.level = level_1624;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1001() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = right_839;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1002() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1514 = null;
		int element_1513 = 1;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1003() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1630 = obj.root;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1004() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1630 = left_6;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1005() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1630 = right_839;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1006() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1630 = left_1514;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1007() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		AANode left_1630 = null;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1008() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_1630 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_837 = 0;
		int element_1629 = 1;
		int element_1513 = 2;
		int element_5 = 3;
		int element_1649 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		AANode left_1650 = null;
		AANode right_1651 = null;
		int level_1652 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		left_1630.element = element_1649;
		left_1630.left = left_1650;
		left_1630.right = right_1651;
		left_1630.level = level_1652;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1009() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_1630 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_837 = -1;
		int element_1629 = 0;
		int element_1513 = 1;
		int element_5 = 2;
		int element_1649 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode right_1631 = null;
		int level_1632 = 0;
		AANode left_1650 = null;
		AANode right_1651 = null;
		int level_1652 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		left_1630.element = element_1649;
		left_1630.left = left_1650;
		left_1630.right = right_1651;
		left_1630.level = level_1652;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1010() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_1513 = 1;
		int element_837 = 0;
		int element_1629 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode left_1630 = null;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1011() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_1514 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_1513 = 0;
		int element_837 = -1;
		int element_1629 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode right_1515 = null;
		int level_1516 = 0;
		AANode left_1630 = null;
		AANode right_1631 = null;
		int level_1632 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		left_1514.element = element_1629;
		left_1514.left = left_1630;
		left_1514.right = right_1631;
		left_1514.level = level_1632;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1012() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_1513 = 0;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1514 = null;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1013() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = right_3;
		int element_1513 = 0;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		AANode left_1514 = null;
		AANode right_1515 = null;
		int level_1516 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		right_839.element = element_1513;
		right_839.left = left_1514;
		right_839.right = right_1515;
		right_839.level = level_1516;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1014() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = obj.root;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1015() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = left_6;
		int element_837 = -1;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1016() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_838 = null;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1017() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1018() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1019() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1020() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1021() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_5 = 1;
		int element_1681 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1682 = null;
		AANode right_1683 = null;
		int level_1684 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1681;
		right_839.left = left_1682;
		right_839.right = right_1683;
		right_839.level = level_1684;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1022() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_5 = 1;
		int element_1681 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1682 = null;
		AANode right_1683 = null;
		int level_1684 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1681;
		right_839.left = left_1682;
		right_839.right = right_1683;
		right_839.level = level_1684;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1023() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1024() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1025() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1026() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1027() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1709 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1710 = null;
		AANode right_1711 = null;
		int level_1712 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1709;
		right_839.left = left_1710;
		right_839.right = right_1711;
		right_839.level = level_1712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1028() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1709 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1710 = null;
		AANode right_1711 = null;
		int level_1712 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1709;
		right_839.left = left_1710;
		right_839.right = right_1711;
		right_839.level = level_1712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1029() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1030() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1031() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1032() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1033() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		int element_1737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1738 = null;
		AANode right_1739 = null;
		int level_1740 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1737;
		right_839.left = left_1738;
		right_839.right = right_1739;
		right_839.level = level_1740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1034() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		int element_1737 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1738 = null;
		AANode right_1739 = null;
		int level_1740 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1737;
		right_839.left = left_1738;
		right_839.right = right_1739;
		right_839.level = level_1740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1035() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1036() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1037() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1038() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1039() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1040() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1041() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1042() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_1765 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1766 = null;
		AANode right_1767 = null;
		int level_1768 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1765;
		right_839.left = left_1766;
		right_839.right = right_1767;
		right_839.level = level_1768;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1043() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_1765 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1766 = null;
		AANode right_1767 = null;
		int level_1768 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1765;
		right_839.left = left_1766;
		right_839.right = right_1767;
		right_839.level = level_1768;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1044() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode right_1659 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1045() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode left_1774 = obj.root;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -2;
		int level_4 = 0;
		int element_1773 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1046() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode left_1774 = left_6;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -2;
		int level_4 = 0;
		int element_1773 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1047() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode left_1774 = left_838;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -2;
		int level_4 = 0;
		int element_1773 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1048() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode left_1774 = right_1659;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -2;
		int level_4 = 0;
		int element_1773 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1049() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		AANode left_1774 = null;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -2;
		int level_4 = 0;
		int element_1773 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1050() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_1774 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		int element_837 = 2;
		int element_1793 = 0;
		int element_5 = 3;
		int element_1657 = 0;
		int level_4 = 0;
		int element_1773 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		AANode left_1794 = null;
		AANode right_1795 = null;
		int level_1796 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		left_1774.element = element_1793;
		left_1774.left = left_1794;
		left_1774.right = right_1795;
		left_1774.level = level_1796;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1051() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_1774 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		int element_837 = 1;
		int element_1793 = 0;
		int element_5 = 2;
		int element_1657 = -1;
		int level_4 = 0;
		int element_1773 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1775 = null;
		int level_1776 = 0;
		AANode left_1794 = null;
		AANode right_1795 = null;
		int level_1796 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		left_1774.element = element_1793;
		left_1774.left = left_1794;
		left_1774.right = right_1795;
		left_1774.level = level_1796;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1052() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		int element_1773 = -1;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1774 = null;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1053() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.nullNode;
		int element_1773 = 0;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1774 = null;
		AANode right_1775 = null;
		int level_1776 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1773;
		right_1659.left = left_1774;
		right_1659.right = right_1775;
		right_1659.level = level_1776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1054() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1055() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1056() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1057() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1058() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_5 = 1;
		int element_1821 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1822 = null;
		AANode right_1823 = null;
		int level_1824 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1821;
		right_839.left = left_1822;
		right_839.right = right_1823;
		right_839.level = level_1824;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1059() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_5 = 1;
		int element_1821 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1822 = null;
		AANode right_1823 = null;
		int level_1824 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1821;
		right_839.left = left_1822;
		right_839.right = right_1823;
		right_839.level = level_1824;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1060() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1061() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1062() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1063() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1064() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1849 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1850 = null;
		AANode right_1851 = null;
		int level_1852 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1849;
		right_839.left = left_1850;
		right_839.right = right_1851;
		right_839.level = level_1852;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1065() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1849 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1850 = null;
		AANode right_1851 = null;
		int level_1852 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1849;
		right_839.left = left_1850;
		right_839.right = right_1851;
		right_839.level = level_1852;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1066() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1067() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1068() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1069() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1070() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_1877 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1878 = null;
		AANode right_1879 = null;
		int level_1880 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1877;
		right_839.left = left_1878;
		right_839.right = right_1879;
		right_839.level = level_1880;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1071() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_1877 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1878 = null;
		AANode right_1879 = null;
		int level_1880 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1877;
		right_839.left = left_1878;
		right_839.right = right_1879;
		right_839.level = level_1880;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1072() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1073() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1074() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1075() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1076() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1077() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1078() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1079() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_1905 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1906 = null;
		AANode right_1907 = null;
		int level_1908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1905;
		right_839.left = left_1906;
		right_839.right = right_1907;
		right_839.level = level_1908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1080() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_1905 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1906 = null;
		AANode right_1907 = null;
		int level_1908 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1905;
		right_839.left = left_1906;
		right_839.right = right_1907;
		right_839.level = level_1908;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1081() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode right_1659 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1082() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode left_1914 = obj.root;
		int element_837 = 0;
		int element_5 = 1;
		int element_1913 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1083() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode left_1914 = left_6;
		int element_837 = 0;
		int element_5 = 1;
		int element_1913 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1084() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode left_1914 = left_838;
		int element_837 = 0;
		int element_5 = 1;
		int element_1913 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1085() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode left_1914 = right_1659;
		int element_837 = 0;
		int element_5 = 1;
		int element_1913 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1086() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		AANode left_1914 = null;
		int element_837 = 0;
		int element_5 = 1;
		int element_1913 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1087() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_1914 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		int element_837 = 2;
		int element_5 = 3;
		int element_1933 = 0;
		int element_1913 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		AANode left_1934 = null;
		AANode right_1935 = null;
		int level_1936 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		left_1914.element = element_1933;
		left_1914.left = left_1934;
		left_1914.right = right_1935;
		left_1914.level = level_1936;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1088() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_1914 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		int element_837 = 1;
		int element_5 = 2;
		int element_1933 = 0;
		int element_1913 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_1915 = null;
		int level_1916 = 0;
		AANode left_1934 = null;
		AANode right_1935 = null;
		int level_1936 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		left_1914.element = element_1933;
		left_1914.left = left_1934;
		left_1914.right = right_1935;
		left_1914.level = level_1936;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1089() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		int element_1913 = -1;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1914 = null;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1090() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_2;
		int element_1913 = 0;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1914 = null;
		AANode right_1915 = null;
		int level_1916 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_1913;
		right_1659.left = left_1914;
		right_1659.right = right_1915;
		right_1659.level = level_1916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1091() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1092() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1093() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1094() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1095() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_1961 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1962 = null;
		AANode right_1963 = null;
		int level_1964 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1961;
		right_839.left = left_1962;
		right_839.right = right_1963;
		right_839.level = level_1964;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1096() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.nullNode;
		int element_837 = 0;
		int element_1961 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1962 = null;
		AANode right_1963 = null;
		int level_1964 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1961;
		right_839.left = left_1962;
		right_839.right = right_1963;
		right_839.level = level_1964;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1097() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1098() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1099() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1100() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1101() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1989 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1990 = null;
		AANode right_1991 = null;
		int level_1992 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1989;
		right_839.left = left_1990;
		right_839.right = right_1991;
		right_839.level = level_1992;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1102() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_2;
		int element_837 = 0;
		int element_1989 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_1990 = null;
		AANode right_1991 = null;
		int level_1992 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_1989;
		right_839.left = left_1990;
		right_839.right = right_1991;
		right_839.level = level_1992;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1103() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1104() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1105() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1106() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1107() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		int element_2017 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2018 = null;
		AANode right_2019 = null;
		int level_2020 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_2017;
		right_839.left = left_2018;
		right_839.right = right_2019;
		right_839.level = level_2020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1108() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = right_3;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		int element_2017 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2018 = null;
		AANode right_2019 = null;
		int level_2020 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_2017;
		right_839.left = left_2018;
		right_839.right = right_2019;
		right_839.level = level_2020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1109() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1110() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1111() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1112() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		AANode right_839 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1113() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		AANode right_839 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1114() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		AANode right_839 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1115() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		AANode right_839 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1116() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_2045 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2046 = null;
		AANode right_2047 = null;
		int level_2048 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_2045;
		right_839.left = left_2046;
		right_839.right = right_2047;
		right_839.level = level_2048;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1117() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_839 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = left_1658;
		int element_837 = 0;
		int element_2045 = 1;
		int element_5 = 1;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2046 = null;
		AANode right_2047 = null;
		int level_2048 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_839.element = element_2045;
		right_839.left = left_2046;
		right_839.right = right_2047;
		right_839.level = level_2048;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1118() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode right_1659 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1119() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode left_2054 = obj.root;
		int element_837 = 0;
		int element_5 = 1;
		int element_2053 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1120() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode left_2054 = left_6;
		int element_837 = 0;
		int element_5 = 1;
		int element_2053 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1121() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode left_2054 = left_838;
		int element_837 = 0;
		int element_5 = 1;
		int element_2053 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1122() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode left_2054 = right_1659;
		int element_837 = 0;
		int element_5 = 1;
		int element_2053 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1123() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		AANode left_2054 = null;
		int element_837 = 0;
		int element_5 = 1;
		int element_2053 = -1;
		int element_1657 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1124() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2054 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		int element_837 = 2;
		int element_2073 = 0;
		int element_5 = 3;
		int element_2053 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		AANode left_2074 = null;
		AANode right_2075 = null;
		int level_2076 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		left_2054.element = element_2073;
		left_2054.left = left_2074;
		left_2054.right = right_2075;
		left_2054.level = level_2076;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1125() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2054 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		int element_837 = 1;
		int element_2073 = 0;
		int element_5 = 2;
		int element_2053 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode right_2055 = null;
		int level_2056 = 0;
		AANode left_2074 = null;
		AANode right_2075 = null;
		int level_2076 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		left_2054.element = element_2073;
		left_2054.left = left_2074;
		left_2054.right = right_2075;
		left_2054.level = level_2076;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1126() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		int element_2053 = -1;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2054 = null;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1127() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode right_1659 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = right_3;
		int element_2053 = 0;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		int level_1660 = 0;
		AANode left_2054 = null;
		AANode right_2055 = null;
		int level_2056 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		right_1659.element = element_2053;
		right_1659.left = left_2054;
		right_1659.right = right_2055;
		right_1659.level = level_2056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1128() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = obj.root;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1129() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_6;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1130() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = left_838;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1131() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_1658 = null;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1132() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		AANode right_2083 = obj.root;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1133() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		AANode right_2083 = left_6;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1134() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		AANode right_2083 = left_838;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1135() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		AANode right_2083 = left_1658;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1136() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		AANode right_2083 = null;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1137() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		int element_837 = 1;
		int element_2101 = -1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2102 = null;
		AANode right_2103 = null;
		int level_2104 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2101;
		right_2083.left = left_2102;
		right_2083.right = right_2103;
		right_2083.level = level_2104;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1138() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.nullNode;
		int element_837 = 1;
		int element_2101 = 0;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2102 = null;
		AANode right_2103 = null;
		int level_2104 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2101;
		right_2083.left = left_2102;
		right_2083.right = right_2103;
		right_2083.level = level_2104;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1139() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		AANode right_2083 = obj.root;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1140() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		AANode right_2083 = left_6;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1141() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		AANode right_2083 = left_838;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1142() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		AANode right_2083 = left_1658;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1143() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		AANode right_2083 = null;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1144() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		int element_837 = 1;
		int element_2125 = -1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2126 = null;
		AANode right_2127 = null;
		int level_2128 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2125;
		right_2083.left = left_2126;
		right_2083.right = right_2127;
		right_2083.level = level_2128;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1145() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_2;
		int element_837 = 1;
		int element_2125 = 0;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2126 = null;
		AANode right_2127 = null;
		int level_2128 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2125;
		right_2083.left = left_2126;
		right_2083.right = right_2127;
		right_2083.level = level_2128;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1146() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		AANode right_2083 = obj.root;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1147() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		AANode right_2083 = left_6;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1148() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		AANode right_2083 = left_838;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1149() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		AANode right_2083 = left_1658;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1150() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		AANode right_2083 = null;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1151() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		int element_837 = 1;
		int element_5 = 2;
		int element_2149 = -1;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2150 = null;
		AANode right_2151 = null;
		int level_2152 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2149;
		right_2083.left = left_2150;
		right_2083.right = right_2151;
		right_2083.level = level_2152;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1152() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode right_2083 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = right_3;
		int element_837 = 1;
		int element_5 = 2;
		int element_2149 = 0;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		int level_2084 = 0;
		AANode left_2150 = null;
		AANode right_2151 = null;
		int level_2152 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		right_2083.element = element_2149;
		right_2083.left = left_2150;
		right_2083.right = right_2151;
		right_2083.level = level_2152;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1153() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = obj.root;
		int element_2081 = -2;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1154() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_6;
		int element_2081 = -2;
		int element_837 = 0;
		int element_1657 = -1;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1155() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_838;
		int element_2081 = -1;
		int element_837 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1156() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = left_1658;
		int element_2081 = -1;
		int element_837 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1157() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2082 = null;
		int element_2081 = -1;
		int element_837 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1158() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = obj.root;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int element_2081 = -2;
		int level_4 = 0;
		int element_2157 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1159() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = left_6;
		int element_837 = 0;
		int element_5 = 1;
		int element_1657 = -1;
		int element_2081 = -2;
		int level_4 = 0;
		int element_2157 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1160() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = left_838;
		int element_837 = 1;
		int element_5 = 2;
		int element_1657 = 0;
		int element_2081 = -1;
		int level_4 = 0;
		int element_2157 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1161() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = left_1658;
		int element_837 = 2;
		int element_5 = 3;
		int element_1657 = 1;
		int element_2081 = 0;
		int level_4 = 0;
		int element_2157 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1162() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = left_2082;
		int element_837 = 2;
		int element_5 = 3;
		int element_1657 = 1;
		int element_2081 = 0;
		int level_4 = 0;
		int element_2157 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1163() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		AANode left_2158 = null;
		int element_837 = 2;
		int element_5 = 3;
		int element_1657 = 1;
		int element_2081 = 0;
		int level_4 = 0;
		int element_2157 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1164() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2158 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		int element_837 = 3;
		int element_2173 = 0;
		int element_5 = 4;
		int element_1657 = 2;
		int element_2081 = 1;
		int level_4 = 0;
		int element_2157 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode right_2159 = null;
		int level_2160 = 0;
		AANode left_2174 = null;
		AANode right_2175 = null;
		int level_2176 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		left_2158.element = element_2173;
		left_2158.left = left_2174;
		left_2158.right = right_2175;
		left_2158.level = level_2176;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1165() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		int element_837 = 2;
		int element_5 = 3;
		int element_1657 = 1;
		int element_2081 = 0;
		int level_4 = 0;
		int element_2157 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode right_2083 = null;
		int level_2084 = 0;
		AANode left_2158 = null;
		AANode right_2159 = null;
		int level_2160 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		left_2082.element = element_2157;
		left_2082.left = left_2158;
		left_2082.right = right_2159;
		left_2082.level = level_2160;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1166() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_1658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		int element_2081 = 0;
		int element_837 = 1;
		int element_1657 = 0;
		int level_4 = 0;
		int element_5 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode right_1659 = null;
		int level_1660 = 0;
		AANode left_2082 = null;
		AANode right_2083 = null;
		int level_2084 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		left_1658.element = element_2081;
		left_1658.left = left_2082;
		left_1658.right = right_2083;
		left_1658.level = level_2084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1167() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		int element_837 = 0;
		int element_1657 = 0;
		int level_4 = 0;
		int element_5 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode right_839 = null;
		int level_840 = 0;
		AANode left_1658 = null;
		AANode right_1659 = null;
		int level_1660 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		left_838.element = element_1657;
		left_838.left = left_1658;
		left_838.right = right_1659;
		left_838.level = level_1660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1168() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = obj.nullNode;
		int element_837 = 0;
		int level_4 = 0;
		int element_5 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_7 = null;
		int level_8 = 0;
		AANode left_838 = null;
		AANode right_839 = null;
		int level_840 = 0;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_837;
		left_6.left = left_838;
		left_6.right = right_839;
		left_6.level = level_840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1169() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		obj.root = obj.nullNode;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1170() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		obj.root = left_2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1171() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		obj.root = right_3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1172() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		obj.root = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1173() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1174() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1175() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1176() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1177() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1178() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1179() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1180() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = left_2182;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1181() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = left_2182;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1182() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode right_2183 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1183() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.nullNode;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1184() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1185() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1186() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.nullNode;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1187() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.nullNode;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1188() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1189() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1190() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1191() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1192() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1193() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_3;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1194() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1195() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1196() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_3;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1197() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_3;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1198() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = obj.root;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1199() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2182;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1200() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1201() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1202() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2182;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1203() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2182;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1204() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = right_2183;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1205() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2186;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1206() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1207() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1208() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2186;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1209() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = left_2186;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1210() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode right_2187 = null;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1211() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode left_2190 = obj.root;
		int element_2185 = 0;
		int element_2189 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1212() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode left_2190 = right_2183;
		int element_2185 = 0;
		int element_2189 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1213() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode left_2190 = right_2187;
		int element_2185 = 0;
		int element_2189 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1214() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		AANode left_2190 = null;
		int element_2185 = 0;
		int element_2189 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1215() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2190 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		int element_2185 = 0;
		int element_2189 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2213 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		AANode left_2214 = null;
		AANode right_2215 = null;
		int level_2216 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		left_2190.element = element_2213;
		left_2190.left = left_2214;
		left_2190.right = right_2215;
		left_2190.level = level_2216;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1216() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2190 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		int element_2185 = -1;
		int element_2189 = 0;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2213 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2191 = null;
		int level_2192 = 0;
		AANode left_2214 = null;
		AANode right_2215 = null;
		int level_2216 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		left_2190.element = element_2213;
		left_2190.left = left_2214;
		left_2190.right = right_2215;
		left_2190.level = level_2216;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1217() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.nullNode;
		int element_2185 = 0;
		int element_2189 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode left_2190 = null;
		AANode right_2191 = null;
		int level_2192 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2189;
		right_2187.left = left_2190;
		right_2187.right = right_2191;
		right_2187.level = level_2192;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1218() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.nullNode;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1219() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1220() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1221() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.nullNode;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1222() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.nullNode;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1223() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1224() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1225() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1226() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1227() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1228() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_3;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1229() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1230() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1231() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_3;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1232() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_3;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1233() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = obj.root;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1234() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2182;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1235() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1236() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1237() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2182;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1238() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2182;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1239() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = right_2183;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1240() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2186;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1241() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1242() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1243() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2186;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1244() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = left_2186;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1245() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode right_2187 = null;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1246() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode left_2222 = obj.root;
		int element_2185 = 0;
		int element_2221 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1247() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode left_2222 = right_2183;
		int element_2185 = 0;
		int element_2221 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1248() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode left_2222 = right_2187;
		int element_2185 = 0;
		int element_2221 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1249() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		AANode left_2222 = null;
		int element_2185 = 0;
		int element_2221 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1250() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2222 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		int element_2185 = 0;
		int element_2181 = -1;
		int element_2221 = 1;
		int element_2245 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		AANode left_2246 = null;
		AANode right_2247 = null;
		int level_2248 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		left_2222.element = element_2245;
		left_2222.left = left_2246;
		left_2222.right = right_2247;
		left_2222.level = level_2248;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1251() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2222 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		int element_2185 = -1;
		int element_2181 = -2;
		int element_2221 = 0;
		int element_2245 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2223 = null;
		int level_2224 = 0;
		AANode left_2246 = null;
		AANode right_2247 = null;
		int level_2248 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		left_2222.element = element_2245;
		left_2222.left = left_2246;
		left_2222.right = right_2247;
		left_2222.level = level_2248;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1252() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2;
		int element_2185 = 0;
		int element_2221 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode left_2222 = null;
		AANode right_2223 = null;
		int level_2224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2221;
		right_2187.left = left_2222;
		right_2187.right = right_2223;
		right_2187.level = level_2224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1253() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.nullNode;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1254() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1255() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1256() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.nullNode;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1257() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.nullNode;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1258() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1259() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1260() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1261() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1262() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1263() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_3;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1264() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1265() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1266() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_3;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1267() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_3;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1268() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = obj.root;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1269() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2182;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1270() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1271() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1272() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2182;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1273() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2182;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1274() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = right_2183;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1275() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2186;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1276() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1277() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1278() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2186;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1279() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = left_2186;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1280() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode right_2187 = null;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1281() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode left_2254 = obj.root;
		int element_2253 = 1;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1282() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode left_2254 = right_2183;
		int element_2253 = 1;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1283() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode left_2254 = right_2187;
		int element_2253 = 1;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1284() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		AANode left_2254 = null;
		int element_2253 = 1;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1285() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2254 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		int element_2185 = 0;
		int element_2181 = -1;
		int element_2253 = 1;
		int element_2277 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		AANode left_2278 = null;
		AANode right_2279 = null;
		int level_2280 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		left_2254.element = element_2277;
		left_2254.left = left_2278;
		left_2254.right = right_2279;
		left_2254.level = level_2280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1286() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2254 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		int element_2185 = -1;
		int element_2181 = -2;
		int element_2253 = 0;
		int element_2277 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2255 = null;
		int level_2256 = 0;
		AANode left_2278 = null;
		AANode right_2279 = null;
		int level_2280 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		left_2254.element = element_2277;
		left_2254.left = left_2278;
		left_2254.right = right_2279;
		left_2254.level = level_2280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1287() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_3;
		int element_2253 = 0;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode left_2254 = null;
		AANode right_2255 = null;
		int level_2256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2253;
		right_2187.left = left_2254;
		right_2187.right = right_2255;
		right_2187.level = level_2256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1288() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = obj.root;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1289() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.nullNode;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1290() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1291() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.nullNode;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1292() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.nullNode;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1293() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.nullNode;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1294() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1295() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1296() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1297() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1298() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1299() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_3;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1300() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1301() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_3;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1302() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_3;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1303() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_3;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1304() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = obj.root;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1305() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2182;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1306() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1307() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2182;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1308() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2182;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1309() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2182;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1310() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = right_2183;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1311() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2186;
		int level_2184 = 6;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1312() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1313() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2186;
		int element_2185 = 0;
		int level_2188 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2181 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1314() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2186;
		int element_2181 = 0;
		int element_2185 = 1;
		int level_2184 = 1;
		int level_2188 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1315() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = left_2186;
		int element_2181 = -1;
		int element_2185 = 0;
		int level_2184 = 1;
		int level_2188 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1316() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode right_2187 = null;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1317() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode left_2286 = obj.root;
		int element_2185 = 0;
		int element_2285 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1318() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode left_2286 = right_2183;
		int element_2185 = 0;
		int element_2285 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1319() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode left_2286 = right_2187;
		int element_2185 = 0;
		int element_2285 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1320() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		AANode left_2286 = null;
		int element_2185 = 0;
		int element_2285 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1321() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		int element_2309 = 0;
		int element_2185 = 0;
		int element_2181 = -1;
		int element_2285 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		AANode left_2310 = null;
		AANode right_2311 = null;
		int level_2312 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		left_2286.element = element_2309;
		left_2286.left = left_2310;
		left_2286.right = right_2311;
		left_2286.level = level_2312;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1322() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2286 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		int element_2309 = 0;
		int element_2185 = -1;
		int element_2181 = -2;
		int element_2285 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode right_2287 = null;
		int level_2288 = 0;
		AANode left_2310 = null;
		AANode right_2311 = null;
		int level_2312 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		left_2286.element = element_2309;
		left_2286.left = left_2310;
		left_2286.right = right_2311;
		left_2286.level = level_2312;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1323() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2187 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = left_2182;
		int element_2185 = 0;
		int element_2285 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2188 = 0;
		AANode left_2286 = null;
		AANode right_2287 = null;
		int level_2288 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		right_2187.element = element_2285;
		right_2187.left = left_2286;
		right_2187.right = right_2287;
		right_2187.level = level_2288;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1324() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = right_2183;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1325() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2186 = null;
		int element_2185 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1326() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		AANode right_2319 = obj.root;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1327() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		AANode right_2319 = right_2183;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1328() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		AANode right_2319 = left_2186;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1329() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		AANode right_2319 = null;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1330() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2341 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2342 = null;
		AANode right_2343 = null;
		int level_2344 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2341;
		right_2319.left = left_2342;
		right_2319.right = right_2343;
		right_2319.level = level_2344;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1331() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.nullNode;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2341 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2342 = null;
		AANode right_2343 = null;
		int level_2344 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2341;
		right_2319.left = left_2342;
		right_2319.right = right_2343;
		right_2319.level = level_2344;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1332() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		AANode right_2319 = obj.root;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1333() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		AANode right_2319 = right_2183;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1334() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		AANode right_2319 = left_2186;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1335() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		AANode right_2319 = null;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1336() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		int element_2185 = 0;
		int element_2369 = -1;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2370 = null;
		AANode right_2371 = null;
		int level_2372 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2369;
		right_2319.left = left_2370;
		right_2319.right = right_2371;
		right_2319.level = level_2372;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1337() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2;
		int element_2185 = 0;
		int element_2369 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2370 = null;
		AANode right_2371 = null;
		int level_2372 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2369;
		right_2319.left = left_2370;
		right_2319.right = right_2371;
		right_2319.level = level_2372;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1338() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		AANode right_2319 = obj.root;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1339() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		AANode right_2319 = right_2183;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1340() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		AANode right_2319 = left_2186;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1341() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		AANode right_2319 = null;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1342() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2397 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2398 = null;
		AANode right_2399 = null;
		int level_2400 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2397;
		right_2319.left = left_2398;
		right_2319.right = right_2399;
		right_2319.level = level_2400;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1343() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_3;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2397 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2398 = null;
		AANode right_2399 = null;
		int level_2400 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2397;
		right_2319.left = left_2398;
		right_2319.right = right_2399;
		right_2319.level = level_2400;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1344() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = obj.root;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1345() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		AANode right_2319 = obj.root;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1346() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		AANode right_2319 = right_2183;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1347() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		AANode right_2319 = left_2186;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1348() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		AANode right_2319 = null;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1349() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2425 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2426 = null;
		AANode right_2427 = null;
		int level_2428 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2425;
		right_2319.left = left_2426;
		right_2319.right = right_2427;
		right_2319.level = level_2428;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1350() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode right_2319 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2182;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int element_2425 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		int level_2320 = 0;
		AANode left_2426 = null;
		AANode right_2427 = null;
		int level_2428 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		right_2319.element = element_2425;
		right_2319.left = left_2426;
		right_2319.right = right_2427;
		right_2319.level = level_2428;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1351() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = right_2183;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1352() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = left_2186;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1353() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2318 = null;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1354() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2434 = obj.root;
		int element_2185 = 3;
		int element_2433 = 1;
		int element_2317 = 2;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1355() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2434 = right_2183;
		int element_2185 = 0;
		int element_2433 = -2;
		int element_2317 = -1;
		int element_2181 = -3;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1356() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2434 = left_2186;
		int element_2185 = 3;
		int element_2433 = 1;
		int element_2317 = 2;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1357() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2434 = left_2318;
		int element_2185 = 3;
		int element_2433 = 1;
		int element_2317 = 2;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1358() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		AANode left_2434 = null;
		int element_2185 = 3;
		int element_2433 = 1;
		int element_2317 = 2;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1359() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2434 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 3;
		int element_2433 = 1;
		int element_2317 = 2;
		int element_2181 = 0;
		int element_2453 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		AANode left_2454 = null;
		AANode right_2455 = null;
		int level_2456 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		left_2434.element = element_2453;
		left_2434.left = left_2454;
		left_2434.right = right_2455;
		left_2434.level = level_2456;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1360() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2434 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 2;
		int element_2433 = 0;
		int element_2317 = 1;
		int element_2181 = -1;
		int element_2453 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode right_2435 = null;
		int level_2436 = 0;
		AANode left_2454 = null;
		AANode right_2455 = null;
		int level_2456 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		left_2434.element = element_2453;
		left_2434.left = left_2454;
		left_2434.right = right_2455;
		left_2434.level = level_2456;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1361() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 2;
		int element_2433 = 0;
		int element_2317 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode left_2434 = null;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1362() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2318 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 1;
		int element_2433 = 0;
		int element_2317 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode right_2319 = null;
		int level_2320 = 0;
		AANode left_2434 = null;
		AANode right_2435 = null;
		int level_2436 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		left_2318.element = element_2433;
		left_2318.left = left_2434;
		left_2318.right = right_2435;
		left_2318.level = level_2436;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1363() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 0;
		int element_2317 = -1;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode left_2318 = null;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1364() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2186 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 0;
		int element_2317 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2187 = null;
		int level_2188 = 0;
		AANode left_2318 = null;
		AANode right_2319 = null;
		int level_2320 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		left_2186.element = element_2317;
		left_2186.left = left_2318;
		left_2186.right = right_2319;
		left_2186.level = level_2320;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1365() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.nullNode;
		int element_2185 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode left_2186 = null;
		AANode right_2187 = null;
		int level_2188 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2185;
		right_2183.left = left_2186;
		right_2183.right = right_2187;
		right_2183.level = level_2188;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1366() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1367() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1368() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = left_2;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1369() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = left_2;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1370() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = right_3;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1371() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = right_3;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1372() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1373() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = left_2182;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1374() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = left_2182;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1375() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode right_2183 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1376() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1377() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1378() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1379() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.nullNode;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1380() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1381() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1382() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1383() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1384() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1385() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1386() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1387() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1388() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1389() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_3;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1390() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1391() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1392() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1393() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1394() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1395() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2182;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1396() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1397() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1398() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2462;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1399() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1400() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1401() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2462;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1402() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1403() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode right_2463 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1404() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode left_2466 = obj.root;
		int element_2465 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1405() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode left_2466 = right_2183;
		int element_2465 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1406() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode left_2466 = right_2463;
		int element_2465 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1407() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		AANode left_2466 = null;
		int element_2465 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1408() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2466 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		int element_2465 = 1;
		int element_2181 = -1;
		int element_2489 = 0;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		AANode left_2490 = null;
		AANode right_2491 = null;
		int level_2492 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		left_2466.element = element_2489;
		left_2466.left = left_2490;
		left_2466.right = right_2491;
		left_2466.level = level_2492;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1409() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2466 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		int element_2465 = 0;
		int element_2181 = -2;
		int element_2489 = 0;
		int level_4 = 0;
		int element_2461 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2467 = null;
		int level_2468 = 0;
		AANode left_2490 = null;
		AANode right_2491 = null;
		int level_2492 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		left_2466.element = element_2489;
		left_2466.left = left_2490;
		left_2466.right = right_2491;
		left_2466.level = level_2492;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1410() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.nullNode;
		int element_2465 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode left_2466 = null;
		AANode right_2467 = null;
		int level_2468 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2465;
		right_2463.left = left_2466;
		right_2463.right = right_2467;
		right_2463.level = level_2468;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1411() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1412() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1413() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1414() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.nullNode;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1415() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1416() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1417() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1418() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1419() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1420() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1421() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1422() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1423() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1424() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_3;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1425() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1426() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1427() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1428() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1429() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1430() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2182;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1431() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1432() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1433() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2462;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1434() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1435() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1436() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2462;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1437() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1438() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode right_2463 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1439() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode left_2498 = obj.root;
		int element_2497 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1440() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode left_2498 = right_2183;
		int element_2497 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1441() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode left_2498 = right_2463;
		int element_2497 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1442() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		AANode left_2498 = null;
		int element_2497 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1443() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2498 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		int element_2521 = 0;
		int element_2497 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		AANode left_2522 = null;
		AANode right_2523 = null;
		int level_2524 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		left_2498.element = element_2521;
		left_2498.left = left_2522;
		left_2498.right = right_2523;
		left_2498.level = level_2524;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1444() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2498 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		int element_2521 = 0;
		int element_2497 = 0;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2499 = null;
		int level_2500 = 0;
		AANode left_2522 = null;
		AANode right_2523 = null;
		int level_2524 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		left_2498.element = element_2521;
		left_2498.left = left_2522;
		left_2498.right = right_2523;
		left_2498.level = level_2524;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1445() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2;
		int element_2497 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode left_2498 = null;
		AANode right_2499 = null;
		int level_2500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2497;
		right_2463.left = left_2498;
		right_2463.right = right_2499;
		right_2463.level = level_2500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1446() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1447() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1448() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1449() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.nullNode;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1450() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1451() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1452() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1453() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1454() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1455() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1456() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1457() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1458() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1459() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_3;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1460() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1461() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1462() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1463() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1464() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1465() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2182;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1466() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1467() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1468() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2462;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1469() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1470() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1471() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2462;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1472() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1473() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode right_2463 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1474() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode left_2530 = obj.root;
		int element_2529 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1475() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode left_2530 = right_2183;
		int element_2529 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1476() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode left_2530 = right_2463;
		int element_2529 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1477() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		AANode left_2530 = null;
		int element_2529 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1478() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2530 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		int element_2553 = 0;
		int element_2529 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		AANode left_2554 = null;
		AANode right_2555 = null;
		int level_2556 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		left_2530.element = element_2553;
		left_2530.left = left_2554;
		left_2530.right = right_2555;
		left_2530.level = level_2556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1479() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2530 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		int element_2553 = 0;
		int element_2529 = 0;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2531 = null;
		int level_2532 = 0;
		AANode left_2554 = null;
		AANode right_2555 = null;
		int level_2556 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		left_2530.element = element_2553;
		left_2530.left = left_2554;
		left_2530.right = right_2555;
		left_2530.level = level_2556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1480() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_3;
		int element_2529 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode left_2530 = null;
		AANode right_2531 = null;
		int level_2532 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2529;
		right_2463.left = left_2530;
		right_2463.right = right_2531;
		right_2463.level = level_2532;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1481() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1482() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1483() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1484() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1485() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.nullNode;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1486() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.nullNode;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1487() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1488() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1489() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1490() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1491() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1492() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1493() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1494() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1495() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_3;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1496() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_3;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1497() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1498() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1499() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1500() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1501() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2182;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1502() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2182;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1503() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1504() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2462;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1505() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1506() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1507() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2462;
		int element_2181 = 0;
		int level_2464 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1508() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = left_2462;
		int element_2181 = -1;
		int level_2464 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1509() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode right_2463 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1510() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode left_2562 = obj.root;
		int element_2561 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1511() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode left_2562 = right_2183;
		int element_2561 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1512() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode left_2562 = right_2463;
		int element_2561 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1513() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		AANode left_2562 = null;
		int element_2561 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1514() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		int element_2561 = 1;
		int element_2181 = -1;
		int element_2585 = 0;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		AANode left_2586 = null;
		AANode right_2587 = null;
		int level_2588 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		left_2562.element = element_2585;
		left_2562.left = left_2586;
		left_2562.right = right_2587;
		left_2562.level = level_2588;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1515() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		int element_2561 = 0;
		int element_2181 = -2;
		int element_2585 = 0;
		int level_4 = 0;
		int element_2461 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode right_2563 = null;
		int level_2564 = 0;
		AANode left_2586 = null;
		AANode right_2587 = null;
		int level_2588 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		left_2562.element = element_2585;
		left_2562.left = left_2586;
		left_2562.right = right_2587;
		left_2562.level = level_2588;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1516() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2463 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = left_2182;
		int element_2561 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2464 = 0;
		AANode left_2562 = null;
		AANode right_2563 = null;
		int level_2564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		right_2463.element = element_2561;
		right_2463.left = left_2562;
		right_2463.right = right_2563;
		right_2463.level = level_2564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1517() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1518() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2462 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1519() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		AANode right_2595 = obj.root;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1520() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		AANode right_2595 = right_2183;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1521() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		AANode right_2595 = left_2462;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1522() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		AANode right_2595 = null;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1523() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		int element_2181 = -2;
		int element_2617 = -1;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2618 = null;
		AANode right_2619 = null;
		int level_2620 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2617;
		right_2595.left = left_2618;
		right_2595.right = right_2619;
		right_2595.level = level_2620;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1524() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.nullNode;
		int element_2181 = -2;
		int element_2617 = 0;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2618 = null;
		AANode right_2619 = null;
		int level_2620 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2617;
		right_2595.left = left_2618;
		right_2595.right = right_2619;
		right_2595.level = level_2620;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1525() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		AANode right_2595 = obj.root;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1526() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		AANode right_2595 = right_2183;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1527() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		AANode right_2595 = left_2462;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1528() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		AANode right_2595 = null;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1529() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		int element_2181 = -2;
		int element_2645 = -1;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2646 = null;
		AANode right_2647 = null;
		int level_2648 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2645;
		right_2595.left = left_2646;
		right_2595.right = right_2647;
		right_2595.level = level_2648;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1530() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2;
		int element_2181 = -2;
		int element_2645 = 0;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2646 = null;
		AANode right_2647 = null;
		int level_2648 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2645;
		right_2595.left = left_2646;
		right_2595.right = right_2647;
		right_2595.level = level_2648;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1531() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		AANode right_2595 = obj.root;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1532() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		AANode right_2595 = right_2183;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1533() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		AANode right_2595 = left_2462;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1534() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		AANode right_2595 = null;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1535() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		int element_2181 = -2;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		int element_2673 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2674 = null;
		AANode right_2675 = null;
		int level_2676 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2673;
		right_2595.left = left_2674;
		right_2595.right = right_2675;
		right_2595.level = level_2676;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1536() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_3;
		int element_2181 = -2;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		int element_2673 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2674 = null;
		AANode right_2675 = null;
		int level_2676 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2673;
		right_2595.left = left_2674;
		right_2595.right = right_2675;
		right_2595.level = level_2676;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1537() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = obj.root;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1538() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		AANode right_2595 = obj.root;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1539() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		AANode right_2595 = right_2183;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1540() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		AANode right_2595 = left_2462;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1541() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		AANode right_2595 = null;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1542() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		int element_2181 = -2;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		int element_2701 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2702 = null;
		AANode right_2703 = null;
		int level_2704 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2701;
		right_2595.left = left_2702;
		right_2595.right = right_2703;
		right_2595.level = level_2704;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1543() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode right_2595 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2182;
		int element_2181 = -2;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		int element_2701 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		int level_2596 = 0;
		AANode left_2702 = null;
		AANode right_2703 = null;
		int level_2704 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		right_2595.element = element_2701;
		right_2595.left = left_2702;
		right_2595.right = right_2703;
		right_2595.level = level_2704;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1544() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = right_2183;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1545() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = left_2462;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1546() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2594 = null;
		int element_2593 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1547() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2710 = obj.root;
		int element_2181 = 0;
		int element_2709 = 1;
		int element_2593 = 2;
		int level_4 = 0;
		int element_2461 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1548() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2710 = right_2183;
		int element_2181 = -3;
		int element_2709 = -2;
		int element_2593 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1549() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2710 = left_2462;
		int element_2181 = 0;
		int element_2709 = 1;
		int element_2593 = 2;
		int level_4 = 0;
		int element_2461 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1550() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2710 = left_2594;
		int element_2181 = 0;
		int element_2709 = 1;
		int element_2593 = 2;
		int level_4 = 0;
		int element_2461 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1551() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		AANode left_2710 = null;
		int element_2181 = 0;
		int element_2709 = 1;
		int element_2593 = 2;
		int level_4 = 0;
		int element_2461 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1552() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2710 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2181 = 0;
		int element_2729 = 0;
		int element_2709 = 1;
		int element_2593 = 2;
		int level_4 = 0;
		int element_2461 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		AANode left_2730 = null;
		AANode right_2731 = null;
		int level_2732 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		left_2710.element = element_2729;
		left_2710.left = left_2730;
		left_2710.right = right_2731;
		left_2710.level = level_2732;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1553() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2710 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2181 = -1;
		int element_2729 = 0;
		int element_2709 = 0;
		int element_2593 = 1;
		int level_4 = 0;
		int element_2461 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode right_2711 = null;
		int level_2712 = 0;
		AANode left_2730 = null;
		AANode right_2731 = null;
		int level_2732 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		left_2710.element = element_2729;
		left_2710.left = left_2730;
		left_2710.right = right_2731;
		left_2710.level = level_2732;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1554() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2593 = 1;
		int element_2709 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_2461 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode left_2710 = null;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1555() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2593 = 0;
		int element_2709 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode right_2595 = null;
		int level_2596 = 0;
		AANode left_2710 = null;
		AANode right_2711 = null;
		int level_2712 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		left_2594.element = element_2709;
		left_2594.left = left_2710;
		left_2594.right = right_2711;
		left_2594.level = level_2712;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1556() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2593 = -1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode left_2594 = null;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1557() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2462 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2593 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2463 = null;
		int level_2464 = 0;
		AANode left_2594 = null;
		AANode right_2595 = null;
		int level_2596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		left_2462.element = element_2593;
		left_2462.left = left_2594;
		left_2462.right = right_2595;
		left_2462.level = level_2596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1558() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = left_2;
		int element_2181 = 0;
		int level_4 = 0;
		int element_2461 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode left_2462 = null;
		AANode right_2463 = null;
		int level_2464 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2461;
		right_2183.left = left_2462;
		right_2183.right = right_2463;
		right_2183.level = level_2464;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1559() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1560() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1561() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = left_2;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1562() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = left_2;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1563() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = right_3;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1564() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = right_3;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1565() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1566() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = left_2182;
		int level_2184 = 4;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1567() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = left_2182;
		int level_2184 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1568() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode right_2183 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1569() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1570() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1571() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1572() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1573() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1574() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1575() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1576() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1577() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1578() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1579() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1580() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1581() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1582() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_3;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1583() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_3;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1584() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1585() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1586() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1587() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1588() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2182;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1589() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2182;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1590() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1591() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2738;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1592() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1593() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1594() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2738;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1595() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = left_2738;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1596() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode right_2739 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1597() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode left_2742 = obj.root;
		int element_2741 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1598() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode left_2742 = right_2183;
		int element_2741 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1599() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode left_2742 = right_2739;
		int element_2741 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1600() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		AANode left_2742 = null;
		int element_2741 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1601() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2742 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		int element_2181 = -1;
		int element_2737 = 0;
		int element_2765 = 0;
		int element_2741 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		AANode left_2766 = null;
		AANode right_2767 = null;
		int level_2768 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		left_2742.element = element_2765;
		left_2742.left = left_2766;
		left_2742.right = right_2767;
		left_2742.level = level_2768;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1602() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2742 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		int element_2181 = -2;
		int element_2737 = -1;
		int element_2765 = 0;
		int element_2741 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2743 = null;
		int level_2744 = 0;
		AANode left_2766 = null;
		AANode right_2767 = null;
		int level_2768 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		left_2742.element = element_2765;
		left_2742.left = left_2766;
		left_2742.right = right_2767;
		left_2742.level = level_2768;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1603() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.nullNode;
		int element_2741 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode left_2742 = null;
		AANode right_2743 = null;
		int level_2744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2741;
		right_2739.left = left_2742;
		right_2739.right = right_2743;
		right_2739.level = level_2744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1604() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1605() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1606() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1607() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1608() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1609() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1610() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1611() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1612() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1613() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1614() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1615() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1616() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1617() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_3;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1618() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_3;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1619() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1620() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1621() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1622() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1623() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2182;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1624() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2182;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1625() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1626() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2738;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1627() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1628() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1629() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2738;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1630() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = left_2738;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1631() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode right_2739 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1632() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode left_2774 = obj.root;
		int element_2773 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1633() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode left_2774 = right_2183;
		int element_2773 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1634() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode left_2774 = right_2739;
		int element_2773 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1635() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		AANode left_2774 = null;
		int element_2773 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1636() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2774 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		int element_2773 = 1;
		int element_2181 = -1;
		int element_2797 = 0;
		int element_2737 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		AANode left_2798 = null;
		AANode right_2799 = null;
		int level_2800 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		left_2774.element = element_2797;
		left_2774.left = left_2798;
		left_2774.right = right_2799;
		left_2774.level = level_2800;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1637() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2774 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		int element_2773 = 0;
		int element_2181 = -2;
		int element_2797 = 0;
		int element_2737 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2775 = null;
		int level_2776 = 0;
		AANode left_2798 = null;
		AANode right_2799 = null;
		int level_2800 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		left_2774.element = element_2797;
		left_2774.left = left_2798;
		left_2774.right = right_2799;
		left_2774.level = level_2800;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1638() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2;
		int element_2773 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode left_2774 = null;
		AANode right_2775 = null;
		int level_2776 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2773;
		right_2739.left = left_2774;
		right_2739.right = right_2775;
		right_2739.level = level_2776;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1639() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1640() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1641() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1642() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1643() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1644() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1645() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1646() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1647() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1648() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1649() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1650() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1651() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1652() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_3;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1653() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_3;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1654() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1655() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1656() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1657() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1658() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2182;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1659() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2182;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1660() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1661() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2738;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1662() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1663() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1664() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2738;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1665() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = left_2738;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1666() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode right_2739 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1667() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode left_2806 = obj.root;
		int element_2805 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1668() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode left_2806 = right_2183;
		int element_2805 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1669() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode left_2806 = right_2739;
		int element_2805 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1670() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		AANode left_2806 = null;
		int element_2805 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1671() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2806 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		int element_2181 = -1;
		int element_2805 = 1;
		int element_2737 = 0;
		int level_4 = 0;
		int element_2829 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		AANode left_2830 = null;
		AANode right_2831 = null;
		int level_2832 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		left_2806.element = element_2829;
		left_2806.left = left_2830;
		left_2806.right = right_2831;
		left_2806.level = level_2832;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1672() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2806 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		int element_2181 = -2;
		int element_2805 = 0;
		int element_2737 = -1;
		int level_4 = 0;
		int element_2829 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2807 = null;
		int level_2808 = 0;
		AANode left_2830 = null;
		AANode right_2831 = null;
		int level_2832 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		left_2806.element = element_2829;
		left_2806.left = left_2830;
		left_2806.right = right_2831;
		left_2806.level = level_2832;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1673() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_3;
		int element_2805 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode left_2806 = null;
		AANode right_2807 = null;
		int level_2808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2805;
		right_2739.left = left_2806;
		right_2739.right = right_2807;
		right_2739.level = level_2808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1674() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1675() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1676() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1677() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.nullNode;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1678() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1679() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.nullNode;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1680() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1681() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1682() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1683() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1684() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1685() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_3;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1686() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1687() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_3;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1688() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_3;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1689() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_3;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1690() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = obj.root;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1691() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2182;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1692() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1693() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2182;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1694() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2182;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1695() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2182;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1696() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1697() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2738;
		int level_2184 = 6;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1698() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = 2;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1699() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2738;
		int element_2181 = -1;
		int level_2740 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1700() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2738;
		int element_2737 = 1;
		int element_2181 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1701() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = left_2738;
		int element_2737 = 0;
		int element_2181 = -1;
		int level_2184 = 1;
		int level_4 = 0;
		int level_2740 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1702() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode right_2739 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1703() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode left_2838 = obj.root;
		int element_2837 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1704() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode left_2838 = right_2183;
		int element_2837 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1705() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode left_2838 = right_2739;
		int element_2837 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1706() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		AANode left_2838 = null;
		int element_2837 = 1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1707() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		int element_2181 = -1;
		int element_2737 = 0;
		int element_2861 = 0;
		int element_2837 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		AANode left_2862 = null;
		AANode right_2863 = null;
		int level_2864 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		left_2838.element = element_2861;
		left_2838.left = left_2862;
		left_2838.right = right_2863;
		left_2838.level = level_2864;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1708() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2838 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		int element_2181 = -2;
		int element_2737 = -1;
		int element_2861 = 0;
		int element_2837 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode right_2839 = null;
		int level_2840 = 0;
		AANode left_2862 = null;
		AANode right_2863 = null;
		int level_2864 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		left_2838.element = element_2861;
		left_2838.left = left_2862;
		left_2838.right = right_2863;
		left_2838.level = level_2864;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1709() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode right_2739 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = left_2182;
		int element_2837 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_2740 = 0;
		AANode left_2838 = null;
		AANode right_2839 = null;
		int level_2840 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		right_2739.element = element_2837;
		right_2739.left = left_2838;
		right_2739.right = right_2839;
		right_2739.level = level_2840;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1710() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = right_2183;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1711() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2738 = null;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1712() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		AANode right_2871 = obj.root;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1713() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		AANode right_2871 = right_2183;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1714() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		AANode right_2871 = left_2738;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1715() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		AANode right_2871 = null;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1716() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int element_2893 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2894 = null;
		AANode right_2895 = null;
		int level_2896 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2893;
		right_2871.left = left_2894;
		right_2871.right = right_2895;
		right_2871.level = level_2896;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1717() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.nullNode;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int element_2893 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2894 = null;
		AANode right_2895 = null;
		int level_2896 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2893;
		right_2871.left = left_2894;
		right_2871.right = right_2895;
		right_2871.level = level_2896;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1718() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		AANode right_2871 = obj.root;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1719() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		AANode right_2871 = right_2183;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1720() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		AANode right_2871 = left_2738;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1721() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		AANode right_2871 = null;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1722() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int element_2921 = -1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2922 = null;
		AANode right_2923 = null;
		int level_2924 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2921;
		right_2871.left = left_2922;
		right_2871.right = right_2923;
		right_2871.level = level_2924;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1723() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int element_2921 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2922 = null;
		AANode right_2923 = null;
		int level_2924 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2921;
		right_2871.left = left_2922;
		right_2871.right = right_2923;
		right_2871.level = level_2924;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1724() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		AANode right_2871 = obj.root;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1725() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		AANode right_2871 = right_2183;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1726() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		AANode right_2871 = left_2738;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1727() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		AANode right_2871 = null;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1728() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		int element_2949 = -1;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2950 = null;
		AANode right_2951 = null;
		int level_2952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2949;
		right_2871.left = left_2950;
		right_2871.right = right_2951;
		right_2871.level = level_2952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1729() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_3;
		int element_2949 = 0;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2950 = null;
		AANode right_2951 = null;
		int level_2952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2949;
		right_2871.left = left_2950;
		right_2871.right = right_2951;
		right_2871.level = level_2952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1730() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = obj.root;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1731() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		AANode right_2871 = obj.root;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1732() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		AANode right_2871 = right_2183;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1733() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		AANode right_2871 = left_2738;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1734() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		AANode right_2871 = null;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1735() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int level_4 = 0;
		int element_2977 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2978 = null;
		AANode right_2979 = null;
		int level_2980 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2977;
		right_2871.left = left_2978;
		right_2871.right = right_2979;
		right_2871.level = level_2980;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1736() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode right_2871 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2182;
		int element_2869 = -1;
		int element_2181 = -2;
		int element_2737 = 0;
		int level_4 = 0;
		int element_2977 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		int level_2872 = 0;
		AANode left_2978 = null;
		AANode right_2979 = null;
		int level_2980 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		right_2871.element = element_2977;
		right_2871.left = left_2978;
		right_2871.right = right_2979;
		right_2871.level = level_2980;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1737() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = right_2183;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1738() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = left_2738;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1739() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2870 = null;
		int element_2869 = -1;
		int element_2181 = -2;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1740() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2986 = obj.root;
		int element_2869 = 2;
		int element_2181 = 0;
		int element_2737 = 3;
		int element_2985 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1741() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2986 = right_2183;
		int element_2869 = -1;
		int element_2181 = -3;
		int element_2737 = 0;
		int element_2985 = -2;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1742() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2986 = left_2738;
		int element_2869 = 2;
		int element_2181 = 0;
		int element_2737 = 3;
		int element_2985 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1743() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2986 = left_2870;
		int element_2869 = 2;
		int element_2181 = 0;
		int element_2737 = 3;
		int element_2985 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1744() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		AANode left_2986 = null;
		int element_2869 = 2;
		int element_2181 = 0;
		int element_2737 = 3;
		int element_2985 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1745() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2986 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = 2;
		int element_2181 = 0;
		int element_2737 = 3;
		int element_3005 = 0;
		int element_2985 = 1;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		AANode left_3006 = null;
		AANode right_3007 = null;
		int level_3008 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		left_2986.element = element_3005;
		left_2986.left = left_3006;
		left_2986.right = right_3007;
		left_2986.level = level_3008;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1746() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2986 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = 1;
		int element_2181 = -1;
		int element_2737 = 2;
		int element_3005 = 0;
		int element_2985 = 0;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode right_2987 = null;
		int level_2988 = 0;
		AANode left_3006 = null;
		AANode right_3007 = null;
		int level_3008 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		left_2986.element = element_3005;
		left_2986.left = left_3006;
		left_2986.right = right_3007;
		left_2986.level = level_3008;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1747() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = 1;
		int element_2985 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_2737 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode left_2986 = null;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1748() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2870 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = 0;
		int element_2985 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode right_2871 = null;
		int level_2872 = 0;
		AANode left_2986 = null;
		AANode right_2987 = null;
		int level_2988 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		left_2870.element = element_2985;
		left_2870.left = left_2986;
		left_2870.right = right_2987;
		left_2870.level = level_2988;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1749() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = -1;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode left_2870 = null;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1750() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2738 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2869 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode right_2739 = null;
		int level_2740 = 0;
		AANode left_2870 = null;
		AANode right_2871 = null;
		int level_2872 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		left_2738.element = element_2869;
		left_2738.left = left_2870;
		left_2738.right = right_2871;
		left_2738.level = level_2872;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1751() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = right_3;
		int element_2181 = 0;
		int level_4 = 0;
		int element_2737 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		AANode left_2738 = null;
		AANode right_2739 = null;
		int level_2740 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		right_2183.element = element_2737;
		right_2183.left = left_2738;
		right_2183.right = right_2739;
		right_2183.level = level_2740;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1752() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = obj.root;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1753() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_2182 = null;
		int level_4 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_2181 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1754() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1755() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1756() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1757() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1758() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1759() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1760() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1761() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1762() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1763() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1764() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1765() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1766() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1767() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1768() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1769() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1770() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1771() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1772() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode left_3018 = obj.root;
		int element_3017 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1773() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode left_3018 = left_2182;
		int element_3017 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1774() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode left_3018 = right_2183;
		int element_3017 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1775() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		AANode left_3018 = null;
		int element_3017 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1776() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3018 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		int element_3041 = 0;
		int element_2181 = 0;
		int element_3017 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		AANode left_3042 = null;
		AANode right_3043 = null;
		int level_3044 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		left_3018.element = element_3041;
		left_3018.left = left_3042;
		left_3018.right = right_3043;
		left_3018.level = level_3044;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1777() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3018 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		int element_3041 = 0;
		int element_2181 = -1;
		int element_3017 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3019 = null;
		int level_3020 = 0;
		AANode left_3042 = null;
		AANode right_3043 = null;
		int level_3044 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		left_3018.element = element_3041;
		left_3018.left = left_3042;
		left_3018.right = right_3043;
		left_3018.level = level_3044;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1778() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.nullNode;
		int element_3017 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3018 = null;
		AANode right_3019 = null;
		int level_3020 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3017;
		right_2183.left = left_3018;
		right_2183.right = right_3019;
		right_2183.level = level_3020;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1779() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1780() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1781() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1782() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1783() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1784() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1785() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1786() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1787() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1788() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1789() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1790() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1791() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1792() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1793() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1794() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1795() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1796() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1797() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode left_3050 = obj.root;
		int element_3049 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1798() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode left_3050 = left_2182;
		int element_3049 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1799() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode left_3050 = right_2183;
		int element_3049 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1800() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		AANode left_3050 = null;
		int element_3049 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1801() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3050 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		int element_3073 = 0;
		int element_2181 = 0;
		int element_3049 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		AANode left_3074 = null;
		AANode right_3075 = null;
		int level_3076 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		left_3050.element = element_3073;
		left_3050.left = left_3074;
		left_3050.right = right_3075;
		left_3050.level = level_3076;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1802() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3050 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		int element_3073 = 0;
		int element_2181 = -1;
		int element_3049 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3051 = null;
		int level_3052 = 0;
		AANode left_3074 = null;
		AANode right_3075 = null;
		int level_3076 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		left_3050.element = element_3073;
		left_3050.left = left_3074;
		left_3050.right = right_3075;
		left_3050.level = level_3076;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1803() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2;
		int element_3049 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3050 = null;
		AANode right_3051 = null;
		int level_3052 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3049;
		right_2183.left = left_3050;
		right_2183.right = right_3051;
		right_2183.level = level_3052;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1804() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1805() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1806() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1807() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1808() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1809() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1810() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1811() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1812() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1813() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1814() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1815() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1816() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1817() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1818() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1819() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1820() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1821() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1822() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode left_3082 = obj.root;
		int element_3081 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1823() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode left_3082 = left_2182;
		int element_3081 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1824() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode left_3082 = right_2183;
		int element_3081 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1825() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		AANode left_3082 = null;
		int element_3081 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1826() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		int element_3081 = 1;
		int element_3105 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		AANode left_3106 = null;
		AANode right_3107 = null;
		int level_3108 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		left_3082.element = element_3105;
		left_3082.left = left_3106;
		left_3082.right = right_3107;
		left_3082.level = level_3108;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1827() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3082 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		int element_3081 = 0;
		int element_3105 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3083 = null;
		int level_3084 = 0;
		AANode left_3106 = null;
		AANode right_3107 = null;
		int level_3108 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		left_3082.element = element_3105;
		left_3082.left = left_3106;
		left_3082.right = right_3107;
		left_3082.level = level_3108;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1828() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = right_3;
		int element_3081 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3082 = null;
		AANode right_3083 = null;
		int level_3084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3081;
		right_2183.left = left_3082;
		right_2183.right = right_3083;
		right_2183.level = level_3084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1829() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1830() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1831() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1832() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1833() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1834() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1835() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1836() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1837() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1838() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1839() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1840() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1841() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1842() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1843() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1844() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1845() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1846() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1847() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1848() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1849() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode left_3114 = obj.root;
		int element_3113 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1850() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode left_3114 = left_2182;
		int element_3113 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1851() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode left_3114 = right_2183;
		int element_3113 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1852() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		AANode left_3114 = null;
		int element_3113 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1853() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3114 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_2181 = 0;
		int element_3113 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		int element_3137 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		AANode left_3138 = null;
		AANode right_3139 = null;
		int level_3140 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		left_3114.element = element_3137;
		left_3114.left = left_3138;
		left_3114.right = right_3139;
		left_3114.level = level_3140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1854() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3114 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_2181 = -1;
		int element_3113 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3137 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3115 = null;
		int level_3116 = 0;
		AANode left_3138 = null;
		AANode right_3139 = null;
		int level_3140 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		left_3114.element = element_3137;
		left_3114.left = left_3138;
		left_3114.right = right_3139;
		left_3114.level = level_3140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1855() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_3113 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3114 = null;
		AANode right_3115 = null;
		int level_3116 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3113;
		right_2183.left = left_3114;
		right_2183.right = right_3115;
		right_2183.level = level_3116;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1856() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode right_3015 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1857() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		AANode right_3147 = obj.root;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1858() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		AANode right_3147 = left_2182;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1859() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		AANode right_3147 = right_3015;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1860() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		AANode right_3147 = null;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1861() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		int element_3169 = -1;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3170 = null;
		AANode right_3171 = null;
		int level_3172 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3169;
		right_3147.left = left_3170;
		right_3147.right = right_3171;
		right_3147.level = level_3172;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1862() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.nullNode;
		int element_3169 = 0;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3170 = null;
		AANode right_3171 = null;
		int level_3172 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3169;
		right_3147.left = left_3170;
		right_3147.right = right_3171;
		right_3147.level = level_3172;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1863() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		AANode right_3147 = obj.root;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1864() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		AANode right_3147 = left_2182;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1865() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		AANode right_3147 = right_3015;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1866() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		AANode right_3147 = null;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1867() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		int element_3197 = -1;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3198 = null;
		AANode right_3199 = null;
		int level_3200 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3197;
		right_3147.left = left_3198;
		right_3147.right = right_3199;
		right_3147.level = level_3200;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1868() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2;
		int element_3197 = 0;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3198 = null;
		AANode right_3199 = null;
		int level_3200 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3197;
		right_3147.left = left_3198;
		right_3147.right = right_3199;
		right_3147.level = level_3200;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1869() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		AANode right_3147 = obj.root;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1870() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		AANode right_3147 = left_2182;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1871() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		AANode right_3147 = right_3015;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1872() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		AANode right_3147 = null;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1873() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		int element_3225 = -1;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3226 = null;
		AANode right_3227 = null;
		int level_3228 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3225;
		right_3147.left = left_3226;
		right_3147.right = right_3227;
		right_3147.level = level_3228;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1874() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3;
		int element_3225 = 0;
		int element_2181 = 0;
		int element_3145 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3226 = null;
		AANode right_3227 = null;
		int level_3228 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3225;
		right_3147.left = left_3226;
		right_3147.right = right_3227;
		right_3147.level = level_3228;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1875() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = obj.root;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1876() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_2182;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1877() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		AANode right_3147 = obj.root;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1878() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		AANode right_3147 = left_2182;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1879() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		AANode right_3147 = right_3015;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1880() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		AANode right_3147 = null;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1881() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		int element_2181 = 0;
		int element_3145 = -1;
		int element_3253 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3254 = null;
		AANode right_3255 = null;
		int level_3256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3253;
		right_3147.left = left_3254;
		right_3147.right = right_3255;
		right_3147.level = level_3256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1882() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3147 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = left_3014;
		int element_2181 = 0;
		int element_3145 = -1;
		int element_3253 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3148 = 0;
		AANode left_3254 = null;
		AANode right_3255 = null;
		int level_3256 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		right_3147.element = element_3253;
		right_3147.left = left_3254;
		right_3147.right = right_3255;
		right_3147.level = level_3256;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1883() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = right_3015;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1884() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3146 = null;
		int element_3145 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1885() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3262 = obj.root;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1886() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3262 = left_2182;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1887() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3262 = right_3015;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1888() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3262 = left_3146;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1889() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		AANode left_3262 = null;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1890() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_3262 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_2181 = 3;
		int element_3145 = 2;
		int element_3261 = 1;
		int element_3281 = 0;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		AANode left_3282 = null;
		AANode right_3283 = null;
		int level_3284 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		left_3262.element = element_3281;
		left_3262.left = left_3282;
		left_3262.right = right_3283;
		left_3262.level = level_3284;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1891() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_3262 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_2181 = 2;
		int element_3145 = 1;
		int element_3261 = 0;
		int element_3281 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode right_3263 = null;
		int level_3264 = 0;
		AANode left_3282 = null;
		AANode right_3283 = null;
		int level_3284 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		left_3262.element = element_3281;
		left_3262.left = left_3282;
		left_3262.right = right_3283;
		left_3262.level = level_3284;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1892() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_3145 = 1;
		int element_3261 = 0;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode left_3262 = null;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1893() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3146 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_3145 = 0;
		int element_3261 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3147 = null;
		int level_3148 = 0;
		AANode left_3262 = null;
		AANode right_3263 = null;
		int level_3264 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		left_3146.element = element_3261;
		left_3146.left = left_3262;
		left_3146.right = right_3263;
		left_3146.level = level_3264;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1894() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_3145 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3146 = null;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1895() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.nullNode;
		int element_3145 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3146 = null;
		AANode right_3147 = null;
		int level_3148 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3145;
		right_3015.left = left_3146;
		right_3015.right = right_3147;
		right_3015.level = level_3148;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1896() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1897() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1898() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1899() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1900() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1901() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1902() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1903() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1904() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1905() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1906() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1907() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1908() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1909() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1910() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1911() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1912() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1913() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1914() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode left_3290 = obj.root;
		int element_3289 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1915() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode left_3290 = left_2182;
		int element_3289 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1916() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode left_3290 = right_2183;
		int element_3289 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1917() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		AANode left_3290 = null;
		int element_3289 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1918() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3290 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		int element_2181 = 0;
		int element_3313 = 0;
		int element_3289 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		AANode left_3314 = null;
		AANode right_3315 = null;
		int level_3316 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		left_3290.element = element_3313;
		left_3290.left = left_3314;
		left_3290.right = right_3315;
		left_3290.level = level_3316;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1919() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3290 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		int element_2181 = -1;
		int element_3313 = 0;
		int element_3289 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3291 = null;
		int level_3292 = 0;
		AANode left_3314 = null;
		AANode right_3315 = null;
		int level_3316 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		left_3290.element = element_3313;
		left_3290.left = left_3314;
		left_3290.right = right_3315;
		left_3290.level = level_3316;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1920() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.nullNode;
		int element_3289 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3290 = null;
		AANode right_3291 = null;
		int level_3292 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3289;
		right_2183.left = left_3290;
		right_2183.right = right_3291;
		right_2183.level = level_3292;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1921() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1922() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1923() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1924() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1925() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1926() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1927() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1928() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1929() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1930() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1931() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1932() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1933() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1934() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1935() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1936() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1937() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1938() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1939() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode left_3322 = obj.root;
		int element_3321 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1940() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode left_3322 = left_2182;
		int element_3321 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1941() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode left_3322 = right_2183;
		int element_3321 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1942() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		AANode left_3322 = null;
		int element_3321 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1943() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3322 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		int element_3345 = 0;
		int element_2181 = 0;
		int element_3321 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		AANode left_3346 = null;
		AANode right_3347 = null;
		int level_3348 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		left_3322.element = element_3345;
		left_3322.left = left_3346;
		left_3322.right = right_3347;
		left_3322.level = level_3348;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1944() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3322 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		int element_3345 = 0;
		int element_2181 = -1;
		int element_3321 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3323 = null;
		int level_3324 = 0;
		AANode left_3346 = null;
		AANode right_3347 = null;
		int level_3348 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		left_3322.element = element_3345;
		left_3322.left = left_3346;
		left_3322.right = right_3347;
		left_3322.level = level_3348;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1945() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2;
		int element_3321 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3322 = null;
		AANode right_3323 = null;
		int level_3324 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3321;
		right_2183.left = left_3322;
		right_2183.right = right_3323;
		right_2183.level = level_3324;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1946() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1947() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1948() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1949() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1950() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1951() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1952() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1953() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1954() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1955() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1956() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1957() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1958() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1959() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1960() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1961() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1962() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1963() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1964() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode left_3354 = obj.root;
		int element_3353 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1965() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode left_3354 = left_2182;
		int element_3353 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1966() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode left_3354 = right_2183;
		int element_3353 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1967() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		AANode left_3354 = null;
		int element_3353 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1968() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3354 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		int element_3377 = 0;
		int element_3353 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		AANode left_3378 = null;
		AANode right_3379 = null;
		int level_3380 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		left_3354.element = element_3377;
		left_3354.left = left_3378;
		left_3354.right = right_3379;
		left_3354.level = level_3380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1969() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3354 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		int element_3377 = 0;
		int element_3353 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3355 = null;
		int level_3356 = 0;
		AANode left_3378 = null;
		AANode right_3379 = null;
		int level_3380 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		left_3354.element = element_3377;
		left_3354.left = left_3378;
		left_3354.right = right_3379;
		left_3354.level = level_3380;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1970() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = right_3;
		int element_3353 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3354 = null;
		AANode right_3355 = null;
		int level_3356 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3353;
		right_2183.left = left_3354;
		right_2183.right = right_3355;
		right_2183.level = level_3356;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1971() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1972() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1973() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1974() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1975() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1976() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1977() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1978() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1979() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1980() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1981() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1982() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1983() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1984() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1985() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1986() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1987() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1988() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1989() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1990() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1991() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode left_3386 = obj.root;
		int element_3385 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1992() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode left_3386 = left_2182;
		int element_3385 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1993() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode left_3386 = right_2183;
		int element_3385 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1994() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		AANode left_3386 = null;
		int element_3385 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1995() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		int element_3385 = 1;
		int element_2181 = 0;
		int element_3409 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		AANode left_3410 = null;
		AANode right_3411 = null;
		int level_3412 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		left_3386.element = element_3409;
		left_3386.left = left_3410;
		left_3386.right = right_3411;
		left_3386.level = level_3412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1996() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3386 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		int element_3385 = 0;
		int element_2181 = -1;
		int element_3409 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3387 = null;
		int level_3388 = 0;
		AANode left_3410 = null;
		AANode right_3411 = null;
		int level_3412 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		left_3386.element = element_3409;
		left_3386.left = left_3410;
		left_3386.right = right_3411;
		left_3386.level = level_3412;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1997() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = left_3014;
		int element_3385 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3386 = null;
		AANode right_3387 = null;
		int level_3388 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3385;
		right_2183.left = left_3386;
		right_2183.right = right_3387;
		right_2183.level = level_3388;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1998() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode right_3015 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed1999() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		AANode right_3419 = obj.root;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2000() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		AANode right_3419 = left_2182;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2001() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		AANode right_3419 = right_3015;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2002() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		AANode right_3419 = null;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2003() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		int element_3441 = -1;
		int element_2181 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3442 = null;
		AANode right_3443 = null;
		int level_3444 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3441;
		right_3419.left = left_3442;
		right_3419.right = right_3443;
		right_3419.level = level_3444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2004() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.nullNode;
		int element_3441 = 0;
		int element_2181 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3442 = null;
		AANode right_3443 = null;
		int level_3444 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3441;
		right_3419.left = left_3442;
		right_3419.right = right_3443;
		right_3419.level = level_3444;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2005() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		AANode right_3419 = obj.root;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2006() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		AANode right_3419 = left_2182;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2007() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		AANode right_3419 = right_3015;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2008() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		AANode right_3419 = null;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2009() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		int element_2181 = 0;
		int element_3469 = -1;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3470 = null;
		AANode right_3471 = null;
		int level_3472 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3469;
		right_3419.left = left_3470;
		right_3419.right = right_3471;
		right_3419.level = level_3472;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2010() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2;
		int element_2181 = 0;
		int element_3469 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3470 = null;
		AANode right_3471 = null;
		int level_3472 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3469;
		right_3419.left = left_3470;
		right_3419.right = right_3471;
		right_3419.level = level_3472;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2011() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		AANode right_3419 = obj.root;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2012() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		AANode right_3419 = left_2182;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2013() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		AANode right_3419 = right_3015;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2014() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		AANode right_3419 = null;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2015() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		int element_3497 = -1;
		int element_2181 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3498 = null;
		AANode right_3499 = null;
		int level_3500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3497;
		right_3419.left = left_3498;
		right_3419.right = right_3499;
		right_3419.level = level_3500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2016() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3;
		int element_3497 = 0;
		int element_2181 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3498 = null;
		AANode right_3499 = null;
		int level_3500 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3497;
		right_3419.left = left_3498;
		right_3419.right = right_3499;
		right_3419.level = level_3500;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2017() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = obj.root;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2018() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_2182;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2019() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		AANode right_3419 = obj.root;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2020() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		AANode right_3419 = left_2182;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2021() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		AANode right_3419 = right_3015;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2022() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		AANode right_3419 = null;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2023() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		int element_2181 = 0;
		int element_3525 = -1;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3526 = null;
		AANode right_3527 = null;
		int level_3528 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3525;
		right_3419.left = left_3526;
		right_3419.right = right_3527;
		right_3419.level = level_3528;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2024() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3419 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = left_3014;
		int element_2181 = 0;
		int element_3525 = 0;
		int element_3417 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3420 = 0;
		AANode left_3526 = null;
		AANode right_3527 = null;
		int level_3528 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		right_3419.element = element_3525;
		right_3419.left = left_3526;
		right_3419.right = right_3527;
		right_3419.level = level_3528;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2025() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = right_3015;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2026() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3418 = null;
		int element_3417 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2027() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3534 = obj.root;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2028() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3534 = left_2182;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2029() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3534 = right_3015;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2030() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3534 = left_3418;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2031() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		AANode left_3534 = null;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2032() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_3534 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3553 = 0;
		int element_2181 = 3;
		int element_3533 = 1;
		int element_3417 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		AANode left_3554 = null;
		AANode right_3555 = null;
		int level_3556 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		left_3534.element = element_3553;
		left_3534.left = left_3554;
		left_3534.right = right_3555;
		left_3534.level = level_3556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2033() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_3534 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3553 = 0;
		int element_2181 = 2;
		int element_3533 = 0;
		int element_3417 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode right_3535 = null;
		int level_3536 = 0;
		AANode left_3554 = null;
		AANode right_3555 = null;
		int level_3556 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		left_3534.element = element_3553;
		left_3534.left = left_3554;
		left_3534.right = right_3555;
		left_3534.level = level_3556;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2034() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3417 = 1;
		int element_3533 = 0;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode left_3534 = null;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2035() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3418 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3417 = 0;
		int element_3533 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3419 = null;
		int level_3420 = 0;
		AANode left_3534 = null;
		AANode right_3535 = null;
		int level_3536 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		left_3418.element = element_3533;
		left_3418.left = left_3534;
		left_3418.right = right_3535;
		left_3418.level = level_3536;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2036() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3417 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3418 = null;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2037() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2;
		int element_3417 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3418 = null;
		AANode right_3419 = null;
		int level_3420 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3417;
		right_3015.left = left_3418;
		right_3015.right = right_3419;
		right_3015.level = level_3420;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2038() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2039() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2040() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2041() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2042() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2043() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2044() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2045() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2046() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2047() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2048() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2049() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2050() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2051() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2052() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2053() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2054() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2055() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2056() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode left_3562 = obj.root;
		int element_3561 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2057() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode left_3562 = left_2182;
		int element_3561 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2058() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode left_3562 = right_2183;
		int element_3561 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2059() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		AANode left_3562 = null;
		int element_3561 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2060() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		int element_3585 = 0;
		int element_2181 = 0;
		int element_3561 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		AANode left_3586 = null;
		AANode right_3587 = null;
		int level_3588 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		left_3562.element = element_3585;
		left_3562.left = left_3586;
		left_3562.right = right_3587;
		left_3562.level = level_3588;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2061() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3562 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		int element_3585 = 0;
		int element_2181 = -1;
		int element_3561 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3563 = null;
		int level_3564 = 0;
		AANode left_3586 = null;
		AANode right_3587 = null;
		int level_3588 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		left_3562.element = element_3585;
		left_3562.left = left_3586;
		left_3562.right = right_3587;
		left_3562.level = level_3588;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2062() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.nullNode;
		int element_3561 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3562 = null;
		AANode right_3563 = null;
		int level_3564 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3561;
		right_2183.left = left_3562;
		right_2183.right = right_3563;
		right_2183.level = level_3564;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2063() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2064() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2065() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2066() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2067() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2068() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2069() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2070() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2071() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2072() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2073() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2074() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2075() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2076() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2077() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2078() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2079() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2080() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2081() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode left_3594 = obj.root;
		int element_3593 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2082() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode left_3594 = left_2182;
		int element_3593 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2083() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode left_3594 = right_2183;
		int element_3593 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2084() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		AANode left_3594 = null;
		int element_3593 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2085() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		int element_3617 = 0;
		int element_3593 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		AANode left_3618 = null;
		AANode right_3619 = null;
		int level_3620 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		left_3594.element = element_3617;
		left_3594.left = left_3618;
		left_3594.right = right_3619;
		left_3594.level = level_3620;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2086() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3594 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		int element_3617 = 0;
		int element_3593 = 0;
		int element_2181 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3595 = null;
		int level_3596 = 0;
		AANode left_3618 = null;
		AANode right_3619 = null;
		int level_3620 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		left_3594.element = element_3617;
		left_3594.left = left_3618;
		left_3594.right = right_3619;
		left_3594.level = level_3620;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2087() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2;
		int element_3593 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3594 = null;
		AANode right_3595 = null;
		int level_3596 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3593;
		right_2183.left = left_3594;
		right_2183.right = right_3595;
		right_2183.level = level_3596;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2088() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2089() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2090() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2091() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2092() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2093() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2094() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2095() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2096() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2097() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2098() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2099() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2100() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2101() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2102() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2103() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2104() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2105() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2106() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode left_3626 = obj.root;
		int element_3625 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2107() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode left_3626 = left_2182;
		int element_3625 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2108() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode left_3626 = right_2183;
		int element_3625 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2109() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		AANode left_3626 = null;
		int element_3625 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2110() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3626 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		int element_3625 = 1;
		int element_2181 = 0;
		int element_3649 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		AANode left_3650 = null;
		AANode right_3651 = null;
		int level_3652 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		left_3626.element = element_3649;
		left_3626.left = left_3650;
		left_3626.right = right_3651;
		left_3626.level = level_3652;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2111() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3626 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		int element_3625 = 0;
		int element_2181 = -1;
		int element_3649 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3627 = null;
		int level_3628 = 0;
		AANode left_3650 = null;
		AANode right_3651 = null;
		int level_3652 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		left_3626.element = element_3649;
		left_3626.left = left_3650;
		left_3626.right = right_3651;
		left_3626.level = level_3652;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2112() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = right_3;
		int element_3625 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3626 = null;
		AANode right_3627 = null;
		int level_3628 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3625;
		right_2183.left = left_3626;
		right_2183.right = right_3627;
		right_2183.level = level_3628;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2113() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2114() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2115() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2116() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2117() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.nullNode;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2118() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2119() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2120() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2121() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2122() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2123() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2124() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2125() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_2182;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2126() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2127() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2128() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = left_3014;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2129() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_2184 = 6;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2130() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int level_3016 = 6;
		int element_2181 = 1;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2131() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = right_3015;
		int element_2181 = 0;
		int level_3016 = 0;
		int level_2184 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2132() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode right_2183 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2133() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode left_3658 = obj.root;
		int element_3657 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2134() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode left_3658 = left_2182;
		int element_3657 = 2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2135() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode left_3658 = right_2183;
		int element_3657 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2136() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		AANode left_3658 = null;
		int element_3657 = 1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2137() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		int element_2181 = 0;
		int element_3657 = 1;
		int element_3681 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		AANode left_3682 = null;
		AANode right_3683 = null;
		int level_3684 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		left_3658.element = element_3681;
		left_3658.left = left_3682;
		left_3658.right = right_3683;
		left_3658.level = level_3684;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2138() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_3658 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		int element_2181 = -1;
		int element_3657 = 0;
		int element_3681 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3659 = null;
		int level_3660 = 0;
		AANode left_3682 = null;
		AANode right_3683 = null;
		int level_3684 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		left_3658.element = element_3681;
		left_3658.left = left_3682;
		left_3658.right = right_3683;
		left_3658.level = level_3684;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2139() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_2183 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = left_3014;
		int element_3657 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3658 = null;
		AANode right_3659 = null;
		int level_3660 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_2183.element = element_3657;
		right_2183.left = left_3658;
		right_2183.right = right_3659;
		right_2183.level = level_3660;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2140() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode right_3015 = null;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2141() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		AANode right_3691 = obj.root;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2142() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		AANode right_3691 = left_2182;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2143() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		AANode right_3691 = right_3015;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2144() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		AANode right_3691 = null;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2145() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		int element_2181 = 0;
		int element_3713 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3714 = null;
		AANode right_3715 = null;
		int level_3716 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3713;
		right_3691.left = left_3714;
		right_3691.right = right_3715;
		right_3691.level = level_3716;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2146() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.nullNode;
		int element_2181 = 0;
		int element_3713 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3714 = null;
		AANode right_3715 = null;
		int level_3716 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3713;
		right_3691.left = left_3714;
		right_3691.right = right_3715;
		right_3691.level = level_3716;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2147() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		AANode right_3691 = obj.root;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2148() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		AANode right_3691 = left_2182;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2149() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		AANode right_3691 = right_3015;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2150() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		AANode right_3691 = null;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2151() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		int element_2181 = 0;
		int element_3741 = -1;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3742 = null;
		AANode right_3743 = null;
		int level_3744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3741;
		right_3691.left = left_3742;
		right_3691.right = right_3743;
		right_3691.level = level_3744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2152() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2;
		int element_2181 = 0;
		int element_3741 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3742 = null;
		AANode right_3743 = null;
		int level_3744 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3741;
		right_3691.left = left_3742;
		right_3691.right = right_3743;
		right_3691.level = level_3744;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2153() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		AANode right_3691 = obj.root;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2154() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		AANode right_3691 = left_2182;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2155() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		AANode right_3691 = right_3015;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2156() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		AANode right_3691 = null;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2157() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		int element_3769 = -1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3770 = null;
		AANode right_3771 = null;
		int level_3772 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3769;
		right_3691.left = left_3770;
		right_3691.right = right_3771;
		right_3691.level = level_3772;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2158() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3;
		int element_3769 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3770 = null;
		AANode right_3771 = null;
		int level_3772 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3769;
		right_3691.left = left_3770;
		right_3691.right = right_3771;
		right_3691.level = level_3772;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2159() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = obj.root;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2160() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_2182;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2161() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		AANode right_3691 = obj.root;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2162() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		AANode right_3691 = left_2182;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2163() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		AANode right_3691 = right_3015;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2164() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		AANode right_3691 = null;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2165() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		int element_3797 = -1;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3798 = null;
		AANode right_3799 = null;
		int level_3800 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3797;
		right_3691.left = left_3798;
		right_3691.right = right_3799;
		right_3691.level = level_3800;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2166() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode right_3691 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = left_3014;
		int element_3797 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -2;
		int element_3689 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3692 = 0;
		AANode left_3798 = null;
		AANode right_3799 = null;
		int level_3800 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		right_3691.element = element_3797;
		right_3691.left = left_3798;
		right_3691.right = right_3799;
		right_3691.level = level_3800;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2167() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = right_3015;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2168() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3690 = null;
		int element_3689 = 1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2169() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3806 = obj.root;
		int element_3013 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2170() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3806 = left_2182;
		int element_3013 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2171() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3806 = right_3015;
		int element_3013 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2172() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3806 = left_3690;
		int element_3013 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2173() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		AANode left_3806 = null;
		int element_3013 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2174() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_3806 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3013 = 0;
		int element_3825 = 0;
		int element_2181 = 3;
		int element_3805 = 1;
		int level_4 = 0;
		int element_3689 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		AANode left_3826 = null;
		AANode right_3827 = null;
		int level_3828 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		left_3806.element = element_3825;
		left_3806.left = left_3826;
		left_3806.right = right_3827;
		left_3806.level = level_3828;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2175() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_3806 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3013 = -1;
		int element_3825 = 0;
		int element_2181 = 2;
		int element_3805 = 0;
		int level_4 = 0;
		int element_3689 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode right_3807 = null;
		int level_3808 = 0;
		AANode left_3826 = null;
		AANode right_3827 = null;
		int level_3828 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		left_3806.element = element_3825;
		left_3806.left = left_3826;
		left_3806.right = right_3827;
		left_3806.level = level_3828;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2176() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3689 = 1;
		int element_3805 = 0;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode left_3806 = null;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2177() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_3690 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3689 = 0;
		int element_3805 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode right_3691 = null;
		int level_3692 = 0;
		AANode left_3806 = null;
		AANode right_3807 = null;
		int level_3808 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		left_3690.element = element_3805;
		left_3690.left = left_3806;
		left_3690.right = right_3807;
		left_3690.level = level_3808;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2178() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3689 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3690 = null;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2179() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = right_3;
		int element_3689 = 0;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		AANode left_3690 = null;
		AANode right_3691 = null;
		int level_3692 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		right_3015.element = element_3689;
		right_3015.left = left_3690;
		right_3015.right = right_3691;
		right_3015.level = level_3692;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2180() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = obj.root;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2181() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = left_2182;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2182() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3014 = null;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2183() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2184() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2185() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2186() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2187() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		int element_3857 = 0;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3858 = null;
		AANode right_3859 = null;
		int level_3860 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3857;
		right_3015.left = left_3858;
		right_3015.right = right_3859;
		right_3015.level = level_3860;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2188() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.nullNode;
		int element_3857 = 1;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3858 = null;
		AANode right_3859 = null;
		int level_3860 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3857;
		right_3015.left = left_3858;
		right_3015.right = right_3859;
		right_3015.level = level_3860;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2189() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2190() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2191() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2192() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2193() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_3885 = 0;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3886 = null;
		AANode right_3887 = null;
		int level_3888 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3885;
		right_3015.left = left_3886;
		right_3015.right = right_3887;
		right_3015.level = level_3888;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2194() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_3885 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3886 = null;
		AANode right_3887 = null;
		int level_3888 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3885;
		right_3015.left = left_3886;
		right_3015.right = right_3887;
		right_3015.level = level_3888;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2195() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2196() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2197() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2198() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2199() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		int element_3913 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3914 = null;
		AANode right_3915 = null;
		int level_3916 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3913;
		right_3015.left = left_3914;
		right_3015.right = right_3915;
		right_3015.level = level_3916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2200() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = right_3;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		int element_3913 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3914 = null;
		AANode right_3915 = null;
		int level_3916 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3913;
		right_3015.left = left_3914;
		right_3015.right = right_3915;
		right_3015.level = level_3916;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2201() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2202() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2203() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2204() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2205() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2206() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2207() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2208() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_3941 = 0;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3942 = null;
		AANode right_3943 = null;
		int level_3944 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3941;
		right_3015.left = left_3942;
		right_3015.right = right_3943;
		right_3015.level = level_3944;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2209() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = left_3834;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_3941 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3942 = null;
		AANode right_3943 = null;
		int level_3944 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3941;
		right_3015.left = left_3942;
		right_3015.right = right_3943;
		right_3015.level = level_3944;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2210() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode right_3835 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2211() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode left_3950 = obj.root;
		int element_2181 = 1;
		int element_3949 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2212() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode left_3950 = left_2182;
		int element_2181 = 1;
		int element_3949 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2213() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode left_3950 = left_3014;
		int element_2181 = 1;
		int element_3949 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2214() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode left_3950 = right_3835;
		int element_2181 = 1;
		int element_3949 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2215() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		AANode left_3950 = null;
		int element_2181 = 1;
		int element_3949 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2216() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_3950 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		int element_2181 = 3;
		int element_3949 = 1;
		int element_3833 = 0;
		int element_3969 = 0;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		AANode left_3970 = null;
		AANode right_3971 = null;
		int level_3972 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		left_3950.element = element_3969;
		left_3950.left = left_3970;
		left_3950.right = right_3971;
		left_3950.level = level_3972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2217() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_3950 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		int element_2181 = 2;
		int element_3949 = 0;
		int element_3833 = -1;
		int element_3969 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_3951 = null;
		int level_3952 = 0;
		AANode left_3970 = null;
		AANode right_3971 = null;
		int level_3972 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		left_3950.element = element_3969;
		left_3950.left = left_3970;
		left_3950.right = right_3971;
		left_3950.level = level_3972;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2218() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		int element_3949 = -1;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3950 = null;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2219() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.nullNode;
		int element_3949 = 0;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3950 = null;
		AANode right_3951 = null;
		int level_3952 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_3949;
		right_3835.left = left_3950;
		right_3835.right = right_3951;
		right_3835.level = level_3952;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2220() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2221() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2222() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2223() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2224() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		int element_3997 = 0;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3998 = null;
		AANode right_3999 = null;
		int level_4000 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3997;
		right_3015.left = left_3998;
		right_3015.right = right_3999;
		right_3015.level = level_4000;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2225() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.nullNode;
		int element_3997 = 1;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_3998 = null;
		AANode right_3999 = null;
		int level_4000 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_3997;
		right_3015.left = left_3998;
		right_3015.right = right_3999;
		right_3015.level = level_4000;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2226() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2227() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2228() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2229() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2230() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_4025 = 0;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4026 = null;
		AANode right_4027 = null;
		int level_4028 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4025;
		right_3015.left = left_4026;
		right_3015.right = right_4027;
		right_3015.level = level_4028;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2231() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_4025 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4026 = null;
		AANode right_4027 = null;
		int level_4028 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4025;
		right_3015.left = left_4026;
		right_3015.right = right_4027;
		right_3015.level = level_4028;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2232() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2233() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2234() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2235() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2236() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		int element_4053 = 0;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4054 = null;
		AANode right_4055 = null;
		int level_4056 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4053;
		right_3015.left = left_4054;
		right_3015.right = right_4055;
		right_3015.level = level_4056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2237() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = right_3;
		int element_4053 = 1;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4054 = null;
		AANode right_4055 = null;
		int level_4056 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4053;
		right_3015.left = left_4054;
		right_3015.right = right_4055;
		right_3015.level = level_4056;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2238() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2239() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2240() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2241() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2242() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2243() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2244() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2245() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		int element_4081 = 0;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4082 = null;
		AANode right_4083 = null;
		int level_4084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4081;
		right_3015.left = left_4082;
		right_3015.right = right_4083;
		right_3015.level = level_4084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2246() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = left_3834;
		int element_4081 = 1;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4082 = null;
		AANode right_4083 = null;
		int level_4084 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4081;
		right_3015.left = left_4082;
		right_3015.right = right_4083;
		right_3015.level = level_4084;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2247() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode right_3835 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2248() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode left_4090 = obj.root;
		int element_2181 = 1;
		int element_4089 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2249() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode left_4090 = left_2182;
		int element_2181 = 1;
		int element_4089 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2250() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode left_4090 = left_3014;
		int element_2181 = 1;
		int element_4089 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2251() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode left_4090 = right_3835;
		int element_2181 = 1;
		int element_4089 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2252() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		AANode left_4090 = null;
		int element_2181 = 1;
		int element_4089 = -1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2253() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_4090 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		int element_2181 = 3;
		int element_4089 = 1;
		int element_4109 = 0;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		AANode left_4110 = null;
		AANode right_4111 = null;
		int level_4112 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		left_4090.element = element_4109;
		left_4090.left = left_4110;
		left_4090.right = right_4111;
		left_4090.level = level_4112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2254() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_4090 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		int element_2181 = 2;
		int element_4089 = 0;
		int element_4109 = 0;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4091 = null;
		int level_4092 = 0;
		AANode left_4110 = null;
		AANode right_4111 = null;
		int level_4112 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		left_4090.element = element_4109;
		left_4090.left = left_4110;
		left_4090.right = right_4111;
		left_4090.level = level_4112;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2255() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		int element_4089 = -1;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4090 = null;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2256() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2;
		int element_4089 = 0;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4090 = null;
		AANode right_4091 = null;
		int level_4092 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4089;
		right_3835.left = left_4090;
		right_3835.right = right_4091;
		right_3835.level = level_4092;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2257() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2258() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2259() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2260() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2261() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		int element_2181 = 1;
		int element_4137 = 0;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4138 = null;
		AANode right_4139 = null;
		int level_4140 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4137;
		right_3015.left = left_4138;
		right_3015.right = right_4139;
		right_3015.level = level_4140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2262() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.nullNode;
		int element_2181 = 1;
		int element_4137 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4138 = null;
		AANode right_4139 = null;
		int level_4140 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4137;
		right_3015.left = left_4138;
		right_3015.right = right_4139;
		right_3015.level = level_4140;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2263() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2264() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2265() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2266() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2267() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_4165 = 0;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4166 = null;
		AANode right_4167 = null;
		int level_4168 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4165;
		right_3015.left = left_4166;
		right_3015.right = right_4167;
		right_3015.level = level_4168;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2268() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_4165 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4166 = null;
		AANode right_4167 = null;
		int level_4168 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4165;
		right_3015.left = left_4166;
		right_3015.right = right_4167;
		right_3015.level = level_4168;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2269() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2270() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2271() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2272() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2273() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_4193 = 0;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4194 = null;
		AANode right_4195 = null;
		int level_4196 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4193;
		right_3015.left = left_4194;
		right_3015.right = right_4195;
		right_3015.level = level_4196;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2274() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = right_3;
		int element_2181 = 1;
		int element_3833 = -1;
		int element_4193 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4194 = null;
		AANode right_4195 = null;
		int level_4196 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4193;
		right_3015.left = left_4194;
		right_3015.right = right_4195;
		right_3015.level = level_4196;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2275() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2276() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2277() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2278() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		AANode right_3015 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2279() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2280() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		AANode right_3015 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2281() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		AANode right_3015 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2282() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		int element_4221 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4222 = null;
		AANode right_4223 = null;
		int level_4224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4221;
		right_3015.left = left_4222;
		right_3015.right = right_4223;
		right_3015.level = level_4224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2283() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3015 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = left_3834;
		int element_2181 = 1;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		int element_4221 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4222 = null;
		AANode right_4223 = null;
		int level_4224 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3015.element = element_4221;
		right_3015.left = left_4222;
		right_3015.right = right_4223;
		right_3015.level = level_4224;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2284() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode right_3835 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2285() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode left_4230 = obj.root;
		int element_4229 = -1;
		int element_2181 = 1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2286() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode left_4230 = left_2182;
		int element_4229 = -1;
		int element_2181 = 1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2287() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode left_4230 = left_3014;
		int element_4229 = -1;
		int element_2181 = 1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2288() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode left_4230 = right_3835;
		int element_4229 = -1;
		int element_2181 = 1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2289() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		AANode left_4230 = null;
		int element_4229 = -1;
		int element_2181 = 1;
		int element_3833 = -2;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2290() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_4230 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		int element_4229 = 1;
		int element_2181 = 3;
		int element_3833 = 0;
		int element_4249 = 0;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		AANode left_4250 = null;
		AANode right_4251 = null;
		int level_4252 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		left_4230.element = element_4249;
		left_4230.left = left_4250;
		left_4230.right = right_4251;
		left_4230.level = level_4252;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2291() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_4230 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		int element_4229 = 0;
		int element_2181 = 2;
		int element_3833 = -1;
		int element_4249 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode right_4231 = null;
		int level_4232 = 0;
		AANode left_4250 = null;
		AANode right_4251 = null;
		int level_4252 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		left_4230.element = element_4249;
		left_4230.left = left_4250;
		left_4230.right = right_4251;
		left_4230.level = level_4252;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2292() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		int element_3833 = -1;
		int element_4229 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4230 = null;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2293() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode right_3835 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = right_3;
		int element_3833 = -1;
		int element_4229 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		int level_3836 = 0;
		AANode left_4230 = null;
		AANode right_4231 = null;
		int level_4232 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		right_3835.element = element_4229;
		right_3835.left = left_4230;
		right_3835.right = right_4231;
		right_3835.level = level_4232;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2294() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = obj.root;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2295() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_2182;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2296() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = left_3014;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2297() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_3834 = null;
		int element_3833 = -1;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2298() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		AANode right_4259 = obj.root;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2299() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		AANode right_4259 = left_2182;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2300() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		AANode right_4259 = left_3014;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2301() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		AANode right_4259 = left_3834;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2302() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		AANode right_4259 = null;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2303() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_4277 = -1;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4278 = null;
		AANode right_4279 = null;
		int level_4280 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4277;
		right_4259.left = left_4278;
		right_4259.right = right_4279;
		right_4259.level = level_4280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2304() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.nullNode;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_4277 = 0;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4278 = null;
		AANode right_4279 = null;
		int level_4280 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4277;
		right_4259.left = left_4278;
		right_4259.right = right_4279;
		right_4259.level = level_4280;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2305() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		AANode right_4259 = obj.root;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2306() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		AANode right_4259 = left_2182;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2307() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		AANode right_4259 = left_3014;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2308() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		AANode right_4259 = left_3834;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2309() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		AANode right_4259 = null;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2310() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		int element_4257 = -1;
		int element_4301 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4302 = null;
		AANode right_4303 = null;
		int level_4304 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4301;
		right_4259.left = left_4302;
		right_4259.right = right_4303;
		right_4259.level = level_4304;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2311() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2;
		int element_4257 = -1;
		int element_4301 = 0;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4302 = null;
		AANode right_4303 = null;
		int level_4304 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4301;
		right_4259.left = left_4302;
		right_4259.right = right_4303;
		right_4259.level = level_4304;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2312() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		AANode right_4259 = obj.root;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2313() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		AANode right_4259 = left_2182;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2314() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		AANode right_4259 = left_3014;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2315() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		AANode right_4259 = left_3834;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2316() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		AANode right_4259 = null;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2317() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		int element_4257 = -1;
		int element_4325 = -1;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4326 = null;
		AANode right_4327 = null;
		int level_4328 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4325;
		right_4259.left = left_4326;
		right_4259.right = right_4327;
		right_4259.level = level_4328;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2318() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode right_4259 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = right_3;
		int element_4257 = -1;
		int element_4325 = 0;
		int element_2181 = 2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		int level_4260 = 0;
		AANode left_4326 = null;
		AANode right_4327 = null;
		int level_4328 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		right_4259.element = element_4325;
		right_4259.left = left_4326;
		right_4259.right = right_4327;
		right_4259.level = level_4328;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2319() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = obj.root;
		int element_3833 = -1;
		int element_4257 = -2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2320() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_2182;
		int element_3833 = -1;
		int element_4257 = -2;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2321() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_3014;
		int element_3833 = 0;
		int element_4257 = -1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2322() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = left_3834;
		int element_3833 = 0;
		int element_4257 = -1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2323() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4258 = null;
		int element_3833 = 0;
		int element_4257 = -1;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2324() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = obj.root;
		int element_4257 = -2;
		int element_2181 = 1;
		int element_4333 = -3;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2325() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = left_2182;
		int element_4257 = -2;
		int element_2181 = 1;
		int element_4333 = -3;
		int element_3833 = -1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2326() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = left_3014;
		int element_4257 = -1;
		int element_2181 = 2;
		int element_4333 = -2;
		int element_3833 = 0;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2327() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = left_3834;
		int element_4257 = 0;
		int element_2181 = 3;
		int element_4333 = -1;
		int element_3833 = 1;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2328() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = left_4258;
		int element_4257 = 0;
		int element_2181 = 3;
		int element_4333 = -1;
		int element_3833 = 1;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2329() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		AANode left_4334 = null;
		int element_4257 = 0;
		int element_2181 = 3;
		int element_4333 = -1;
		int element_3833 = 1;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2330() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_4334 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		int element_4257 = 1;
		int element_2181 = 4;
		int element_4349 = 0;
		int element_4333 = 0;
		int element_3833 = 2;
		int level_4 = 0;
		int element_3013 = 3;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode right_4335 = null;
		int level_4336 = 0;
		AANode left_4350 = null;
		AANode right_4351 = null;
		int level_4352 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		left_4334.element = element_4349;
		left_4334.left = left_4350;
		left_4334.right = right_4351;
		left_4334.level = level_4352;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2331() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_4258 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		int element_4257 = 0;
		int element_2181 = 3;
		int element_4333 = 0;
		int element_3833 = 1;
		int level_4 = 0;
		int element_3013 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode right_4259 = null;
		int level_4260 = 0;
		AANode left_4334 = null;
		AANode right_4335 = null;
		int level_4336 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		left_4258.element = element_4333;
		left_4258.left = left_4334;
		left_4258.right = right_4335;
		left_4258.level = level_4336;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2332() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_3834 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		int element_3833 = 0;
		int element_4257 = 0;
		int element_2181 = 2;
		int level_4 = 0;
		int element_3013 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode right_3835 = null;
		int level_3836 = 0;
		AANode left_4258 = null;
		AANode right_4259 = null;
		int level_4260 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		left_3834.element = element_4257;
		left_3834.left = left_4258;
		left_3834.right = right_4259;
		left_3834.level = level_4260;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2333() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_3014 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		int element_3833 = 0;
		int element_2181 = 1;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode right_3015 = null;
		int level_3016 = 0;
		AANode left_3834 = null;
		AANode right_3835 = null;
		int level_3836 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		left_3014.element = element_3833;
		left_3014.left = left_3834;
		left_3014.right = right_3835;
		left_3014.level = level_3836;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2334() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_2182 = new AANode();
		AANode left_2 = obj.nullNode;
		AANode right_3 = left_2;
		int element_2181 = 0;
		int level_4 = 0;
		int element_3013 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_2183 = null;
		int level_2184 = 0;
		AANode left_3014 = null;
		AANode right_3015 = null;
		int level_3016 = 0;
		obj.root.element = element_2181;
		obj.root.left = left_2182;
		obj.root.right = right_2183;
		obj.root.level = level_2184;
		left_2182.element = element_3013;
		left_2182.left = left_3014;
		left_2182.right = right_3015;
		left_2182.level = level_3016;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2335() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = obj.nullNode;
		AANode right_3 = null;
		int level_4 = 0;
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2336() throws Exception {
		AATree obj = new AATree();
		AANode right_3 = new AANode();
		AANode left_2 = obj.nullNode;
		int level_4 = 0;
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		int element_4357 = 0;
		AANode left_4358 = null;
		AANode right_4359 = null;
		int level_4360 = 0;
		right_3.element = element_4357;
		right_3.left = left_4358;
		right_3.right = right_4359;
		right_3.level = level_4360;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2337() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = null;
		int level_4 = 0;
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_3 = null;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

	@Test
	public void test_wellFormed2338() throws Exception {
		AATree obj = new AATree();
		AANode left_2 = new AANode();
		int level_4 = 0;
		obj.root = null;
		obj.deletedNode = null;
		obj.lastNode = null;
		int element_1 = 0;
		AANode right_3 = null;
		int element_4361 = 0;
		AANode left_4362 = null;
		AANode right_4363 = null;
		int level_4364 = 0;
		left_2.element = element_4361;
		left_2.left = left_4362;
		left_2.right = right_4363;
		left_2.level = level_4364;
		if(Utilities.repOK(obj)) {obj.remove(0);}
		//obj.wellFormed();
	}

}

