package gov.nasa.jpf.star.examples.aatree;

import gov.nasa.jpf.star.examples.aatree.AATree.AANode;
import gov.nasa.jpf.star.examples.Utilities;
import org.junit.Test;
import gov.nasa.jpf.util.test.TestJPF;

public class AATree_remove1 extends TestJPF {

	@Test
	public void test_remove1() throws Exception {
		AATree obj = new AATree();
		obj.root = obj.nullNode;
		AANode b_2 = null;
		AANode c_3 = null;
		int d_4 = 0;
		int x = 0;
		int a_1 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove2() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_6 = obj.nullNode;
		AANode left_372 = obj.nullNode;
		AANode right_371 = obj.nullNode;
		int level_8 = 1;
		int d_4 = 0;
		int element_370 = 2;
		int level_325 = 1;
		int element_5 = 1;
		int a_1 = 0;
		int element_324 = 1;
		int x = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_370;
		right_7.left = left_372;
		right_7.right = right_371;
		right_7.level = level_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove3() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_13 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode right_14 = obj.nullNode;
		AANode left_442 = this_nullNode_329;
		AANode right_441 = this_nullNode_329;
		AANode left_450 = this_nullNode_332;
		AANode right_449 = this_nullNode_332;
		int level_8 = 2;
		int element_327 = 0;
		int level_326 = 2;
		int element_12 = -1;
		int a_1 = 0;
		int element_5 = 0;
		int level1_23 = 1;
		int level1_331 = 1;
		int element_448 = 3;
		int d_4 = 0;
		int element_20 = 2;
		int element_330 = 2;
		int element_328 = 2;
		int level1_10 = 1;
		int element_440 = 1;
		int element_324 = -1;
		int x = -2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_326;
		left_21.element = element_440;
		left_21.left = left_442;
		left_21.right = right_441;
		left_21.level = level1_23;
		right_22.element = element_448;
		right_22.left = left_450;
		right_22.right = right_449;
		right_22.level = level1_331;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove4() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_14 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_331 = obj.nullNode;
		AANode left_13 = obj.nullNode;
		AANode left_441 = this_nullNode_328;
		AANode right_440 = this_nullNode_328;
		AANode left_449 = this_nullNode_331;
		AANode right_448 = this_nullNode_331;
		int level_8 = 2;
		int element_327 = 2;
		int element_12 = -2;
		int a_1 = 0;
		int element_5 = 0;
		int level_325 = 2;
		int level1_330 = 1;
		int element_326 = 0;
		int level1_23 = 1;
		int element_329 = 2;
		int element_447 = 3;
		int d_4 = 0;
		int element_20 = 2;
		int element_439 = 1;
		int level1_10 = 1;
		int element_324 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_439;
		left_21.left = left_441;
		left_21.right = right_440;
		left_21.level = level1_23;
		right_22.element = element_447;
		right_22.left = left_449;
		right_22.right = right_448;
		right_22.level = level1_330;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove5() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_30 = new AANode();
		AANode right_22 = new AANode();
		AANode right_46 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_14 = obj.nullNode;
		AANode right_34 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode left_13 = obj.nullNode;
		AANode left_33 = this_nullNode_329;
		AANode left_45 = this_nullNode_333;
		AANode left_524 = this_nullNode_336;
		AANode right_523 = this_nullNode_336;
		int level_8 = 2;
		int element_332 = 1;
		int element_327 = -2;
		int element_12 = -4;
		int a_1 = 0;
		int element_5 = -3;
		int element_28 = -2;
		int level_325 = 2;
		int level1_330 = 1;
		int element_522 = 2;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level1_335 = 1;
		int element_334 = 1;
		int element_20 = 0;
		int element_328 = -1;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_331 = 0;
		int element_324 = -4;
		int x = -4;
		int element_32 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_30.element = element_32;
		right_30.left = left_33;
		right_30.right = right_34;
		right_30.level = level1_326;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_330;
		right_46.element = element_522;
		right_46.left = left_524;
		right_46.right = right_523;
		right_46.level = level1_335;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove6() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_30 = new AANode();
		AANode right_22 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_14 = obj.nullNode;
		AANode right_34 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode left_13 = obj.nullNode;
		AANode left_33 = this_nullNode_329;
		AANode left_45 = this_nullNode_333;
		AANode right_46 = this_nullNode_336;
		int level_8 = 2;
		int element_332 = 1;
		int element_327 = -2;
		int element_12 = -4;
		int a_1 = 0;
		int element_5 = -3;
		int element_28 = -2;
		int level_325 = 2;
		int level1_330 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_334 = 1;
		int element_20 = 0;
		int element_328 = -1;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_331 = 0;
		int element_324 = -4;
		int x = -4;
		int element_32 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_30.element = element_32;
		right_30.left = left_33;
		right_30.right = right_34;
		right_30.level = level1_326;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_330;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove7() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_14 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode left_13 = obj.nullNode;
		AANode left_45 = this_nullNode_329;
		int level_8 = 2;
		int element_327 = 0;
		int element_12 = -3;
		int a_1 = 0;
		int element_5 = -2;
		int element_28 = -1;
		int level_325 = 2;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_20 = 0;
		int element_328 = 1;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_324 = -3;
		int x = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove8() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_21 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode right_22 = obj.nullNode;
		int level_8 = 1;
		int d_4 = 0;
		int level_324 = 1;
		int element_20 = 1;
		int a_1 = 0;
		int element_5 = -1;
		int x = 0;
		int element_325 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove9() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_21 = obj.nullNode;
		AANode right_22 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int level_8 = 1;
		int d_4 = 0;
		int level_324 = 1;
		int element_20 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int x = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove10() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_46 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode left_13 = this_nullNode_335;
		AANode left_508 = this_nullNode_333;
		AANode right_507 = this_nullNode_333;
		AANode left_520 = this_nullNode_339;
		AANode right_519 = this_nullNode_339;
		int level_8 = 2;
		int element_28 = 2;
		int element_326 = 3;
		int element_5 = 0;
		int element_336 = -2;
		int element_337 = 0;
		int level1_23 = 1;
		int element_44 = 4;
		int d_4 = 0;
		int level1_332 = 1;
		int level_324 = 2;
		int element_334 = -2;
		int element_328 = 3;
		int level1_10 = 1;
		int level1_338 = 1;
		int element_12 = -2;
		int a_1 = 0;
		int element_506 = 5;
		int element_329 = 4;
		int level1_327 = 1;
		int element_20 = 3;
		int element_518 = -1;
		int element_331 = 4;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_46.element = element_506;
		right_46.left = left_508;
		right_46.right = right_507;
		right_46.level = level1_332;
		right_14.element = element_518;
		right_14.left = left_520;
		right_14.right = right_519;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove11() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_46 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		AANode left_508 = this_nullNode_333;
		AANode right_507 = this_nullNode_333;
		int level_8 = 2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_326 = 0;
		int element_336 = -4;
		int element_337 = -3;
		int element_506 = 2;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_332 = 1;
		int level1_327 = 1;
		int element_334 = -4;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int element_331 = 1;
		int x = -2;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_46.element = element_506;
		right_46.left = left_508;
		right_46.right = right_507;
		right_46.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove12() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode right_46 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode left_524 = this_nullNode_339;
		AANode right_523 = this_nullNode_339;
		int level_8 = 2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -5;
		int element_326 = 0;
		int element_336 = -5;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int element_522 = -4;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_334 = -5;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int level1_338 = 1;
		int element_331 = 1;
		int x = -2;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_14.element = element_522;
		right_14.left = left_524;
		right_14.right = right_523;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove13() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_29 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode right_46 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		int level_8 = 2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_326 = 0;
		int element_336 = -4;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_334 = -4;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int element_331 = 1;
		int x = -2;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove14() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_29 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode left_442 = obj.nullNode;
		AANode right_441 = obj.nullNode;
		int level_8 = 2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int level_325 = 2;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_20 = 0;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_440 = -3;
		int element_324 = -2;
		int x = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_326;
		left_6.element = element_440;
		left_6.left = left_442;
		left_6.right = right_441;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove15() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_46 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode left_13 = this_nullNode_335;
		AANode left_506 = this_nullNode_333;
		AANode right_505 = this_nullNode_333;
		AANode left_518 = this_nullNode_339;
		AANode right_517 = this_nullNode_339;
		int level_8 = 2;
		int element_28 = -2;
		int element_326 = -2;
		int element_5 = -3;
		int element_336 = -5;
		int element_337 = -3;
		int element_516 = -4;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_332 = 1;
		int element_334 = -5;
		int element_504 = 2;
		int element_328 = 0;
		int level1_10 = 1;
		int level1_338 = 1;
		int element_12 = -5;
		int a_1 = 0;
		int element_329 = 1;
		int level1_327 = 1;
		int element_20 = 0;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_46.element = element_504;
		right_46.left = left_506;
		right_46.right = right_505;
		right_46.level = level1_332;
		right_14.element = element_516;
		right_14.left = left_518;
		right_14.right = right_517;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove16() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_46 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		AANode left_506 = this_nullNode_333;
		AANode right_505 = this_nullNode_333;
		int level_8 = 2;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_326 = -2;
		int element_336 = -4;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_332 = 1;
		int level1_327 = 1;
		int element_334 = -4;
		int element_504 = 2;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_46.element = element_504;
		right_46.left = left_506;
		right_46.right = right_505;
		right_46.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove17() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode right_46 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode left_522 = this_nullNode_339;
		AANode right_521 = this_nullNode_339;
		int level_8 = 2;
		int element_520 = -4;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -5;
		int element_326 = -2;
		int element_336 = -5;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_334 = -5;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int level1_338 = 1;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_14.element = element_520;
		right_14.left = left_522;
		right_14.right = right_521;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove18() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode left_29 = obj.nullNode;
		AANode left_45 = this_nullNode_330;
		AANode right_46 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		int level_8 = 2;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_326 = -2;
		int element_336 = -4;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_334 = -4;
		int element_20 = 0;
		int element_328 = 0;
		int level1_10 = 1;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove19() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode right_46 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode left_57 = obj.nullNode;
		AANode right_58 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode left_29 = this_nullNode_328;
		AANode left_471 = obj.nullNode;
		AANode right_470 = obj.nullNode;
		int level_8 = 2;
		int element_327 = -1;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_56 = 2;
		int level_325 = 2;
		int element_326 = -2;
		int level1_330 = 1;
		int level1_329 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_469 = -3;
		int element_20 = 0;
		int level1_10 = 1;
		int element_324 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_329;
		right_46.element = element_56;
		right_46.left = left_57;
		right_46.right = right_58;
		right_46.level = level1_330;
		left_6.element = element_469;
		left_6.left = left_471;
		left_6.right = right_470;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove20() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_21 = new AANode();
		AANode right_22 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_30 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode left_29 = this_nullNode_328;
		AANode left_449 = obj.nullNode;
		AANode right_448 = obj.nullNode;
		int level_8 = 2;
		int element_327 = -1;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int level_325 = 2;
		int element_326 = -2;
		int level1_329 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int element_447 = -3;
		int d_4 = 0;
		int element_20 = 0;
		int level1_10 = 1;
		int element_324 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_23;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_329;
		left_6.element = element_447;
		left_6.left = left_449;
		left_6.right = right_448;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove21() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_22 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_21 = obj.nullNode;
		int level_8 = 1;
		int d_4 = 0;
		int level_324 = 1;
		int element_20 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_326 = -1;
		int x = 0;
		int element_325 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove22() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_22 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		AANode left_21 = obj.nullNode;
		int level_8 = 1;
		int d_4 = 0;
		int level_324 = 1;
		int element_20 = 0;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 0;
		int x = 0;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove23() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_30 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode left_13 = this_nullNode_335;
		AANode left_508 = this_nullNode_333;
		AANode right_507 = this_nullNode_333;
		AANode left_520 = this_nullNode_339;
		AANode right_519 = this_nullNode_339;
		int level_8 = 2;
		int element_327 = -3;
		int element_28 = -2;
		int element_336 = -5;
		int element_5 = -3;
		int element_337 = -3;
		int level1_23 = 1;
		int element_44 = 2;
		int d_4 = 0;
		int level1_332 = 1;
		int level_324 = 2;
		int element_334 = -5;
		int element_330 = -2;
		int element_328 = -2;
		int level1_10 = 1;
		int level1_338 = 1;
		int element_12 = -5;
		int a_1 = 0;
		int element_506 = -1;
		int element_20 = 0;
		int element_518 = -4;
		int level1_326 = 1;
		int element_331 = 0;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_30.element = element_506;
		right_30.left = left_508;
		right_30.right = right_507;
		right_30.level = level1_332;
		right_14.element = element_518;
		right_14.left = left_520;
		right_14.right = right_519;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove24() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_30 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		AANode left_508 = this_nullNode_333;
		AANode right_507 = this_nullNode_333;
		int level_8 = 2;
		int element_327 = -3;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_336 = -4;
		int element_337 = -3;
		int element_506 = -1;
		int level1_23 = 1;
		int element_44 = 2;
		int d_4 = 0;
		int level_324 = 2;
		int level1_332 = 1;
		int element_334 = -4;
		int element_20 = 0;
		int element_330 = -2;
		int element_328 = -2;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_331 = 0;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_30.element = element_506;
		right_30.left = left_508;
		right_30.right = right_507;
		right_30.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove25() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode right_30 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode left_524 = this_nullNode_339;
		AANode right_523 = this_nullNode_339;
		int level_8 = 2;
		int element_327 = -2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_12 = -4;
		int element_336 = -4;
		int element_337 = -2;
		int level1_23 = 1;
		int element_522 = -3;
		int element_44 = 2;
		int d_4 = 0;
		int level_324 = 2;
		int element_334 = -4;
		int element_20 = 0;
		int element_330 = -1;
		int element_328 = -1;
		int level1_10 = 1;
		int level1_326 = 1;
		int level1_338 = 1;
		int element_331 = 0;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_14.element = element_522;
		right_14.left = left_524;
		right_14.right = right_523;
		right_14.level = level1_338;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove26() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode this_nullNode_335 = obj.nullNode;
		AANode this_nullNode_339 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode right_30 = this_nullNode_333;
		AANode left_13 = this_nullNode_335;
		AANode right_14 = this_nullNode_339;
		int level_8 = 2;
		int element_327 = -2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_12 = -3;
		int element_336 = -3;
		int element_337 = -2;
		int level1_23 = 1;
		int element_44 = 2;
		int d_4 = 0;
		int level_324 = 2;
		int element_334 = -3;
		int element_20 = 0;
		int element_330 = -1;
		int element_328 = -1;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_331 = 0;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove27() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode right_30 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode right_34 = obj.nullNode;
		AANode left_33 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode left_477 = obj.nullNode;
		AANode right_476 = obj.nullNode;
		int level_8 = 2;
		int element_475 = -4;
		int element_327 = -3;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int level_325 = 2;
		int level1_330 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_20 = 0;
		int element_328 = -2;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_324 = -3;
		int x = 0;
		int element_32 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		right_30.element = element_32;
		right_30.left = left_33;
		right_30.right = right_34;
		right_30.level = level1_330;
		left_6.element = element_475;
		left_6.left = left_477;
		left_6.right = right_476;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove28() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_45 = obj.nullNode;
		AANode right_46 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode left_29 = this_nullNode_329;
		AANode left_454 = obj.nullNode;
		AANode right_453 = obj.nullNode;
		int level_8 = 2;
		int element_327 = -2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int level_325 = 2;
		int level1_23 = 1;
		int element_44 = 1;
		int element_452 = -3;
		int d_4 = 0;
		int element_20 = 0;
		int element_328 = -1;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_324 = -2;
		int x = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_326;
		left_6.element = element_452;
		left_6.left = left_454;
		left_6.right = right_453;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove29() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_30 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_334 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode this_nullNode_340 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode left_29 = this_nullNode_330;
		AANode left_13 = this_nullNode_336;
		AANode left_509 = this_nullNode_334;
		AANode right_508 = this_nullNode_334;
		AANode left_521 = this_nullNode_340;
		AANode right_520 = this_nullNode_340;
		int level_8 = 2;
		int element_332 = 0;
		int element_28 = -2;
		int element_326 = 1;
		int element_5 = -3;
		int element_337 = -5;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_339 = 1;
		int element_328 = -3;
		int level1_10 = 1;
		int element_335 = -5;
		int element_338 = -3;
		int element_12 = -5;
		int a_1 = 0;
		int element_329 = -2;
		int level1_327 = 1;
		int element_507 = -1;
		int element_519 = -4;
		int element_20 = 0;
		int level1_333 = 1;
		int element_331 = -2;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_30.element = element_507;
		right_30.left = left_509;
		right_30.right = right_508;
		right_30.level = level1_333;
		right_14.element = element_519;
		right_14.left = left_521;
		right_14.right = right_520;
		right_14.level = level1_339;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove30() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_30 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_334 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode this_nullNode_340 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode left_29 = this_nullNode_330;
		AANode left_13 = this_nullNode_336;
		AANode right_14 = this_nullNode_340;
		AANode left_509 = this_nullNode_334;
		AANode right_508 = this_nullNode_334;
		int level_8 = 2;
		int element_332 = 0;
		int element_338 = -3;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int element_12 = -4;
		int element_326 = 1;
		int element_337 = -4;
		int level1_23 = 1;
		int element_329 = -2;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_507 = -1;
		int element_20 = 0;
		int element_328 = -3;
		int level1_10 = 1;
		int element_335 = -4;
		int level1_333 = 1;
		int element_331 = -2;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_30.element = element_507;
		right_30.left = left_509;
		right_30.right = right_508;
		right_30.level = level1_333;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove31() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode right_14 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_334 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode this_nullNode_340 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode left_29 = this_nullNode_330;
		AANode right_30 = this_nullNode_334;
		AANode left_13 = this_nullNode_336;
		AANode left_525 = this_nullNode_340;
		AANode right_524 = this_nullNode_340;
		int level_8 = 2;
		int element_332 = 0;
		int element_338 = -2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_12 = -4;
		int element_326 = 1;
		int element_337 = -4;
		int level1_23 = 1;
		int element_329 = -1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int level1_339 = 1;
		int element_20 = 0;
		int element_328 = -2;
		int level1_10 = 1;
		int element_335 = -4;
		int element_331 = -1;
		int element_523 = -3;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		right_14.element = element_523;
		right_14.left = left_525;
		right_14.right = right_524;
		right_14.level = level1_339;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove32() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_334 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode this_nullNode_340 = obj.nullNode;
		AANode left_45 = obj.nullNode;
		AANode left_29 = this_nullNode_330;
		AANode right_30 = this_nullNode_334;
		AANode left_13 = this_nullNode_336;
		AANode right_14 = this_nullNode_340;
		int level_8 = 2;
		int element_332 = 0;
		int element_338 = -2;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int element_12 = -3;
		int element_326 = 1;
		int element_337 = -3;
		int level1_23 = 1;
		int element_329 = -1;
		int element_44 = 1;
		int d_4 = 0;
		int level_324 = 2;
		int level1_327 = 1;
		int element_20 = 0;
		int element_328 = -2;
		int level1_10 = 1;
		int element_335 = -3;
		int element_331 = -1;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_324;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_327;
		left_6.element = element_12;
		left_6.left = left_13;
		left_6.right = right_14;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove33() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode right_30 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode right_34 = obj.nullNode;
		AANode left_33 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_45 = this_nullNode_328;
		AANode left_29 = this_nullNode_332;
		AANode left_484 = obj.nullNode;
		AANode right_483 = obj.nullNode;
		int level_8 = 2;
		int element_482 = -4;
		int element_327 = 1;
		int element_28 = -2;
		int a_1 = 0;
		int element_5 = -3;
		int level_325 = 2;
		int element_326 = 0;
		int level1_329 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_20 = 0;
		int element_330 = -3;
		int level1_10 = 1;
		int level1_333 = 1;
		int element_331 = -2;
		int element_324 = -3;
		int x = 1;
		int element_32 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_329;
		right_30.element = element_32;
		right_30.left = left_33;
		right_30.right = right_34;
		right_30.level = level1_333;
		left_6.element = element_482;
		left_6.left = left_484;
		left_6.right = right_483;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove34() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_22 = new AANode();
		AANode left_21 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_46 = obj.nullNode;
		AANode right_30 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_45 = this_nullNode_328;
		AANode left_29 = this_nullNode_332;
		AANode left_461 = obj.nullNode;
		AANode right_460 = obj.nullNode;
		int level_8 = 2;
		int element_327 = 1;
		int element_28 = -1;
		int a_1 = 0;
		int element_5 = -2;
		int level_325 = 2;
		int element_326 = 0;
		int element_459 = -3;
		int level1_329 = 1;
		int level1_23 = 1;
		int element_44 = 1;
		int d_4 = 0;
		int element_20 = 0;
		int element_330 = -2;
		int level1_10 = 1;
		int element_331 = -1;
		int element_324 = -2;
		int x = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_20;
		right_7.left = left_21;
		right_7.right = right_22;
		right_7.level = level_325;
		right_22.element = element_44;
		right_22.left = left_45;
		right_22.right = right_46;
		right_22.level = level1_23;
		left_21.element = element_28;
		left_21.left = left_29;
		left_21.right = right_30;
		left_21.level = level1_329;
		left_6.element = element_459;
		left_6.left = left_461;
		left_6.right = right_460;
		left_6.level = level1_10;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove35() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_6 = obj.nullNode;
		AANode right_7 = obj.nullNode;
		int element_5 = 1;
		int level_8 = 1;
		int d_4 = 0;
		int element_324 = 1;
		int x = 0;
		int a_1 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove36() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode right_86 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode left_433 = obj.nullNode;
		AANode right_432 = obj.nullNode;
		AANode left_445 = this_nullNode_333;
		AANode right_444 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_431 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_332 = 1;
		int element_443 = 2;
		int element_328 = 0;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_84 = -2;
		int element_331 = 1;
		int element_324 = -2;
		int x = -3;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		right_86.element = element_431;
		right_86.left = left_433;
		right_86.right = right_432;
		right_86.level = level1_326;
		right_94.element = element_443;
		right_94.left = left_445;
		right_94.right = right_444;
		right_94.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove37() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode right_94 = this_nullNode_333;
		AANode left_433 = obj.nullNode;
		AANode right_432 = obj.nullNode;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_431 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int level1_326 = 1;
		int element_84 = -2;
		int element_331 = 1;
		int element_324 = -2;
		int x = -3;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		right_86.element = element_431;
		right_86.left = left_433;
		right_86.right = right_432;
		right_86.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove38() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_97 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode left_476 = this_nullNode_333;
		AANode right_475 = this_nullNode_333;
		int level_8 = 2;
		int element_474 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = 0;
		int element_96 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_332 = 1;
		int level1_324 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -3;
		int element_331 = 1;
		int x = -2;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		right_94.element = element_474;
		right_94.left = left_476;
		right_94.right = right_475;
		right_94.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove39() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_97 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode right_94 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = 0;
		int element_96 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_324 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -3;
		int element_331 = 1;
		int x = -2;
		int element_325 = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove40() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_97 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_459 = this_nullNode_330;
		AANode right_458 = this_nullNode_330;
		int level_8 = 2;
		int element_92 = 1;
		int level1_325 = 1;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = 0;
		int element_96 = -1;
		int level1_329 = 1;
		int d_4 = 0;
		int level1_324 = 1;
		int element_328 = 1;
		int element_457 = 2;
		int level1_10 = 1;
		int element_84 = -2;
		int x = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		right_94.element = element_457;
		right_94.left = left_459;
		right_94.right = right_458;
		right_94.level = level1_329;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove41() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_97 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode right_94 = this_nullNode_330;
		int level_8 = 2;
		int element_92 = 1;
		int level1_325 = 1;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = 0;
		int element_96 = -1;
		int d_4 = 0;
		int level1_324 = 1;
		int element_328 = 1;
		int level1_10 = 1;
		int element_84 = -2;
		int x = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove42() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode left_474 = this_nullNode_333;
		AANode right_473 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = -2;
		int element_96 = -2;
		int element_329 = 1;
		int d_4 = 0;
		int level1_332 = 1;
		int level1_324 = 1;
		int level1_327 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -3;
		int element_472 = 2;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		right_94.element = element_472;
		right_94.left = left_474;
		right_94.right = right_473;
		right_94.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove43() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode right_94 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = -2;
		int element_96 = -2;
		int element_329 = 1;
		int d_4 = 0;
		int level1_324 = 1;
		int level1_327 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -3;
		int element_331 = 1;
		int x = -1;
		int element_325 = -3;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove44() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode left_474 = this_nullNode_333;
		AANode right_473 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = -1;
		int element_96 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_332 = 1;
		int level1_324 = 1;
		int level1_327 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int element_472 = 2;
		int element_331 = 1;
		int x = -1;
		int element_325 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		right_94.element = element_472;
		right_94.left = left_474;
		right_94.right = right_473;
		right_94.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove45() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_98 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode left_93 = this_nullNode_330;
		AANode right_94 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = -1;
		int element_96 = -1;
		int element_329 = 1;
		int d_4 = 0;
		int level1_324 = 1;
		int level1_327 = 1;
		int element_328 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int element_331 = 1;
		int x = -1;
		int element_325 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_324;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_327;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove46() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode right_86 = obj.nullNode;
		AANode left_93 = this_nullNode_329;
		AANode left_446 = this_nullNode_332;
		AANode right_445 = this_nullNode_332;
		int level_8 = 2;
		int element_444 = 2;
		int element_92 = 1;
		int element_327 = 0;
		int a_1 = 0;
		int element_5 = 0;
		int level1_331 = 1;
		int d_4 = 0;
		int element_330 = 1;
		int element_328 = 1;
		int level1_10 = 1;
		int element_84 = -1;
		int level1_326 = 1;
		int element_324 = -1;
		int x = -2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_326;
		right_94.element = element_444;
		right_94.left = left_446;
		right_94.right = right_445;
		right_94.level = level1_331;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove47() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_85 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode right_86 = obj.nullNode;
		AANode left_93 = this_nullNode_329;
		AANode right_94 = this_nullNode_332;
		int level_8 = 2;
		int element_92 = 1;
		int element_327 = 0;
		int a_1 = 0;
		int element_5 = 0;
		int d_4 = 0;
		int element_330 = 1;
		int element_328 = 1;
		int level1_10 = 1;
		int element_84 = -1;
		int level1_326 = 1;
		int element_324 = -1;
		int x = -2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove48() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_86 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_331 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode left_93 = this_nullNode_328;
		AANode left_445 = this_nullNode_331;
		AANode right_444 = this_nullNode_331;
		int level_8 = 2;
		int element_92 = 1;
		int level1_325 = 1;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int level1_330 = 1;
		int element_326 = 0;
		int element_329 = 1;
		int d_4 = 0;
		int element_443 = 2;
		int level1_10 = 1;
		int element_84 = -2;
		int element_324 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		right_94.element = element_443;
		right_94.left = left_445;
		right_94.right = right_444;
		right_94.level = level1_330;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove49() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_86 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_331 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode left_93 = this_nullNode_328;
		AANode right_94 = this_nullNode_331;
		int level_8 = 2;
		int element_92 = 1;
		int level1_325 = 1;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = 0;
		int element_329 = 1;
		int d_4 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int element_324 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove50() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_86 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode right_122 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		int level_8 = 2;
		int element_92 = 0;
		int level1_325 = 1;
		int a_1 = 0;
		int element_5 = -1;
		int d_4 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int element_120 = 1;
		int level1_326 = 1;
		int element_324 = -2;
		int x = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove51() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode left_6 = new AANode();
		AANode right_7 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_86 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode right_94 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		int level_8 = 2;
		int d_4 = 0;
		int element_92 = 1;
		int level1_325 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int level1_10 = 1;
		int element_84 = -1;
		int element_324 = -1;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_10;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove52() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_7 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_5 = -1;
		int level_8 = 1;
		int d_4 = 0;
		int element_324 = -1;
		int x = 0;
		int a_1 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove53() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_7 = obj.nullNode;
		AANode left_6 = obj.nullNode;
		int element_5 = 0;
		int level_8 = 1;
		int d_4 = 0;
		int element_324 = 0;
		int x = 0;
		int a_1 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove54() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_94 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode left_434 = obj.nullNode;
		AANode right_433 = obj.nullNode;
		AANode left_446 = this_nullNode_332;
		AANode right_445 = this_nullNode_332;
		int level_8 = 2;
		int element_444 = -1;
		int level1_325 = 1;
		int element_92 = 2;
		int element_327 = -2;
		int a_1 = 0;
		int element_5 = 0;
		int level1_331 = 1;
		int element_329 = -2;
		int d_4 = 0;
		int element_330 = 0;
		int element_432 = 3;
		int level1_10 = 1;
		int element_84 = -2;
		int level1_326 = 1;
		int element_324 = 2;
		int x = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		right_94.element = element_432;
		right_94.left = left_434;
		right_94.right = right_433;
		right_94.level = level1_325;
		right_86.element = element_444;
		right_86.left = left_446;
		right_86.right = right_445;
		right_86.level = level1_331;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove55() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_94 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode right_86 = this_nullNode_332;
		AANode left_434 = obj.nullNode;
		AANode right_433 = obj.nullNode;
		int level_8 = 2;
		int level1_325 = 1;
		int element_92 = 2;
		int element_327 = -1;
		int a_1 = 0;
		int element_5 = 0;
		int element_329 = -1;
		int d_4 = 0;
		int element_330 = 0;
		int element_432 = 3;
		int level1_10 = 1;
		int element_84 = -1;
		int level1_326 = 1;
		int element_324 = 2;
		int x = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		right_94.element = element_432;
		right_94.left = left_434;
		right_94.right = right_433;
		right_94.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove56() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode right_122 = this_nullNode_329;
		AANode left_85 = this_nullNode_332;
		AANode left_484 = this_nullNode_336;
		AANode right_483 = this_nullNode_336;
		int level_8 = 2;
		int element_482 = -2;
		int element_92 = 0;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int level1_330 = 1;
		int element_333 = -3;
		int d_4 = 0;
		int level1_335 = 1;
		int level1_324 = 1;
		int element_334 = -1;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -3;
		int element_331 = -3;
		int x = -1;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_330;
		right_86.element = element_482;
		right_86.left = left_484;
		right_86.right = right_483;
		right_86.level = level1_335;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove57() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode this_nullNode_336 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode right_122 = this_nullNode_329;
		AANode left_85 = this_nullNode_332;
		AANode right_86 = this_nullNode_336;
		int level_8 = 2;
		int element_92 = 0;
		int element_327 = 1;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int level1_330 = 1;
		int element_333 = -2;
		int d_4 = 0;
		int level1_324 = 1;
		int element_334 = -1;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -2;
		int element_331 = -2;
		int x = -1;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_330;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove58() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_121 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode right_122 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode left_473 = this_nullNode_332;
		AANode right_472 = this_nullNode_332;
		int level_8 = 2;
		int element_92 = 0;
		int element_327 = -3;
		int a_1 = 0;
		int element_5 = -1;
		int level1_331 = 1;
		int element_329 = -3;
		int d_4 = 0;
		int element_471 = -2;
		int level1_324 = 1;
		int element_330 = -1;
		int level1_10 = 1;
		int element_120 = 2;
		int element_84 = -3;
		int level1_326 = 1;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		right_86.element = element_471;
		right_86.left = left_473;
		right_86.right = right_472;
		right_86.level = level1_331;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove59() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_121 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode right_122 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode right_86 = this_nullNode_332;
		int level_8 = 2;
		int element_92 = 0;
		int element_327 = -2;
		int a_1 = 0;
		int element_5 = -1;
		int element_329 = -2;
		int d_4 = 0;
		int level1_324 = 1;
		int element_330 = -1;
		int level1_10 = 1;
		int element_120 = 2;
		int element_84 = -2;
		int level1_326 = 1;
		int x = 1;
		int element_325 = 2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove60() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_121 = obj.nullNode;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode left_459 = this_nullNode_330;
		AANode right_458 = this_nullNode_330;
		int level_8 = 2;
		int element_92 = 0;
		int level1_325 = 1;
		int element_327 = -3;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = -3;
		int level1_329 = 1;
		int d_4 = 0;
		int level1_324 = 1;
		int element_328 = -1;
		int element_457 = -2;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -3;
		int x = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_325;
		right_86.element = element_457;
		right_86.left = left_459;
		right_86.right = right_458;
		right_86.level = level1_329;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove61() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_121 = obj.nullNode;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_330 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		AANode right_86 = this_nullNode_330;
		int level_8 = 2;
		int element_92 = 0;
		int level1_325 = 1;
		int element_327 = -2;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = -2;
		int d_4 = 0;
		int level1_324 = 1;
		int element_328 = -1;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -2;
		int x = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove62() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode left_85 = this_nullNode_329;
		AANode left_474 = this_nullNode_333;
		AANode right_473 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 0;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_332 = 1;
		int level1_324 = 1;
		int element_330 = -3;
		int element_328 = -3;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -3;
		int element_331 = -1;
		int element_472 = -2;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_327;
		right_86.element = element_472;
		right_86.left = left_474;
		right_86.right = right_473;
		right_86.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove63() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode left_85 = this_nullNode_329;
		AANode right_86 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 0;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_324 = 1;
		int element_330 = -2;
		int element_328 = -2;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -2;
		int element_331 = -1;
		int x = 2;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_327;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove64() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode left_85 = this_nullNode_329;
		AANode left_474 = this_nullNode_333;
		AANode right_473 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 0;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_332 = 1;
		int level1_324 = 1;
		int element_330 = -3;
		int element_328 = -3;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -3;
		int element_331 = -1;
		int element_472 = -2;
		int x = 1;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_327;
		right_86.element = element_472;
		right_86.left = left_474;
		right_86.right = right_473;
		right_86.level = level1_332;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove65() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode right_94 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_122 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_329 = obj.nullNode;
		AANode this_nullNode_333 = obj.nullNode;
		AANode left_121 = obj.nullNode;
		AANode left_85 = this_nullNode_329;
		AANode right_86 = this_nullNode_333;
		int level_8 = 2;
		int element_92 = 0;
		int a_1 = 0;
		int element_5 = -1;
		int element_326 = 1;
		int d_4 = 0;
		int level1_327 = 1;
		int level1_324 = 1;
		int element_330 = -2;
		int element_328 = -2;
		int level1_10 = 1;
		int element_120 = 1;
		int element_84 = -2;
		int element_331 = -1;
		int x = 1;
		int element_325 = 0;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		right_94.element = element_120;
		right_94.left = left_121;
		right_94.right = right_122;
		right_94.level = level1_324;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_327;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove66() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_327 = obj.nullNode;
		AANode this_nullNode_331 = obj.nullNode;
		AANode right_94 = obj.nullNode;
		AANode left_85 = this_nullNode_327;
		AANode left_447 = this_nullNode_331;
		AANode right_446 = this_nullNode_331;
		int level_8 = 2;
		int element_92 = 2;
		int level1_325 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_326 = -2;
		int level1_330 = 1;
		int element_445 = -1;
		int element_329 = 0;
		int d_4 = 0;
		int element_328 = -2;
		int level1_10 = 1;
		int element_84 = -2;
		int element_324 = 2;
		int x = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_325;
		right_86.element = element_445;
		right_86.left = left_447;
		right_86.right = right_446;
		right_86.level = level1_330;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove67() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode this_nullNode_327 = obj.nullNode;
		AANode this_nullNode_331 = obj.nullNode;
		AANode right_94 = obj.nullNode;
		AANode left_85 = this_nullNode_327;
		AANode right_86 = this_nullNode_331;
		int level_8 = 2;
		int element_92 = 0;
		int level1_325 = 1;
		int a_1 = 0;
		int element_5 = -2;
		int element_326 = -3;
		int element_329 = -2;
		int d_4 = 0;
		int element_328 = -3;
		int level1_10 = 1;
		int element_84 = -3;
		int element_324 = 0;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_325;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove68() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode right_94 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		int level_8 = 2;
		int element_92 = 1;
		int a_1 = 0;
		int element_5 = 0;
		int element_96 = -1;
		int d_4 = 0;
		int level1_324 = 1;
		int level1_10 = 1;
		int element_84 = -2;
		int level1_326 = 1;
		int x = 0;
		int element_325 = -2;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_324;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove69() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode left_93 = obj.nullNode;
		AANode right_94 = obj.nullNode;
		AANode right_86 = obj.nullNode;
		AANode left_85 = obj.nullNode;
		int element_325 = -2;
		int level_8 = 2;
		int d_4 = 0;
		int element_92 = 0;
		int level1_324 = 1;
		int a_1 = 0;
		int element_5 = -1;
		int level1_10 = 1;
		int element_84 = -2;
		int x = -1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_324;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove70() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_94 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode left_448 = this_nullNode_332;
		AANode right_447 = this_nullNode_332;
		int element_446 = -1;
		int level_8 = 2;
		int element_92 = 1;
		int element_327 = -2;
		int a_1 = 0;
		int element_5 = 0;
		int level1_331 = 1;
		int element_329 = -2;
		int d_4 = 0;
		int element_330 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int level1_326 = 1;
		int element_324 = 0;
		int x = 2;
		int element_325 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		right_86.element = element_446;
		right_86.left = left_448;
		right_86.right = right_447;
		right_86.level = level1_331;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove71() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_94 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode this_nullNode_332 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		AANode right_86 = this_nullNode_332;
		int level_8 = 2;
		int element_92 = 1;
		int element_327 = -1;
		int a_1 = 0;
		int element_5 = 0;
		int element_329 = -1;
		int d_4 = 0;
		int element_330 = 0;
		int level1_10 = 1;
		int element_84 = -1;
		int level1_326 = 1;
		int element_324 = 0;
		int x = 2;
		int element_325 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove72() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode right_86 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_94 = obj.nullNode;
		AANode right_98 = obj.nullNode;
		AANode left_97 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		int level_8 = 2;
		int element_92 = 1;
		int element_327 = -2;
		int a_1 = 0;
		int element_5 = 0;
		int element_96 = -1;
		int level1_329 = 1;
		int d_4 = 0;
		int level1_10 = 1;
		int element_84 = -2;
		int level1_326 = 1;
		int element_324 = 0;
		int x = 1;
		int element_325 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		right_86.element = element_96;
		right_86.left = left_97;
		right_86.right = right_98;
		right_86.level = level1_329;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

	@Test
	public void test_remove73() throws Exception {
		AATree obj = new AATree();
		obj.root = new AANode();
		AANode right_7 = new AANode();
		AANode left_6 = new AANode();
		AANode b_2 = null;
		AANode c_3 = null;
		AANode right_94 = obj.nullNode;
		AANode right_86 = obj.nullNode;
		AANode this_nullNode_328 = obj.nullNode;
		AANode left_93 = obj.nullNode;
		AANode left_85 = this_nullNode_328;
		int level_8 = 2;
		int element_92 = 1;
		int element_327 = -1;
		int a_1 = 0;
		int element_5 = 0;
		int d_4 = 0;
		int level1_10 = 1;
		int element_84 = -1;
		int level1_326 = 1;
		int element_324 = 0;
		int x = 1;
		int element_325 = 1;
		obj.deletedNode = null;
		obj.lastNode = null;
		obj.root.element = element_5;
		obj.root.left = left_6;
		obj.root.right = right_7;
		obj.root.level = level_8;
		right_7.element = element_92;
		right_7.left = left_93;
		right_7.right = right_94;
		right_7.level = level1_10;
		left_6.element = element_84;
		left_6.left = left_85;
		left_6.right = right_86;
		left_6.level = level1_326;
		System.out.println(Utilities.repOK(obj));
		obj.remove(x);
	}

}

